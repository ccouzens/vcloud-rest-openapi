openapi: 3.1.0
info:
  title: vCloud Director OpenAPI
  version: '2019-03-25T19:48:54.360-07:00'
components:
  schemas:
    AllocatedIpAddress:
      type: object
      description: Describes an allocated IP address
      properties:
        id:
          type: string
          description: Unique identifier for record. This is to support UI operations.
        entityId:
          type: string
          description: Id of the entity to which the IP address is allocated such
            as a VM.
        entityName:
          type: string
          description: Name of the entity to which the IP address is allocated.
        vAppName:
          type: string
          description: Name of the vApp whose VM is using allocated IP address.
        ipAddress:
          type: string
          description: The allocated IP address.
        deployed:
          type: boolean
          description: Whether the entity using this IP address is currently deployed.
        allocationType:
          $ref: '#/components/schemas/AllocatedIpAddressAllocationType'
          description: The possible allocation types for allocated network address
            like VSM allocated, VM allocated or NAT routed.
    AllocatedIpAddressAllocationType:
      type: string
      description: The possible allocation types for allocated network address.
      enum:
        - VM_ALLOCATED
        - NAT_ROUTED
        - VSM_ALLOCATED
    BackingNetworkType:
      type: string
      description: The backing network type.
      enum:
        - DV_PORTGROUP
        - VIRTUAL_WIRE
        - IMPORTED_T_LOGICAL_SWITCH
        - OPAQUE_NETWORK
        - NSXT_FIXED_SEGMENT
        - NSXT_FLEXIBLE_SEGMENT
    Capability:
      type: object
      description: Describes a capability of an entity.
      properties:
        name:
          type: string
          description: The name of the capability.
          readOnly: true
        description:
          type: string
          description: Description of the capability as it relates to the entity.
          readOnly: true
        value:
          type: object
          description: The value of the capability.
          properties: {}
        type:
          $ref: '#/components/schemas/CapabilityValueType'
          description: The type of the value.
        category:
          $ref: '#/components/schemas/CapabilityCategory'
          description: The category of the capabilities listed.
    CapabilityCategory:
      type: string
      description: Describes the category of the capbilitiy
      enum:
        - EdgeGateway
        - VAppNetwork
        - OrgVdcNetwork
        - Infra
    CapabilityValueType:
      type: string
      description: Describes the object type of the capability value.
      enum:
        - Boolean
        - String
    CommonNsxTRouterFields:
      type: object
      description: Common fields that all Tier-0 or Tier-1 routers have.
      properties:
        id:
          type: string
          description: The unique id of the router. Field is sortable.
        description:
          type: string
          description: The description of the router.
        displayName:
          type: string
          description: Name used in NSX-T's logs or GUI. Field is sortable.
    Constraint:
      type: object
      properties:
        constraintType:
          type: string
      required:
        - constraintType
      discriminator: constraintType
    CreateCustomEntityTypeAction:
      type: object
      properties:
        workflowId:
          type: string
          description: 'uuid of workflow.

            '
        workflowInputParameter:
          type: string
          description: 'Name of input parameter of given workflow to which this custom
            entity type should be mapped.

            '
      required:
        - workflowId
        - workflowInputParameter
    CustomEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/definitions/CustomEntity'
    CustomEntity:
      type: object
      properties:
        id:
          type: string
          description: 'UUID of custom entity

            '
        name:
          type: string
        customEntityTypeId:
          type: string
          description: 'This refers to UUID of custom entity type

            '
      required:
        - name
    CustomEntityType:
      type: object
      properties:
        id:
          type: string
          description: 'UUID for custom entity type. This is immutable.

            '
        vroId:
          type: string
        vroDynamicType:
          type: string
          description: 'This refers to VRO''s dynamic type.

            '
        name:
          type: string
          description: 'Display name.

            '
        nss:
          type: string
          description: 'This refers to a unique namespace specific string.

            '
        description:
          type: string
          default: ''
        tenantScoped:
          type: boolean
          default: true
        providerScoped:
          type: boolean
          default: true
        publishAll:
          type: boolean
          description: 'Read-only value indicating publishAll state

            '
          default: false
    CustomEntityTypeAction:
      type: object
      properties:
        name:
          type: string
          description: 'Name of workflow

            '
        workflowId:
          type: string
          description: 'UUID of workflow.

            '
        workflowInputParameter:
          type: string
          description: 'Name of input parameter of given workflow to which this custom
            entity type should be mapped.

            '
      required:
        - name
        - workflowId
    CustomEntityTypeActions:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/definitions/CustomEntityTypeAction'
    Decorator:
      type: object
      properties:
        decoratorType:
          type: string
      required:
        - decoratorType
      discriminator: decoratorType
    EdgeCluster:
      type: object
      description: An Edge Cluster object.
      properties:
        id:
          type: string
          description: The id of the Edge Cluster in URN format.
        name:
          type: string
          description: The name of the Edge Cluster. Names for Edge Clusters must
            be unique across the system.
        description:
          type: string
        resourcePool:
          $ref: '#/components/schemas/ResourcePool'
          description: The Resource Pool in vCenter where the Edge VM will be deployed.
        storageProfileName:
          type: string
          description: Name of the Storage Profile. This will define the set of datastores
            where the edge vm will be deployed.
    EdgeGateway:
      type: object
      description: An edge gateway object
      properties:
        id:
          type: string
          description: The unique identifier of the edge gateway.
        name:
          type: string
          description: The name of the edge gateway.
        description:
          type: string
          description: The description of the edge gateway(optional).
        edgeGatewayUplinks:
          type: array
          description: The uplink connections for the edge gateway.
          items:
            $ref: '#/definitions/EdgeGatewayUplink'
        gatewayBacking:
          $ref: '#/components/schemas/EdgeGatewayBacking'
          description: The backing details of the edge gateway; only required if importing
            an NSX-T router.
        orgVdc:
          $ref: '#/components/schemas/EntityReference'
          description: The organization vDC which the gateway belongs to.
    EdgeGatewayBacking:
      type: object
      description: The backing details of the edge gateway
      properties:
        backingId:
          type: string
          description: The identifier of the edge gateways backing router.
        gatewayType:
          $ref: '#/components/schemas/EdgeGatewayType'
          description: The type of the gateway. Describes if this is an NSX-T edge
            gateway or an NSX-V edge gateway.
        networkProvider:
          $ref: '#/components/schemas/EntityReference'
          description: The backing network provider, either NSX-T or NSX-V.
    EdgeGatewayType:
      type: string
      description: The type of the edge gateway.
      enum:
        - NSXV_BACKED
        - NSXT_BACKED
        - NSXT_IMPORTED
    EdgeGatewayUplink:
      type: object
      description: The uplink for the edge gateway along with ip suballocations
      properties:
        uplinkId:
          type: string
          description: The identifier of the uplink this edge gateway is connected
            to.
        subnets:
          $ref: '#/components/schemas/Subnets'
          description: Set of subnets this edge will have access to. Gateway can either
            be provided or left blank for each subnet, and if left blank will be assigned.
    EgressPoint:
      type: object
      description: An Egress Point.
      properties:
        id:
          type: string
          description: The unique ID for the Universal Egress Point (read-only).
        vdcRef:
          $ref: '#/components/schemas/EntityReference'
          description: The Org vDC the Universal Egress Point belongs to.
        gatewayRef:
          $ref: '#/components/schemas/EntityReference'
          description: The Edge Gateway the Egress Point is referring to.
        networkProviderScope:
          type: string
          description: Read-only field that specifies the network provider scope of
            the Universal Egress Point (inherited from the Org vDC).
        isUsedForRouting:
          type: boolean
          description: Specifies whether the egress point is being used for Universal
            Routing. This is a read-only field.
        status:
          $ref: '#/components/schemas/VdcGroupEntityStatus'
          description: The status of the Universal Egress Point.
        errorMessage:
          type: string
    EgressPointReference:
      type: object
      description: An EgressPoint reference object for use in universal routing.
      properties:
        egressPointId:
          type: string
          description: The id of the Universal Egress Point reference.
        vdcRef:
          $ref: '#/components/schemas/EntityReference'
          description: The Org vDC of the Universal Egress Point reference.
        gatewayRef:
          $ref: '#/components/schemas/EntityReference'
          description: The Edge Gateway of the Universal Egress Point reference.
    EgressPoints:
      type: object
      description: List of Egress Points.
      properties:
        values:
          type: array
          description: The list of Universal Egress Points.
          items:
            $ref: '#/definitions/EgressPoint'
    EmailSettings:
      type: object
      description: Email related settings for a system
      properties:
        defaultSmtpServer:
          type: boolean
          description: 'Flag indicating if the smtp server settings are system default
            (true) or a particular organization (false)

            '
        defaultOrgEmail:
          type: boolean
          description: 'Flag indicating if the email settings are system default (true)
            or for a particular organization (false)

            '
        smtpServer:
          $ref: '#/components/schemas/SmtpServerSpec'
        senderEmailAddress:
          type: string
          description: 'Sender email address in an email notification or alert

            '
        defaultEmailSubjectPrefix:
          type: string
          description: 'The prefix used in the email subject line for all email notifications
            and alerts from the system

            '
        alertEmailToAllAdmins:
          type: boolean
          description: 'A flag to indicate the choice between sending alert emails
            to all system

            administrators in the system and designated list of email recipients

            '
        alertEmailTo:
          type: string
          description: 'A comma separated email addresses to send all alert messages
            to

            '
    EntityReference:
      type: object
      description: Entity reference used to describe VCD entities
      properties:
        name:
          type: string
        id:
          type: string
    Error:
      type: object
      description: Error type format displayed to users for exceptions emerging from
        openapi endpoints.
      properties:
        minorErrorCode:
          type: string
        message:
          type: string
        stackTrace:
          type: string
      required:
        - message
        - minorErrorCode
    ExecutionContext:
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: '#/definitions/WsParameter'
    ExecutionState:
      type: string
      enum:
        - canceled
        - completed
        - running
        - suspended
        - waiting
        - waiting-signal
        - failed
        - initializing
    ExecutionSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        startedBy:
          type: string
        state:
          $ref: '#/components/schemas/ExecutionState'
    ExtensionPoint:
      type: object
      description: Extension Point of a UI Plugin
      properties:
        extensionPointId:
          type: string
        pluginId:
          type: string
        name:
          type: string
        enabled:
          type: boolean
      required:
        - enabled
        - extensionPointId
        - pluginId
    ExtensionPointSummary:
      type: object
      description: A map of extension Points and an ordered list of items registered
        with that extension point
      properties:
        extensionPointRegistrations:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/definitions/ExtensionPoint'
    ExternalNetworkBacking:
      type: object
      description: Information about an external network backing.
      properties:
        backingId:
          type: string
          description: Unique identifier for the network backing in NSX/vCenter.
        backingType:
          $ref: '#/components/schemas/ExternalNetworkBackingType'
          description: Type of network backing.
        networkProvider:
          $ref: '#/components/schemas/EntityReference'
          description: The Network Provider for the backing, either a vCenter Server
            or NSX-T Manager.
    ExternalNetworkBackingType:
      type: string
      description: The type of the external network backing.
      enum:
        - PORTGROUP
        - DV_PORTGROUP
        - NSXT_TIER0
        - UNKNOWN
    ExternalNetworkBackings:
      type: object
      description: List of External Network backings.
      properties:
        values:
          type: array
          items:
            $ref: '#/definitions/ExternalNetworkBacking'
    IpRange:
      type: object
      description: An IpRange
      properties:
        startAddress:
          type: string
          description: Starting IP address in the range.
        endAddress:
          type: string
          description: Ending IP address in the range.
    IpRanges:
      type: object
      description: List of IpRange
      properties:
        values:
          type: array
          items:
            $ref: '#/definitions/IpRange'
    LdapConnectionTestResult:
      type: object
      description: Provides LDAP connection test results
      properties:
        successful:
          type: boolean
          description: Flag for whether connection test was successful
        error:
          $ref: '#/components/schemas/Error'
      required:
        - successful
    LdapGroupAttributesType:
      type: object
      description: Defines how a group is imported from LDAP.
      properties:
        objectClass:
          type: string
        objectIdentifier:
          type: string
        groupName:
          type: string
        membership:
          type: string
        membershipIdentifier:
          type: string
        backLinkIdentifier:
          type: string
    LdapSettings:
      type: object
      description: LDAP Settings Specification
      properties:
        hostName:
          type: string
        port:
          type: integer
        isSsl:
          type: boolean
        isSslAcceptAll:
          type: boolean
        realm:
          type: string
        pagedSearchDisabled:
          type: boolean
        pageSize:
          type: integer
        maxResults:
          type: integer
        maxUserGroups:
          type: integer
        searchBase:
          type: string
        userName:
          type: string
        password:
          type: string
        authenticationMechanism:
          type: string
          enum:
            - SIMPLE
            - KERBEROS
            - M5DIGEST
            - NTLM
        groupSearchBase:
          type: string
        isGroupSearchBaseEnabled:
          type: boolean
        connectorType:
          type: string
          enum:
            - ACTIVE_DIRECTORY
            - OPEN_LDAP
        userAttributes:
          $ref: '#/components/schemas/LdapUserAttributesType'
        groupAttributes:
          $ref: '#/components/schemas/LdapGroupAttributesType'
        useExternalKerberos:
          type: boolean
    LdapSettingsTestResult:
      type: object
      description: Provides test attribute, result, and success boolean
      properties:
        attribute:
          type: string
          description: LDAP attribute being tested
          enum:
            - USER_OBJECT_IDENTIFIER
            - USERNAME
            - USER_EMAIL
            - USER_DISPLAY_NAME
            - USER_GIVEN_NAME
            - USER_SURNAME
            - USER_TELEPHONE
            - GROUP_NAME
            - GROUP_OBJECT_IDENTIFIER
        attributeValue:
          type: string
          description: Value of LDAP user attribute being tested
        result:
          type: string
          description: Result of LADP user attribute being tested (what LDAP server
            returned)
        successful:
          type: boolean
          description: Flag to indicate if the attribute is successful or not
      required:
        - successful
    LdapTestResult:
      type: object
      description: Provides LDAP connection and settings test results
      properties:
        connectionTest:
          $ref: '#/components/schemas/LdapConnectionTestResult'
        settingsTest:
          type: array
          items:
            $ref: '#/definitions/LdapSettingsTestResult'
    LdapUserAttributesType:
      type: object
      description: Defines how LDAP attributes are used when importing a user.
      properties:
        objectClass:
          type: string
        objectIdentifier:
          type: string
        userName:
          type: string
        email:
          type: string
        fullName:
          type: string
        givenName:
          type: string
        surname:
          type: string
        telephone:
          type: string
        groupMembershipIdentifier:
          type: string
        groupBackLinkIdentifier:
          type: string
    Link:
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/definitions/WsAttribute'
        href:
          type: string
        rel:
          type: string
        type:
          type: string
        name:
          type: string
    LogicalVmGroup:
      type: object
      properties:
        id:
          type: string
          description: 'UUID for LogicalVmGroup. This is immutable.

            '
        description:
          type: string
          default: ''
        name:
          type: string
          description: 'Display name.

            '
        namedVmGroupReferences:
          type: array
          description: 'List of named vm groups associated with logical vm group.

            '
          items:
            $ref: '#/definitions/EntityReference'
      required:
        - name
    Network:
      type: object
      description: A network Object.
      properties:
        id:
          type: string
          description: The unique ID for the network. This field is read-only.
        name:
          type: string
          description: The name of the network.
        description:
          type: string
          description: The description of the network.
        subnets:
          $ref: '#/components/schemas/Subnets'
          description: List of subnets configured for the network.
    OrgVdcNetworkStatus:
      type: string
      description: 'Represents status of a Org Vdc network. This value will be PENDING
        if the network has been recorded by VCD but has not been fully configured,

        CONFIGURING if the network is in transition, REALIZED if the existing state
        of the network has been fully realized, or REALIZED_FAILED if there

        was an error creating the network.'
      enum:
        - PENDING
        - CONFIGURING
        - REALIZED
        - REALIZATION_FAILED
    OverallStatus:
      type: string
      description: Overall status of the entity
      enum:
        - GRAY
        - RED
        - YELLOW
        - GREEN
    Page:
      type: object
      description: 'Collection of paging-related metadata to be included by composition
        via allOf. This type

        should be included in pageable responses to avoid duplicating these common
        properties. It

        is intended to be included by composition rather than inheritance. Because
        of this, it has

        no discriminator and should be embedded via allOf. See QueryResults for a
        reference usage.'
      properties:
        resultTotal:
          type: integer
          description: How many results there are in total (i.e., considering all
            pages).
        pageCount:
          type: integer
          description: How many pages there are in total.
        page:
          type: integer
          description: The page that was fetched, 1-indexed.
        pageSize:
          type: integer
          description: Result count for page that was fetched.
    Parameter:
      type: object
      properties:
        inputType:
          type: string
      required:
        - inputType
      discriminator: inputType
    ParameterTypes:
      type: object
      properties:
        sdkObject:
          $ref: '#/components/schemas/SdkObject'
        string:
          $ref: '#/components/schemas/StringParam'
        secureString:
          $ref: '#/components/schemas/SecureString'
        number:
          $ref: '#/components/schemas/NumberParam'
        mimeAttachment:
          $ref: '#/components/schemas/MimeAttachment'
        properties:
          $ref: '#/components/schemas/Properties'
        date:
          $ref: '#/components/schemas/DateParam'
        boolean:
          $ref: '#/components/schemas/BooleanParam'
        composite:
          $ref: '#/components/schemas/CompositeType'
        regex:
          $ref: '#/components/schemas/Regex'
        encryptedString:
          $ref: '#/components/schemas/EncryptedString'
        keyValuePair:
          $ref: '#/components/schemas/KeyValuePair'
        compositeValue:
          $ref: '#/components/schemas/CompositeValue'
        array:
          $ref: '#/components/schemas/ArrayParam'
    ParticipatingVdcReference:
      type: object
      description: A participating vDC
      properties:
        vdcRef:
          $ref: '#/components/schemas/EntityReference'
          description: The reference to the vDC that is part of this a vDC group.
        orgRef:
          $ref: '#/components/schemas/EntityReference'
          description: Read-only field that specifies what organization this vDC is
            in.
        siteRef:
          $ref: '#/components/schemas/EntityReference'
          description: The site ID that this vDC belongs to.
        networkProviderScope:
          type: string
          description: Read-only field that specifies the network provider scope of
            the vDC.
        remoteOrg:
          type: boolean
          description: Read-only field that specifies whether the vDC is local to
            this VCD cell cluster.
        status:
          $ref: '#/components/schemas/VdcGroupEntityStatus'
          description: The status that the vDC can be in. An example is if the vDC
            has been deleted from the system but is still part of the group.
      required:
        - siteRef
        - vdcRef
    Preference:
      type: object
      properties:
        classifier:
          type: string
          description: 'unique indetifier for this preference definition. It will
            be of type <scope>:<name>.

            e.g vrops:myworkflow. This is immutable

            '
        name:
          type: string
          description: 'Display name. This is same as preference definition name and
            is immutable.

            '
        value:
          type: string
      required:
        - classifier
        - name
        - value
    PreferenceDefinition:
      type: object
      description: The Preference Definition is immutable.
      properties:
        id:
          type: string
          description: 'UUID for preference definition. This is immutable.

            '
        name:
          type: string
          description: 'Display name.

            '
        description:
          type: string
          description: 'Description for user preference

            '
          default: ''
        classifier:
          type: string
          description: 'unique indetifier for this preference definition. It should
            be of type <scope>:<name>.

            e.g vrops:myworkflow. This is immutable.

            '
        dataType:
          type: string
          description: user preference value data type. This is immutable.
          enum:
            - BOOLEAN
            - INTEGER
            - STRING
        constrained:
          type: boolean
          description: 'true if user preference is selected from list of values (dataType
            should be number or string), false otherwise. This is immutable.

            '
        minValue:
          type: number
          description: 'minimum value for user preference. Only valid if user preference
            type is number. This is immutable.

            '
        maxValue:
          type: number
          description: 'maximum value for user preference. Only valid if user preference
            type is number. This is immutable.

            '
        defaultValue:
          type: string
        allowedValues:
          type: array
          description: array of allowed values to select from when constrained is
            true.. This is immutable after creation.
          items:
            type: string
      required:
        - classifier
        - constrained
        - dataType
        - defaultValue
        - name
    Presentation:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        vroId:
          type: string
        inputParameters:
          type: array
          items:
            $ref: '#/definitions/WsParameter'
        name:
          type: string
        outputParameters:
          type: array
          items:
            $ref: '#/definitions/WsParameter'
        steps:
          type: array
          items:
            $ref: '#/definitions/StepInfo'
    PresentationElement:
      type: object
      properties:
        elementType:
          type: string
        description:
          type: string
        displayName:
          type: string
        hidden:
          type: boolean
        id:
          type: string
        messages:
          type: array
          items:
            $ref: '#/definitions/PresentationMessageInfo'
      required:
        - elementType
      discriminator: elementType
    PresentationExecution:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        objectId:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/definitions/WsParameter'
        startDate:
          type: string
          format: date-time
        startedBy:
          type: string
        steps:
          type: array
          items:
            $ref: '#/definitions/StepInfo'
        valid:
          type: boolean
    PresentationExecutionsList:
      type: object
      properties:
        total:
          type: integer
          format: int32
        executions:
          type: array
          items:
            $ref: '#/definitions/ExecutionSummary'
        start:
          type: integer
          format: int32
    PresentationMessageInfo:
      type: object
      properties:
        code:
          type: string
        details:
          type: string
        severity:
          type: string
          enum:
            - INFO
            - WARNING
            - ERROR
        summary:
          type: string
    PvdcComputePolicy:
      type: object
      properties:
        id:
          type: string
          description: 'UUID for pVDC compute policy. This is immutable.

            '
        name:
          type: string
          description: 'Display name.

            '
        description:
          type: string
          default: ''
        pvdcId:
          type: string
          description: 'URN for Provider VDC.

            '
        namedVmGroupReferences:
          type: array
          description: 'This field cannot be updated and is a read-only field in the
            client after creation.

            '
          items:
            $ref: '#/definitions/EntityReference'
        logicalVmGroupReferences:
          type: array
          description: 'This field cannot be updated and is a read-only field after
            creation.

            '
          items:
            $ref: '#/definitions/EntityReference'
          x-vcloud-added-in: 32
    Relations:
      type: object
      properties:
        total:
          type: integer
          format: int32
        link:
          type: array
          items:
            $ref: '#/definitions/Link'
        start:
          type: integer
          format: int32
    ResourcePool:
      type: object
      description: A vCenter Resource Pool.
      properties:
        moref:
          type: string
          description: The vCenter Id of the Resource Pool. It must be in the format
            (resgroup-#).
        name:
          type: string
          description: The name of the Resource Pool.
        vcId:
          type: string
          description: The vCenter the Resource Pool belongs to.
    Right:
      type: object
      description: Right
      properties:
        name:
          type: string
          maxLength: 128
        id:
          type: string
          maxLength: 128
          x-vcloud-constraints:
            - constraint: Urn
            - constraint: ReadOnly
        description:
          type: string
          maxLength: 256
        bundleKey:
          type: string
          maxLength: 128
        category:
          type: string
          minLength: 1
          maxLength: 128
          x-vcloud-constraints:
            - constraint: Urn
        serviceNamespace:
          type: string
          minLength: 1
          maxLength: 128
          x-vcloud-constraints:
            - constraint: ReadOnly
        rightType:
          type: string
          enum:
            - VIEW
            - MODIFY
        impliedRights:
          type: array
          description: The set of implied rights.
          items:
            $ref: '#/definitions/EntityReference'
          x-vcloud-added-in: 32
          x-vcloud-constraints:
            - constraint: ReadOnly
      required:
        - name
    RightsCategoryNode:
      type: object
      description: RightsCategoryNode
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
        id:
          type: string
          x-vcloud-constraints:
            - constraint: Urn
            - constraint: ReadOnly
        bundleKey:
          type: string
          maxLength: 128
        parent:
          type: string
          x-vcloud-constraints:
            - constraint: Urn
        rightsCount:
          $ref: '#/components/schemas/RightsCount'
        subCategories:
          type: array
          items:
            type: string
            x-vcloud-constraints:
              - constraint: Urn
      required:
        - bundleKey
        - name
    RightsCount:
      type: object
      description: RightsCount - A count of rights in a given category by type
      properties:
        view:
          type: integer
          x-vcloud-constraints:
            - constraint: ReadOnly
        modify:
          type: integer
          x-vcloud-constraints:
            - constraint: ReadOnly
    RightsMapping:
      type: object
      description: RightsMapping
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
        id:
          type: string
          maxLength: 128
          x-vcloud-constraints:
            - constraint: Urn
            - constraint: ReadOnly
        description:
          type: string
          minLength: 1
          maxLength: 256
        bundleKey:
          type: string
          minLength: 1
          maxLength: 128
          x-vcloud-constraints:
            - constraint: ReadOnly
        readOnly:
          type: boolean
          x-vcloud-constraints:
            - constraint: ReadOnly
      required:
        - description
        - name
    RouterComponentHealth:
      type: object
      description: A ComponentHealth object
      properties:
        component:
          type: string
        status:
          $ref: '#/components/schemas/RouterComponentStatus'
        message:
          type: string
        action:
          type: string
        code:
          type: integer
    RouterComponentStatus:
      type: string
      description: Status of a router component.
      enum:
        - UP
        - DOWN
    RouterConnection:
      type: object
      description: Describes the connection between a routed network and an edge gateway.
        This must be set if converting from an isolated to a routed network.
      properties:
        routerRef:
          $ref: '#/components/schemas/EntityReference'
          description: The edge gateway that this network is attached to.
        connectionType:
          $ref: '#/components/schemas/VdcNetworkConnectionType'
          description: How the network is connected to the edge gateway. This field
            is updatable to allow conversions between different types.
    RouterDnsConfig:
      type: object
      description: A RouterDnsConfig object
      properties:
        enabled:
          type: boolean
        nameServers:
          type: array
          items:
            type: string
    RouterHealthReport:
      type: object
      description: Health Report of a Router
      properties:
        nsxManagersHealth:
          type: array
          description: 'Status of all the nsx managers spanned by the universal router.

            '
          items:
            $ref: '#/definitions/RouterComponentHealth'
        controlVmHealth:
          type: array
          description: 'Status of all the universal router control VMs within each
            network provider scope.

            This also includes status of egress points and routes configured for the
            universal router.

            '
          items:
            $ref: '#/definitions/RouterComponentHealth'
        controlPlaneHealth:
          $ref: '#/components/schemas/RouterComponentHealth'
          description: Status of the nsx controller cluster associated with the nsx
            managers.
        vdcReachabilityStatus:
          type: array
          description: 'Reachability status for local and remote participating vDC''s
            of referenced vDC group.

            States whether a vDC is reachable from this local site.

            '
          items:
            $ref: '#/definitions/RouterComponentHealth'
    Sddc:
      type: object
      description: Software-defined data center
      properties:
        name:
          type: string
          example: SDDC Sample Name
        id:
          type: string
          x-vcloud-constraints:
            - constraint: NonSortable
            - constraint: ReadOnly
            - constraint: Urn
        description:
          type: string
          example: SDDC Sample Description
          default: ''
          x-vcloud-constraints:
            - constraint: NonSearchable
            - constraint: NonSortable
        enabled:
          type: boolean
          default: false
        vcId:
          type: string
          example: urn:vcloud:vimserver:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
          description: URN of the associated vCenter. This is not editable once the
            SDDC has been created.
          x-vcloud-constraints:
            - constraint: NonSortable
        version:
          type: string
          example: 6.7.0
          description: Version of the associated vCenter. This is not editable.
          x-vcloud-constraints:
            - constraint: NonSortable
            - constraint: NonSearchable
            - constraint: ReadOnly
        overallStatus:
          $ref: '#/components/schemas/OverallStatus'
          description: Overall status of the associated vCenter. This is not editable.
        stats:
          $ref: '#/components/schemas/SddcStats'
          description: Associated read-only statistics.
        defaultProxy:
          $ref: '#/components/schemas/SddcProxy'
          description: 'Default proxy for the SDDC. This field is read-only. To set
            a new default, edit the proxy

            you wish to make the new default by modifying its defaultProxy flag.'
      required:
        - name
        - vcId
    SddcProxy:
      type: object
      description: SDDC proxy configuration
      properties:
        name:
          type: string
          example: SDDC Proxy Sample Name
        id:
          type: string
          x-vcloud-constraints:
            - constraint: NonSortable
            - constraint: ReadOnly
            - constraint: Urn
        sddcId:
          type: string
          example: urn:vcloud:sddc:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
          description: URN of the parent SDDC. This is not editable once the proxy
            has been created.
          x-vcloud-constraints:
            - constraint: Urn
        enabled:
          type: boolean
          description: 'True if the proxy is enabled. Proxy can only be enabled/disabled
            by privileged users.

            A disabled proxy cannot be activated and thus, cannot be used.

            When a proxy is disabled, all active sessions are terminated.

            '
          default: true
        tenantVisible:
          type: boolean
          description: Whether this proxy has been published to tenants.
          default: false
        targetHost:
          type: string
          example: sampleVc.vmware.com
          description: IP address or FQDN of the host being proxied. This is not editable
            once the proxy has been created.
        active:
          type: boolean
          description: 'True if the proxy is currently active for the user session
            associated with the

            request made to get the proxy. An inactive proxy cannot be used.

            '
          default: false
          x-vcloud-constraints:
            - constraint: NonSearchable
            - constraint: NonSortable
        token:
          type: string
          description: 'The generated read-only token that should be used as the password
            when using this proxy.

            To generate a new token, activate the proxy. The token is tied to the
            user session that activated the proxy.

            If the proxy is inactive, this value will be null.

            '
          x-vcloud-constraints:
            - constraint: NonSearchable
            - constraint: NonSortable
            - constraint: ReadOnly
        defaultProxy:
          type: boolean
          description: 'True if this is the default proxy for the parent SDDC. A proxy
            being the default for the

            SDDC means that this proxy''s UI will be launched when the SDDC tile is
            clicked in the

            H5 Tenant UI of VCD. If no default proxy is set, clicking the SDDC tile
            will be a no-op.

            '
          default: false
        parentProxyId:
          type: string
          example: urn:vcloud:sddcProxy:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
          description: 'The URN of the parent proxy. If a proxy has a parent, the
            proxy is activated along with

            its parent and shares the token with its parent. Each proxy may only have
            one parent.

            A parent proxy cannot have a parent of its own.

            '
          x-vcloud-constraints:
            - constraint: NonSortable
            - constraint: Urn
        uiUrl:
          type: string
          format: uri
          example: https://sampleVc.vmware.com
          description: "The URL of the proxied component's UI endpoint. This is the\
            \ URL that the browser tab\n will be pointed to when the proxy is launched\
            \ via the H5 UI of VCD.\n"
          default: ''
      required:
        - name
        - sddcId
        - targetHost
    SddcStat:
      type: object
      description: A collection of measurements for the SDDC resource
      properties:
        numTotal:
          type: integer
          format: int64
          description: Total resource allocation.
          minimum: 0
        numUsed:
          type: integer
          format: int64
          description: Used resource allocation.
          minimum: 0
        numReserved:
          type: integer
          format: int64
          description: Reserved resource allocation.
          minimum: 0
    SddcStats:
      type: object
      description: A read-only list of resource allocations for the associated SDDC
      properties:
        cpu:
          $ref: '#/components/schemas/SddcStat'
          description: CPUs statistics of the SDDC (values in MHz).
        memory:
          $ref: '#/components/schemas/SddcStat'
          description: Memory statistics of the SDDC (values in MB).
        storage:
          $ref: '#/components/schemas/SddcStat'
          description: Storage statistics of the SDDC (values in MB).
    Service:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          default: ''
        iconMimeType:
          type: string
        iconData:
          type: string
        id:
          type: string
    ServiceApp:
      type: object
      description: A VMware service application
      properties:
        id:
          type: string
          description: The unique ID for the service application. This field is read-only.
        name:
          type: string
          description: The name of the service application
        clientId:
          type: string
          description: The client ID
        clientSecret:
          type: string
          description: The client secret
        orgId:
          type: string
          description: The external organization id of the service application
        serviceScope:
          $ref: '#/components/schemas/ServiceAppScope'
          description: The scope of the service application
        accessTokenTTL:
          type: integer
          description: The time to live of the access token in seconds.
        accessTokenExpiration:
          type: string
          format: date-time
          description: The read-only expiration date of the access token
        enabled:
          type: boolean
          description: Whether the application is currently enabled
      required:
        - clientId
        - clientSecret
        - name
        - serviceScope
    ServiceAppScope:
      type: string
      description: Describes the type of service application
      enum:
        - VMC
    ServiceItem:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        serviceItemType:
          type: string
        description:
          type: string
        canExecute:
          type: boolean
        serviceName:
          type: string
        serviceId:
          type: string
        iconMimeType:
          type: string
        iconData:
          type: string
        tenantScoped:
          type: boolean
          default: true
        providerScoped:
          type: boolean
          default: true
        publishAll:
          type: boolean
          description: 'Read-only value indicating publishAll state

            '
          default: false
      required:
        - serviceItemType
      discriminator: serviceItemType
    SmtpServerSpec:
      type: object
      description: Represent the settings of an SMTP Server which the system uses
        to send email notifications and alerts
      properties:
        useAuthentication:
          type: boolean
          description: 'A flag to indicate if the SMTP requires login authentication.
            If this

            flag is set to true, caller must provide user name and password

            '
        secureMode:
          type: string
          description: Security mode used to connect to the SMTP server
          enum:
            - NONE
            - START_TLS
            - SSL
        url:
          $ref: '#/components/schemas/Url'
        sslTrustStore:
          type: string
          description: 'The custom ssl trust certs if ssl is enabled

            '
        userName:
          type: string
          description: 'Username to login to server

            '
        password:
          type: string
          description: 'Password to login to the server

            '
        description:
          type: string
          description: 'A human readable description of the entity

            '
        name:
          type: string
          description: A human readable name of the entity
    Subnet:
      type: object
      description: A network subnet defined by its gateway,
      properties:
        gateway:
          type: string
          description: The gateway for the subnet.
        prefixLength:
          type: integer
          description: The netmask prefix length of the subnet.
        dnsSuffix:
          type: string
          description: The DNS suffix that VMs attached to this network will use.
        dnsServer1:
          type: string
          description: The first DNS server that VMs attached to this network will
            use.
        dnsServer2:
          type: string
          description: The second DNS server that VMs attached to this network will
            use.
        ipRanges:
          $ref: '#/components/schemas/IpRanges'
          description: Range of IPs within the subnet that can be used in this network.
            A VM attached to this network is assigned one of these IPs.
        enabled:
          type: boolean
          description: Indicates whether the external network subnet is currently
            enabled.
    Subnets:
      type: object
      description: List of Subnets of a network
      properties:
        values:
          type: array
          items:
            $ref: '#/definitions/Subnet'
    SupportedConstraints:
      type: object
      properties:
        constraint:
          $ref: '#/components/schemas/Constraint'
        mandatory:
          $ref: '#/components/schemas/Mandatory'
        restrictDuplicates:
          $ref: '#/components/schemas/RestrictDuplicates'
        customValidator:
          $ref: '#/components/schemas/CustomValidator'
        numberRange:
          $ref: '#/components/schemas/NumberRange'
        regexp:
          $ref: '#/components/schemas/Regexp'
        numberFormat:
          $ref: '#/components/schemas/NumberFormat'
    SupportedDecorators:
      type: object
      properties:
        decorator:
          $ref: '#/components/schemas/Decorator'
        refreshOnChange:
          $ref: '#/components/schemas/RefreshOnChange'
        multiLine:
          $ref: '#/components/schemas/MultiLine'
        chooser:
          $ref: '#/components/schemas/Chooser'
        dropDown:
          $ref: '#/components/schemas/DropDown'
    SupportedPresentationElements:
      type: object
      properties:
        presentationElement:
          $ref: '#/components/schemas/PresentationElement'
        stepInfo:
          $ref: '#/components/schemas/StepInfo'
        group:
          $ref: '#/components/schemas/Group'
        field:
          $ref: '#/components/schemas/Field'
        primaryField:
          $ref: '#/components/schemas/PrimaryField'
    TestEmailRequest:
      type: object
      properties:
        emailSettings:
          $ref: '#/components/schemas/EmailSettings'
        destination:
          type: string
    Tier0Routers:
      type: object
      description: List of NSX-T's Tier-0 routers.
      properties:
        values:
          type: array
          items:
            $ref: '#/definitions/Tier0Router'
    Tier1Routers:
      type: object
      description: List of NSX-T's Tier-1 routers.
      properties:
        values:
          type: array
          items:
            $ref: '#/definitions/Tier1Router'
    UiBranding:
      type: object
      description: A branding object with the portal name, portal color, selected
        theme and custom URLs.
      properties:
        portalName:
          type: string
        portalColor:
          type: string
          description: 'A custom color defined by the administrator and used to theme
            the site.

            The color should be in rgb hex color format such as "FFFFFF" all capitalized.

            Can be set to an empty string to use the selected theme''s default colors.

            '
        selectedTheme:
          $ref: '#/components/schemas/UiTheme'
        customLinks:
          type: array
          items:
            $ref: '#/definitions/UiBrandingMenuItem'
      required:
        - customLinks
        - portalName
    UiBrandingMenuItem:
      type: object
      description: 'An ordered list of menu items which can be customized and used
        in the application. Can be defined as a

        link,

        override (well known links that can be overridden, Default values are About,
        Help, VMRC),

        section,

        separator(section without a name) of the drop down menu.'
      properties:
        name:
          type: string
        menuItemType:
          type: string
          enum:
            - link
            - section
            - override
            - separator
        url:
          type: string
      required:
        - menuItemType
    UiPluginMetadata:
      type: object
      description: Meta information about a UI Plugin
      properties:
        pluginName:
          type: string
        vendor:
          type: string
        description:
          type: string
        version:
          type: string
        license:
          type: string
        link:
          type: string
        tenant_scoped:
          type: boolean
        provider_scoped:
          type: boolean
        enabled:
          type: boolean
      required:
        - license
        - link
        - pluginName
        - vendor
        - version
    UiTheme:
      type: object
      description: A theme supported by vCloud Director.
      properties:
        themeType:
          type: string
        name:
          type: string
      required:
        - name
        - themeType
    UniversalEgressRoutes:
      type: object
      description: Object consisting of Egress Points and Universal Routes for a Universal
        Router.
      properties:
        egressPoints:
          $ref: '#/components/schemas/EgressPoints'
          description: The list of Egress Points for routing configuration. This is
            read-only.
        universalRoutes:
          $ref: '#/components/schemas/UniversalRoutes'
          description: The list of Universal Routes for routing configuration.
    UniversalRoute:
      type: object
      description: A Route for a Universal Router.
      properties:
        defaultEgress:
          $ref: '#/components/schemas/EgressPointReference'
          description: For a given route, routing by default will go through the default
            egress point. Every valid/configured route will have a default egress
            point.
        standbyEgress:
          $ref: '#/components/schemas/EgressPointReference'
          description: A standby egress point can be configured for failover of routes
            in case there is an issue routign to the default egress point.
        networkProviderScope:
          type: string
          description: The network provider scope for the given route. There can only
            be one route per fault domain for a Universal Route.
        status:
          $ref: '#/components/schemas/UniversalRoutingStatus'
          description: The status of the route (whether it's realized, failed, etc.).
        errorMessage:
          type: string
      required:
        - networkProviderScope
    UniversalRouter:
      type: object
      description: A UniversalRouter object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        vdcGroupRef:
          $ref: '#/components/schemas/EntityReference'
        localEgress:
          type: boolean
        status:
          $ref: '#/components/schemas/VdcGroupEntityStatus'
        errorMessage:
          type: string
    UniversalRouterDhcpConfig:
      type: object
      description: A UniversalRouterDhcpConfig object.
      properties:
        enabled:
          type: boolean
        servers:
          type: array
          items:
            $ref: '#/definitions/UniversalRouterDhcpServer'
    UniversalRouterDhcpServer:
      type: object
      description: 'List of Dhcp servers for universal router.

        Either egressRef or serverAddress is required to identify Dhcp server.'
      properties:
        egressRef:
          $ref: '#/components/schemas/EntityReference'
        serverAddress:
          type: string
    UniversalRouters:
      type: object
      description: List of Universal Routers
      properties:
        values:
          type: array
          items:
            $ref: '#/definitions/UniversalRouter'
    UniversalRoutes:
      type: object
      description: List of routes associated with a Universal Router.
      properties:
        keepAliveTimer:
          type: integer
          description: The Keep Alive Timer is the frequency (in seconds) at which
            the Universal Router seeds Keep Alive messages to its egress peers.
        values:
          type: array
          description: The list of Universal Routes.
          items:
            $ref: '#/definitions/UniversalRoute'
        providerScopesToForceUnconfigure:
          type: array
          description: 'The list network provider scopes whose route will be unconfigure
            forcefully. This means that a route that is in state that normally shouldn''t
            be

            unconfigurable (i.e. NSX or remote vCD site is down) will still be unconfigured.
            Errors may be ignored. Note that this force option also affects any route

            update where a network provider''s egress point is modified/changed. vCD
            will first unconfigure any existing egress point before configuring the
            new egress

            point.

            '
          items:
            type: string
    UniversalRoutingStatus:
      type: string
      description: Represents status of given routing configuration, such as realized,
        universal router routing configuration failed, egress routing configuration
        failed, etc.
      enum:
        - SAVING
        - SAVED
        - CONFIGURING
        - REALIZED
        - REALIZATION_FAILED
        - CONFIGURATION_FAILED_UNIVERSAL_ROUTER
        - CONFIGURATION_FAILED_UNIVERSAL_EGRESS_POINT
        - UNCONFIGURED
        - DELETING
        - DELETION_FAILED_UNIVERSAL_ROUTER
        - DELETION_FAILED_UNIVERSAL_EGRESS_POINT
    UploadMetadataResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
            plugin_status:
              type: string
              enum:
                - unavailable
                - ready
            resourcePath:
              type: string
      description: Description of an upload (in progress or complete)
    UploadSpec:
      type: object
      description: Information about upload
      properties:
        fileName:
          type: string
        size:
          type: integer
          format: int64
        checksum:
          type: string
        checksumAlgo:
          type: string
          enum:
            - sha1
            - sha256
          default: sha1
      required:
        - fileName
        - size
    Url:
      type: object
      properties:
        host:
          type: string
        port:
          type: integer
          minimum: 0
          maximum: 65535
        ssl:
          type: boolean
    User:
      type: object
      description: User Spec object
      properties:
        username:
          type: string
        description:
          type: string
        orgEntityRef:
          $ref: '#/components/schemas/EntityReference'
        fullname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        im:
          type: string
        external:
          type: boolean
        nameInSource:
          type: string
        sourceEntityRef:
          $ref: '#/components/schemas/EntityReference'
        enabled:
          type: boolean
        locked:
          type: boolean
        alertEmailPrefix:
          type: string
        alertEmail:
          type: string
        roleEntityRef:
          $ref: '#/components/schemas/EntityReference'
        roleInherited:
          type: boolean
        delayAfterPowerOnSeconds:
          type: integer
        storedVMQuota:
          type: integer
        deployedVMQuota:
          type: integer
        inSync:
          type: boolean
    UserGroup:
      type: object
      description: Group Spec object
      properties:
        name:
          type: string
        description:
          type: string
        orgEntityRef:
          $ref: '#/components/schemas/EntityReference'
        sourceEntityRef:
          $ref: '#/components/schemas/EntityReference'
        roleEntityRef:
          $ref: '#/components/schemas/EntityReference'
        nameInSource:
          type: string
        providerType:
          type: string
          enum:
            - UNKNOWN
            - INTEGRATED
            - SAML
            - OAUTH
    VROServiceInfo:
      type: object
      description: Response type with meta information about a vRealize Orchestrator
        Service
      properties:
        id:
          type: string
          description: 'This is a read-only field in the client. Values set on this
            field will be ignored by the server.

            '
        name:
          type: string
        description:
          type: string
        vroEndpoint:
          type: string
          format: uri
        username:
          type: string
        password:
          type: string
          format: password
          description: 'The password is hidden using a Password Mask represented by
            a series of 6 asterisks ("******") in the response.

            The Password Mask is not an acceptable password during VRO Server registration.

            During an update, the Password Mask set for the ''password'' field is
            interpreted as no change to the field and is ignored.

            '
        version:
          type: string
        trustAnchor:
          type: string
          description: 'SSL Certificate chain for the VRO endpoint

            '
    VdcComputePolicy:
      type: object
      properties:
        id:
          type: string
          description: 'UUID for vDC compute policy. This is immutable.

            '
        description:
          type: string
          default: A vDC compute policy.
        name:
          type: string
          description: 'Display name.

            '
        cpuSpeed:
          type: integer
          format: int64
          description: 'The CPU speed in MHz of this VM. This is optional. When provided,

            VMs with this policy cannot have more than CPU speed defined by this field.

            '
          x-vcloud-added-in: 32
        memory:
          type: integer
          format: int64
          description: 'The maximum memory in MB allowed for a VM. This is optional.
            When provided, VMs with

            this policy cannot have configured memory more than defined by this field.

            '
          x-vcloud-added-in: 32
        cpuCount:
          type: integer
          format: int32
          description: 'The maximum number of CPUs allowed for a VM. This is optional.
            When provided,

            VMs with this policy cannot have more than number of CPUs defined by this
            field.

            '
          x-vcloud-added-in: 32
        coresPerSocket:
          type: integer
          format: int32
          description: 'The cores per socket to be configured for the VM where this
            policy is applied.

            '
          x-vcloud-added-in: 32
        memoryReservationGuarantee:
          type: number
          format: double
          description: 'The factor of the configured memory reserved for the VM on
            which this policy is applied.

            '
          x-vcloud-added-in: 32
          x-vcloud-restricted: 'Restricted field, requires view alternate admin version
            of Compute Policies right to access this field.

            '
        cpuReservationGuarantee:
          type: number
          format: double
          description: 'The factor of the configured CPU reserved for the VM on which
            this policy is applied.

            '
          x-vcloud-added-in: 32
          x-vcloud-restricted: 'Restricted field, requires view alternate admin version
            of Compute Policies right to access this field.

            '
        cpuLimit:
          type: integer
          format: int64
          description: 'The limit of CPU in MHz for the VM on which this policy is
            applied. -1 means unlimited. This

            is optional. If not provided, limit would be equal to the vCPUSpeed multiplied
            by numCPU.

            '
          x-vcloud-added-in: 32
          x-vcloud-restricted: 'Restricted field, requires view alternate admin version
            of Compute Policies right to access this field.

            '
        memoryLimit:
          type: integer
          format: int64
          description: 'The limit of memory in MB for the VM on which this policy
            is applied. -1 means unlimited. This

            is optional. If not provided, limit would be equal to the configured memory
            of the VM.

            '
          x-vcloud-added-in: 32
          x-vcloud-restricted: 'Restricted field, requires view alternate admin version
            of Compute Policies right to access this field.

            '
        cpuShares:
          type: integer
          format: int32
          description: 'The number of CPU shares for the VM on which this policy is
            applied. This is optional. If

            not provided, Normal shares would be applied to the VM.

            '
          x-vcloud-added-in: 32
          x-vcloud-restricted: 'Restricted field, requires view alternate admin version
            of Compute Policies right to access this field.

            '
        memoryShares:
          type: integer
          format: int32
          description: 'The number of memory shares for the VM on which this policy
            is applied. This is optional. If

            not provided, Normal shares would be applied to the VM.

            '
          x-vcloud-added-in: 32
          x-vcloud-restricted: 'Restricted field, requires view alternate admin version
            of Compute Policies right to access this field.

            '
        extraConfigs:
          type: object
          description: 'Map of extra configs to be set on the VM with this policy.

            '
          additionalProperties:
            type: string
          x-vcloud-added-in: 32
          x-vcloud-restricted: 'Restricted field, requires view alternate admin version
            of Compute Policies right to access this field.

            '
        pvdcComputePolicyRef:
          $ref: '#/components/schemas/EntityReference'
          description: Deprecated in Api 32.0, this property will be removed in future
            release.
        pvdcComputePolicy:
          $ref: '#/components/schemas/EntityReference'
          description: This field cannot be updated and is a read-only field in the
            client after creation.
        compatibleVdcTypes:
          type: array
          description: A list of read-only compatible vDC types for this policy.
          items:
            type: string
          x-vcloud-added-in: 32
          x-vcloud-restricted: 'Restricted field, requires view alternate admin version
            of Compute Policies right to access this field.

            '
      required:
        - name
    VdcGroup:
      type: object
      description: A vCD Group.
      properties:
        id:
          type: string
          description: The unique ID for the vDC Group (read-only).
        orgId:
          type: string
          description: The organization that this group belongs to.
        name:
          type: string
          description: The name of this group. The name must be unique.
        description:
          type: string
          description: The description of this group.
        participatingOrgVdcs:
          type: array
          description: The list of organization vDCs that are participating in this
            group.
          items:
            $ref: '#/definitions/ParticipatingVdcReference'
        universalNetworkingEnabled:
          type: boolean
          description: True means that universal routers can be created. This field
            cannot be updated.
        networkPoolUniversalId:
          type: string
          description: 'The universal network pool that is common to all the participating
            vDCs. This field is read-only and

            is derived from the list of participating vDCs.

            '
        status:
          $ref: '#/components/schemas/VdcGroupEntityStatus'
          description: The status that the group can be in.
        errorMessage:
          type: string
          description: If the group has an error status, a more detailed error message
            is set here.
      required:
        - name
        - orgId
        - participatingOrgVdcs
    VdcGroupEntityStatus:
      type: string
      description: 'Represents status of vDC group components such as participating
        vdc''s

        configured routing, egress points, etc.'
      enum:
        - SAVING
        - SAVED
        - CONFIGURING
        - REALIZED
        - REALIZATION_FAILED
        - DELETING
        - DELETE_FAILED
        - OBJECT_NOT_FOUND
        - UNCONFIGURED
    VdcNetworkConnectionType:
      type: string
      description: Describes how a network is connected to a gateway.
      enum:
        - DISTRIBUTED
        - INTERNAL
        - SUBINTERFACE
    VdcNetworkDhcpConfig:
      type: object
      description: Configuration for the DHCP service that runs on the network.
      properties:
        enabled:
          type: boolean
          description: Whether the DHCP service is currently enabled on network
        dhcpPools:
          type: array
          description: Range of DHCP IP addresses
          items:
            $ref: '#/definitions/VdcNetworkDhcpPool'
    VdcNetworkDhcpPool:
      type: object
      description: A range of DHCP ip addresses and its lease time configuration.
      properties:
        enabled:
          type: boolean
          description: Whether the DHCP address pool is currently enabled
        ipRange:
          $ref: '#/components/schemas/IpRange'
        maxLeaseTime:
          type: integer
          description: Max lease time in seconds
          minimum: 0
        defaultLeaseTime:
          type: integer
          description: Default lease time in seconds
          minimum: 0
    VdcNetworkFenceType:
      type: string
      description: The network type.
      enum:
        - DIRECT
        - ISOLATED
        - OPAQUE
        - NAT_ROUTED
        - CROSS_VDC
    VdcNetworkProfile:
      type: object
      description: A vDC Network Profile object.
      properties:
        primaryEdgeCluster:
          $ref: '#/components/schemas/EntityReference'
          description: The Edge Cluster where the primary appliance for an NSX-V Edge
            Gateway will be deployed.
        secondaryEdgeCluster:
          $ref: '#/components/schemas/EntityReference'
          description: The Edge Cluster where the secondary appliance for an NSX-V
            Edge Gateway will be deployed if HA is enabled on the Edge.
    VmcSddc:
      type: object
      description: A VMware Cloud on AWS SDDC
      properties:
        id:
          type: string
          description: The unique ID for the VMC SDDC.
        name:
          type: string
          description: The name of the VMC SDDC. This field is read-only.
    VroRemoteInventoryItem:
      type: object
      description: Meta information about an inventory item on a vRealize Orchestrator
        server
      properties:
        href:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/definitions/WsAttribute'
        relations:
          $ref: '#/components/schemas/Relations'
    VroRemoteItem:
      type: object
      description: Information about various objects in vRealize Orchestrator server
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: string
        vroServerId:
          type: string
        dunesId:
          type: string
        type:
          type: string
        selectable:
          type: boolean
        canHaveChildren:
          type: boolean
        href:
          type: string
        rel:
          type: string
    VroRemoteItems:
      type: object
      description: A list of objects in vRealize orchestrator server
      properties:
        remoteItems:
          type: array
          items:
            $ref: '#/definitions/VroRemoteItem'
        resultTotal:
          type: integer
        pageCount:
          type: integer
    VroRemotePluginItem:
      type: object
      description: A plugin namespaces for whom type information can be retrieved
      properties:
        name:
          type: string
        typeHref:
          type: string
        selectable:
          type: boolean
        canHaveChildren:
          type: boolean
    VroRemotePluginItems:
      type: object
      description: List of plugin namespaces
      properties:
        items:
          type: array
          items:
            $ref: '#/definitions/VroRemotePluginItem'
    VroRemotePluginType:
      type: object
      description: Type definition for a plugin namespace
      properties:
        name:
          type: string
        selectable:
          type: boolean
        canHaveChildren:
          type: boolean
    VroRemotePluginTypes:
      type: object
      description: A list of defined types for a particular plugin namespace
      properties:
        types:
          type: array
          items:
            $ref: '#/definitions/VroRemotePluginType'
        namespace:
          type: string
    VroRemoteWorkflowItem:
      type: object
      description: Meta information about a workflow on a vRealize Orchestrator server
      properties:
        name:
          type: string
        description:
          type: string
        categoryName:
          type: string
        canExecute:
          type: boolean
        id:
          type: string
        vroServerId:
          type: string
    WsAttribute:
      type: object
      properties:
        displayValue:
          type: string
        name:
          type: string
        value:
          type: string
    WsParameter:
      type: object
      properties:
        description:
          type: string
        encryptValue:
          type: boolean
        name:
          type: string
        scope:
          type: string
          enum:
            - local
            - token
        type:
          type: string
        updated:
          type: boolean
        value:
          $ref: '#/components/schemas/Parameter'
    WsWorkflowExecution:
      type: object
      properties:
        businessState:
          type: string
        contentException:
          type: string
        currentItemDisplayName:
          type: string
        endDate:
          type: string
          format: date-time
        id:
          type: string
        inputParameters:
          type: array
          items:
            $ref: '#/definitions/WsParameter'
        name:
          type: string
        outputParameters:
          type: array
          items:
            $ref: '#/definitions/WsParameter'
        relations:
          $ref: '#/components/schemas/Relations'
        startDate:
          type: string
          format: date-time
        startedBy:
          type: string
        state:
          $ref: '#/components/schemas/ExecutionState'
    AllocatedIpAddresses:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/AllocatedIpAddress'
      description: List of IP allocated IP addresses
    ArrayParam:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            value:
              type: array
              items:
                $ref: '#/definitions/Parameter'
    BooleanParam:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            value:
              type: boolean
    Capabilities:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/Capability'
      description: List of read-only capabilities.
    Chooser:
      allOf:
        - $ref: '#/components/schemas/Decorator'
        - type: object
          properties:
            sdkObject:
              $ref: '#/components/schemas/SdkObject'
            type:
              type: string
    CompositeType:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            property:
              type: array
              items:
                $ref: '#/definitions/CompositeValue'
            type:
              type: string
    CompositeValue:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            id:
              type: string
            property:
              $ref: '#/components/schemas/Parameter'
    CrossVdcNetwork:
      allOf:
        - $ref: '#/components/schemas/Network'
        - type: object
          properties:
            vdcGroupRef:
              $ref: '#/components/schemas/EntityReference'
              description: The vDC group that this network belongs to.
            routerRef:
              $ref: '#/components/schemas/EntityReference'
              description: The router that this network is attached to.
            status:
              $ref: '#/components/schemas/VdcGroupEntityStatus'
              description: The status of the network.
            errorMessage:
              type: string
              description: If the network has an error status, a more detailed error
                message is set here.
      description: A CrossVdcNetwork object
    CrossVdcNetworks:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/CrossVdcNetwork'
      description: List of cross vDC networks
    CustomEntityTypes:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of custom entity types.
              items:
                $ref: '#/definitions/CustomEntityType'
      description: A list of custom entity types.
    CustomValidator:
      allOf:
        - $ref: '#/components/schemas/Constraint'
    DateParam:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            value:
              type: string
              format: date-time
    DropDown:
      allOf:
        - $ref: '#/components/schemas/Decorator'
        - type: object
          properties:
            array:
              $ref: '#/components/schemas/ArrayParam'
    EdgeClusters:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/EdgeCluster'
      description: List of Edge Clusters.
    EdgeGateways:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: A list of EdgeGateways.
              items:
                $ref: '#/definitions/EdgeGateway'
      description: List of edge gateways
    EncryptedString:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            value:
              type: string
    EntityReferences:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of entity references.
              items:
                $ref: '#/definitions/EntityReference'
      description: A list of entity references.
    ExternalNetwork:
      allOf:
        - $ref: '#/components/schemas/Network'
        - type: object
          properties:
            networkBackings:
              $ref: '#/components/schemas/ExternalNetworkBackings'
              description: 'Backings for this external network. Describes if this
                external network

                is backed by port groups, vCenter standard switch or an NSX-T Tier-0
                router.'
            totalIpCount:
              type: integer
              description: The number of IP addresses defined by the static ip pools.
                If the network contains any IpV6 subnets, the total ip count will
                be null.
              readOnly: true
            usedIpCount:
              type: integer
              description: The number of IP address used from the static ip pools.
              readOnly: true
      description: An external network.
    ExternalNetworks:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/ExternalNetwork'
      description: List of External Networks
    Field:
      allOf:
        - $ref: '#/components/schemas/PresentationElement'
        - type: object
          properties:
            decorators:
              type: array
              items:
                $ref: '#/definitions/Decorator'
            constraints:
              type: array
              items:
                $ref: '#/definitions/Constraint'
            type:
              type: string
            affectedFieldsIds:
              type: array
              items:
                type: string
    GlobalRoles:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of global roles.
              items:
                $ref: '#/definitions/GlobalRole'
      description: A list of global roles.
    Group:
      allOf:
        - $ref: '#/components/schemas/PresentationElement'
        - type: object
          properties:
            fields:
              type: array
              items:
                $ref: '#/definitions/PrimaryField'
    KeyValuePair:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            key:
              type: string
            value:
              $ref: '#/components/schemas/Parameter'
    LogicalVmGroups:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of LogicalVmGroups.
              items:
                $ref: '#/definitions/LogicalVmGroup'
      description: A list of LogicalVmGroups.
    Mandatory:
      allOf:
        - $ref: '#/components/schemas/Constraint'
    MimeAttachment:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            content:
              type: string
              format: binary
            name:
              type: string
            mimeType:
              type: string
    MultiLine:
      allOf:
        - $ref: '#/components/schemas/Decorator'
    NumberFormat:
      allOf:
        - $ref: '#/components/schemas/Constraint'
        - type: object
          properties:
            value:
              type: string
    NumberParam:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            value:
              type: number
    NumberRange:
      allOf:
        - $ref: '#/components/schemas/Constraint'
        - type: object
          properties:
            min:
              type: number
            max:
              type: number
    PreferenceDefinitions:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page for preference definitions.
              items:
                $ref: '#/definitions/PreferenceDefinition'
      description: A list of preference definitions
    Preferences:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The list of user preferences.
              items:
                $ref: '#/definitions/Preference'
      description: A list of user preferences
    Properties:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            property:
              type: array
              items:
                $ref: '#/definitions/KeyValuePair'
    PublishableRightsMapping:
      allOf:
        - $ref: '#/components/schemas/RightsMapping'
        - type: object
          properties:
            publishAll:
              type: boolean
              description: 'Read-only value indicating publishAll state

                '
              default: false
              x-vcloud-constraints:
                - constraint: ReadOnly
      description: RightsMapping that can be published to tenants
    PvdcComputePolicies:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of provider VDC compute policies.
              items:
                $ref: '#/definitions/PvdcComputePolicy'
      description: A list of provider VDC compute policies.
    RefreshOnChange:
      allOf:
        - $ref: '#/components/schemas/Decorator'
    Regex:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            value:
              type: string
    Regexp:
      allOf:
        - $ref: '#/components/schemas/Constraint'
        - type: object
          properties:
            expression:
              type: string
    RestrictDuplicates:
      allOf:
        - $ref: '#/components/schemas/Constraint'
    Rights:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of rights.
              items:
                $ref: '#/definitions/Right'
      description: A list of rights.
    RightsBundles:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of rights bundles.
              items:
                $ref: '#/definitions/RightsBundle'
    RightsCategoryNodes:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of rights category nodes.
              items:
                $ref: '#/definitions/RightsCategoryNode'
      description: A list of rights category nodes.
    Role:
      allOf:
        - $ref: '#/components/schemas/RightsMapping'
        - type: object
    Roles:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of roles.
              items:
                $ref: '#/definitions/Role'
      description: A list of roles.
    SddcProxies:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/SddcProxy'
      description: A paginated list of SDDC proxies
    Sddcs:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/Sddc'
      description: A paginated list of software-defined data centers
    SdkObject:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            type:
              type: string
            href:
              type: string
            id:
              type: string
            displayValue:
              type: string
    SecureString:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            value:
              type: string
            isPlainText:
              type: boolean
    ServiceApps:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/ServiceApp'
      description: List of VMware service applications
    ServiceItems:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of service items.
              items:
                $ref: '#/definitions/ServiceItem'
      description: A list of service items.
    Services:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of services.
              items:
                $ref: '#/definitions/Service'
      description: A list of services.
    StepInfo:
      allOf:
        - $ref: '#/components/schemas/PresentationElement'
        - type: object
          properties:
            readOnly:
              type: boolean
            elements:
              type: array
              items:
                $ref: '#/definitions/PresentationElement'
    StringParam:
      allOf:
        - $ref: '#/components/schemas/Parameter'
        - type: object
          properties:
            value:
              type: string
    Tier0Router:
      allOf:
        - $ref: '#/components/schemas/CommonNsxTRouterFields'
      description: An NSX-T's Tier-0 router.
    Tier1Router:
      allOf:
        - $ref: '#/components/schemas/CommonNsxTRouterFields'
      description: An NSX-T's Tier-1 router.
    UiPluginMetadataResponse:
      allOf:
        - $ref: '#/components/schemas/UiPluginMetadata'
        - $ref: '#/components/schemas/UploadMetadataResponse'
    VdcComputePolicies:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of VDC compute policies.
              items:
                $ref: '#/definitions/VdcComputePolicy'
      description: A list of VDC compute policies.
    VdcGroups:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/VdcGroup'
      description: List of vDC Groups.
    VdcNetwork:
      allOf:
        - $ref: '#/components/schemas/Network'
        - type: object
          properties:
            backingNetworkId:
              type: string
              description: The NSX id of the backing network.
            backingNetworkType:
              $ref: '#/components/schemas/BackingNetworkType'
              description: The object type of the backing network.
            parentNetworkId:
              $ref: '#/components/schemas/EntityReference'
              description: The parent network if the network is a direct network,
                otherwise it will be null.
            networkType:
              $ref: '#/components/schemas/VdcNetworkFenceType'
              description: 'The type of network. Changing the network type allows
                converting between an isolated and routed network.

                Note that the "connection" field must also be set if converting from
                isolated to routed network.'
            orgVdc:
              $ref: '#/components/schemas/EntityReference'
              description: The organization vDC the network belongs to.
            connection:
              $ref: '#/components/schemas/RouterConnection'
              description: The edge gateway that the network is attached to.
            isDefaultNetwork:
              type: boolean
              description: 'Deprecated unused field, this property will be removed
                in future release.

                '
            shared:
              type: boolean
              description: Whether this network is shared with other organization
                vDCs.
            status:
              $ref: '#/components/schemas/OrgVdcNetworkStatus'
              description: Description of the network's status.
            lastTaskFailureMessage:
              type: string
              description: 'Brief failure message if the last configuration task failed.

                '
              readOnly: true
            guestVlanTaggingAllowed:
              type: boolean
              description: Whether guest VLAN tagging is allowed.
            retainNicResources:
              type: boolean
              description: Whether network resources such as IP/MAC Addresses are
                to be retained.
            crossVdcNetworkId:
              type: string
              description: The id of the cross vdc network if this is a stretched
                network, otherwise it will be null.
              readOnly: true
            crossVdcNetworkLocationId:
              type: string
              description: The id of the org from which this network can be managed
                if this is a stretched network, otherwise it will be null.
              readOnly: true
            totalIpCount:
              type: integer
              description: The number of IP addresses defined by the static ip pools.
                If the network contains any IpV6 subnets, the total ip count will
                be null.
              readOnly: true
            usedIpCount:
              type: integer
              description: The number of IP address used from the static ip pools.
              readOnly: true
      description: An organization vDC network.
    VdcNetworks:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/VdcNetwork'
      description: List of Org vDC networks
    VmcSddcs:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: '#/definitions/VmcSddc'
      description: List of VMware Cloud on AWS SDDCs
    VroRemoteWorkflowItems:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            values:
              type: array
              description: The current page of remove VRO workflows.
              items:
                $ref: '#/definitions/VroRemoteWorkflowItem'
      description: A list of remote VRO workflows.
    VroWorkflowServiceItem:
      allOf:
        - $ref: '#/components/schemas/ServiceItem'
        - type: object
          properties:
            vroWorkflowId:
              type: string
            vroServerId:
              type: string
    GlobalRole:
      allOf:
        - $ref: '#/components/schemas/PublishableRightsMapping'
        - type: object
    PrimaryField:
      allOf:
        - $ref: '#/components/schemas/Field'
        - type: object
          properties:
            fields:
              type: array
              items:
                $ref: '#/definitions/Field'
            value:
              $ref: '#/components/schemas/Parameter'
    RightsBundle:
      allOf:
        - $ref: '#/components/schemas/PublishableRightsMapping'
        - type: object
