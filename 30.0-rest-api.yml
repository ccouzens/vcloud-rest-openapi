openapi: 3.0.2
info:
  title: vCloud Director
  license:
    name: Â© 2018 VMware, Inc. All rights reserved.
  version: Revision 20180216 Version 30.0
paths:
  /admin/extension/service/aclrule/{id}:
    get:
      tags:
        - extension
      description: Retrieve (GET) ACL rule
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.aclRule+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AclRuleType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Delete (DELETE) ACL rule
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/rule/{ruleId}:
    get:
      tags:
        - extension
      description: Retrieves the specified VM Host affinity rule
      responses:
        2XX:
          description: representation of a VM affinity rule {@link VmAffinityRuleInfo}
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Deletes the specified VM Host affinity rule.
      responses:
        2XX:
          description: a task to monitor the deletion of the rule
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/strandedItems:
    delete:
      tags:
        - extension
      description: Removes all stranded items.
      responses:
        2XX:
          description: Task created to remove all the stranded items
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
  /admin/extension/service/apidefinition/{id}:
    get:
      tags:
        - extension
      description: Retrieve API definition.
      responses:
        2XX:
          description: '{@link AdminApiDefinitionType}'
          content:
            application/vnd.vmware.admin.apiDefinition+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AdminApiDefinitionType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Deletes API definition.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/apifilter/{id}:
    get:
      tags:
        - extension
      description: Retrieves API filter.
      responses:
        2XX:
          description: '{@link ApiFilterType}'
          content:
            application/vnd.vmware.admin.apiFilter+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ApiFilterType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Deletes API filter.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/associations/{remoteSiteId}/{remoteOrgId}:
    get:
      tags:
        - admin
      description: Retrieves a specific member from the organization's associations
        as identified by identifier included in the request
      responses:
        2XX:
          description: the {@link OrgAssociationType} representing the particular
            organization association record. `null` if no member found.
          content:
            application/vnd.vmware.admin.organizationAssociation+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgAssociationType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update an organization association
      requestBody:
        content:
          application/vnd.vmware.admin.organizationAssociation+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgAssociationType'
        required: true
      responses:
        2XX:
          description: Reference to the task updating the org's association
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Removes the specified member from this organization's associations.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: remoteSiteId
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: remoteOrgId
        required: true
        schema:
          type: string
        style: simple
  /admin/catalog/{id}:
    get:
      tags:
        - admin
      description: Retrieve a catalog.
      responses:
        2XX:
          description: CatalogType
          content:
            application/vnd.vmware.admin.catalog+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminCatalogType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update the name or description of a catalog.
      requestBody:
        content:
          application/vnd.vmware.admin.catalog+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_AdminCatalogType'
        required: true
      responses:
        2XX:
          description: UserType
          content:
            application/vnd.vmware.admin.catalog+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminCatalogType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete a catalog.
      parameters:
        - in: query
          name: force
          schema:
            $ref: '#/components/schemas/query-parameter_force'
          style: form
        - in: query
          name: recursive
          schema:
            $ref: '#/components/schemas/query-parameter_recursive'
          style: form
      responses:
        2XX:
          description: JAXBElement<TaskType\> for API version 30.0 or greater, 204
            no\_content for older API versions
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalogItem/{id}:
    get:
      tags:
        - user
      description: Retrieve a catalog item.
      responses:
        2XX:
          description: CatalogItemType
          content:
            application/vnd.vmware.vcloud.catalogItem+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CatalogItemType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Modify a catalog item.
      requestBody:
        content:
          application/vnd.vmware.vcloud.catalogItem+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CatalogItemType'
        required: true
      responses:
        2XX:
          description: CatalogItemType
          content:
            application/vnd.vmware.vcloud.catalogItem+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CatalogItemType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete a catalog item.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalogItem/{id}/metadata/{key}:
    get:
      tags:
        - user
      description: Retrieve the value of the specified key from catalog item metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Set the metadata value for the specified key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete the specified key and its value from catalog item metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/catalog/{id}/metadata/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key from catalog metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete the specified key and its value from catalog metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /disk/{id}:
    get:
      tags:
        - user
      description: Retrieve a disk.
      responses:
        2XX:
          description: DiskType
          content:
            application/vnd.vmware.vcloud.disk+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_DiskType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the name, description, and storage class of a disk.
      requestBody:
        content:
          application/vnd.vmware.vcloud.disk+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_DiskType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete a disk.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /disk/{id}/metadata/{key}:
    get:
      tags:
        - user
      description: Retrieve the value of the specified key from disk metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataValueType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete the specified key and its value from disk metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}:
    get:
      tags:
        - admin
      description: Retrieve an edge gateway
      responses:
        2XX:
          description: GATEWAYM
          content:
            application/vnd.vmware.admin.edgeGateway+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_GatewayType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update an edge gateway
      requestBody:
        content:
          application/vnd.vmware.admin.edgeGateway+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_GatewayType'
        required: true
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete an edge gateway.
      parameters:
        - in: query
          name: force
          schema:
            $ref: '#/components/schemas/query-parameter_force'
          style: form
        - in: query
          name: recursive
          schema:
            $ref: '#/components/schemas/query-parameter_recursive'
          style: form
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/externalnet/{id}:
    get:
      tags:
        - extension
      description: Retrieve a system administrator view of an external network.
      responses:
        2XX:
          description: VMWExternalNetworkType
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update an external network.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwexternalnet+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWExternalNetworkType'
        required: true
      responses:
        2XX:
          description: VMWExternalNetworkType
          content:
            application/vnd.vmware.admin.vmwexternalnet+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWExternalNetworkType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Delete an external network.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/file/{id}:
    get:
      tags:
        - extension
      description: Retrieve a file descriptor
      responses:
        2XX:
          description: '{@link AdminFileDescriptorType}'
          content:
            application/vnd.vmware.admin.fileDescriptor+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AdminFileDescriptorType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Deletes file descriptor.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/group/{id}:
    get:
      tags:
        - admin
      description: Retrieve a group.
      responses:
        2XX:
          description: GroupType
          content:
            application/vnd.vmware.admin.group+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_GroupType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update the name or description of a group.
      requestBody:
        content:
          application/vnd.vmware.admin.group+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_GroupType'
        required: true
      responses:
        2XX:
          description: GroupType
          content:
            application/vnd.vmware.admin.group+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_GroupType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Deletes a group.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/link/{id}:
    get:
      tags:
        - extension
      description: Retrieves service link.
      responses:
        2XX:
          description: '{@link ServiceConfigType}'
          content:
            application/vnd.vmware.admin.serviceLink+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AdminServiceLinkType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Deletes service link.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /session:
    get:
      tags:
        - user
      description: "Retrieve a representation of the current session.\n\n A Session\
        \ object contains one or more URLs from which you can begin browsing, as well\
        \ as links to the query service and entity resolver. The list of URLs in the\
        \ Session object is based on the role and privileges of the authenticated\
        \ user.\n\n A Session object expires after a configurable interval of client\
        \ inactivity. To change the length of this client inactivity timeout, a system\
        \ administrator can change the value of SessionTimeoutMinutes in the system's\
        \ GeneralSettings"
      responses:
        2XX:
          description: The current session
          content:
            application/vnd.vmware.vcloud.session+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SessionType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete the current session.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /media/{id}:
    get:
      tags:
        - user
      description: Retrieve a media object.
      responses:
        2XX:
          description: MediaType
          content:
            application/vnd.vmware.vcloud.media+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MediaType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the name and description of a media object.
      requestBody:
        content:
          application/vnd.vmware.vcloud.media+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MediaType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete a media object.
      parameters:
        - in: query
          name: force
          schema:
            $ref: '#/components/schemas/query-parameter_force'
          style: form
        - in: query
          name: recursive
          schema:
            $ref: '#/components/schemas/query-parameter_recursive'
          style: form
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /media/{id}/metadata/{key}:
    get:
      tags:
        - user
      description: Retrieve the value of the specified key from media object metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete the specified key and its value from media object metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/network/{id}:
    get:
      tags:
        - admin
      description: Retrieve an administrative view of a network.
      responses:
        2XX:
          description: ExternalNetworkType
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update an organization network.
      requestBody:
        content:
          application/vnd.vmware.vcloud.orgVdcNetwork+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgVdcNetworkType'
        required: true
      responses:
        2XX:
          description: TaskType This operation is asynchronous and the user should
            monitor the returned task status in order to check when it is completed.
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete a network.
      parameters:
        - in: query
          name: force
          schema:
            $ref: '#/components/schemas/query-parameter_force'
          style: form
        - in: query
          name: recursive
          schema:
            $ref: '#/components/schemas/query-parameter_recursive'
          style: form
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/network/{id}/metadata/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key from network metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete the specified key and its value from network metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/networkPool/{id}:
    get:
      tags:
        - extension
      description: Retrieve a network pool.
      responses:
        2XX:
          description: VMWNetworkPool
          content:
            application/vnd.vmware.admin.vmwNetworkPool+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWNetworkPoolType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update a network pool.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwNetworkPool+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWNetworkPoolType'
        required: true
      responses:
        2XX:
          description: VMWNetworkPool
          content:
            application/vnd.vmware.admin.vmwNetworkPool+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWNetworkPoolType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: "Delete a network pool.\n\n The pool must not be in use."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/object/{id}:
    get:
      tags:
        - extension
      description: Retrieves a registered object extension.
      responses:
        2XX:
          description: representation of an object extension {@link ObjectExtensionType}
          content:
            application/vnd.vmware.admin.extensibility.object+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ObjectExtensionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Updates a registered object extension.
      requestBody:
        content:
          application/vnd.vmware.admin.extensibility.object+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ObjectExtensionType'
        required: true
      responses:
        2XX:
          description: representation of an object extension {@link ObjectExtension}
          content:
            application/vnd.vmware.admin.extensibility.object+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ObjectExtensionType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Deletes a registered object extension with specified ID.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}:
    get:
      tags:
        - admin
      description: Retrieve an administrative view of an organization.
      responses:
        2XX:
          description: AdminOrgType
          content:
            application/vnd.vmware.admin.organization+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminOrgType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update an organization.
      requestBody:
        content:
          application/vnd.vmware.admin.organization+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_AdminOrgType'
        required: true
      responses:
        2XX:
          description: AdminOrgType
          content:
            application/vnd.vmware.admin.organization+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminOrgType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: "Delete an organization.\n\n Before you can delete an organization,\
        \ you must disable it and then delete or change ownership of all objects that\
        \ the organization's users own."
      parameters:
        - in: query
          name: force
          description: pass force=true as query parameter along with recursive=true
            to remove an organization or VDC and any objects it contains, regardless
            of their state.
          schema:
            $ref: '#/components/schemas/query-parameter_force'
          style: form
        - in: query
          name: recursive
          description: pass recursive=true as query parameter to remove an organization
            or VDC and any objects it contains that are in a state that normally allows
            removal.
          schema:
            $ref: '#/components/schemas/query-parameter_recursive'
          style: form
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/metadata/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key from organization metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete the specified key and its value from organization metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providervdc/{id}:
    get:
      tags:
        - extension
      description: Retrieve a system administrator view of a provider vDC.
      responses:
        2XX:
          description: VMWProviderVdc
          content:
            application/vnd.vmware.admin.vmwprovidervdc+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update a provider vDC.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwprovidervdc+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcType'
        required: true
      responses:
        2XX:
          description: VMWProviderVdc
          content:
            application/vnd.vmware.admin.vmwprovidervdc+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: "Delete a provider vDC.\n\n Before you can delete a provider vDC,\
        \ you must disable it."
      responses:
        2XX:
          description: "Task\n\n This operation is asynchronous and returns a Task\
            \ that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/providervdc/{id}/metadata/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key from provider vDC metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete the specified key and its value from provider vDC metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/pvdcStorageProfile/{id}/metadata/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key from Provider VDC Storage
        Profile metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete the specified key and its value from Provider VDC Storage
        Profile metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/resourceclass/{id}:
    get:
      tags:
        - extension
      description: Retrieve (GET) resource class info
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.resourceClass+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ResourceClassType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Deletes (DELETE) resource class
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/resourceclassaction/{id}:
    get:
      tags:
        - extension
      description: Retrieve (GET) resource class action info
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.resourceClassAction+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ResourceClassActionType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Deletes (DELETE) resource class action
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/right/{id}:
    get:
      tags:
        - admin
      description: Retrieves a right.
      responses:
        2XX:
          description: RightType
          content:
            application/vnd.vmware.admin.right+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RightType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Updates a right.
      requestBody:
        content:
          application/vnd.vmware.admin.right+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RightType'
        required: true
      responses:
        2XX:
          description: RightType
          content:
            application/vnd.vmware.admin.right+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RightType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Deletes a right.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{orgId}/right/{id}:
    get:
      tags:
        - admin
      description: Retrieves right in the context of an organization
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.right+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RightType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Unlink a right from an organization
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{orgId}/rights:
    get:
      tags:
        - admin
      description: Retrieve rights for an organization
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.org.rights+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrganizationRolesType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Modify rights for an organization
      requestBody:
        content:
          application/vnd.vmware.admin.org.rights+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrganizationRolesType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.org.rights+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrganizationRolesType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Add rights to an organization
      requestBody:
        content:
          application/vnd.vmware.admin.org.rights+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrganizationRolesType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.org.rights+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrganizationRolesType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Remove all rights from an organization
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
  /admin/role/{id}:
    get:
      tags:
        - admin
      description: Retrieve a role.
      responses:
        2XX:
          description: RoleType
          content:
            application/vnd.vmware.admin.role+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RoleType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: "Update a role.\n\n This request changes the name or description\
        \ of the role, and adds or removes rights."
      requestBody:
        content:
          application/vnd.vmware.admin.role+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RoleType'
        required: true
      responses:
        2XX:
          description: RoleType
          content:
            application/vnd.vmware.admin.role+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RoleType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete a role.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdcs/extension/{selectorExtensionId}:
    get:
      tags:
        - admin
      description: "Retrieves a Selector Extension.\n\n The association can be the\
        \ default policy, or an overridden instance of the default policy."
      responses:
        2XX:
          description: representation of a Selector Extension {@link SelectorExtensionType}
          content:
            application/vnd.vmware.admin.extensibility.selector+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SelectorExtensionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: "Updates a Selector Extension.\n\n The association can be the default\
        \ policy, or an overridden instance of the default policy."
      requestBody:
        content:
          application/vnd.vmware.admin.extensibility.selector+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SelectorExtensionType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.extensibility.selector+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SelectorExtensionType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: "Deletes a Selector Extension.\n\n The association can be the default\
        \ policy, or an overridden instance of the default policy."
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: selectorExtensionId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/{id}:
    get:
      tags:
        - extension
      description: Gives information about a concrete extension service.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.service+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AdminServiceType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Updates already registered service.
      requestBody:
        content:
          application/vnd.vmware.admin.service+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AdminServiceType'
        required: true
      responses:
        2XX:
          description: '{@link AdminServiceType}'
          content:
            application/vnd.vmware.admin.service+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AdminServiceType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Deletes registered service.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/serviceresource/{id}:
    get:
      tags:
        - extension
      description: Retrieve (GET) service resource
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.serviceResource+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ServiceResourceType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Delete (DELETE) service resource
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /shadowVm/{id}:
    get:
      tags:
        - user
      description: Retrieve a shadow VM.
      responses:
        2XX:
          description: '{@link VAppTemplateType}'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: "Deletes shadow VM.\n\n This API for deletion of shadow VMs has\
        \ changed URL signature to better reflect the API object model."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /site/associations/{id}:
    get:
      tags:
        - user
      description: Get the {@link SiteAssociationType} for the specified site id.
        GET /api/site/associations/{siteId}
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.site+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SiteType'
            application/vnd.vmware.admin.siteAssociation+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SiteAssociationType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Adds an association for the specified site. PUT /api/site/associations/{siteId}
      requestBody:
        content:
          application/vnd.vmware.admin.siteAssociation+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SiteAssociationType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Deletes the association for the specified site. DELETE /api/site/associations/{siteId}
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/strandedItem/{id}:
    get:
      tags:
        - extension
      description: Gets the representation of a strandedItem.
      responses:
        2XX:
          description: Returns the requested stranded item.
          content:
            application/vnd.vmware.admin.strandedItem+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_StrandedItemType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Removes stranded item.
      responses:
        2XX:
          description: Task created to remove the stranded item
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vdcTemplate/{id}:
    get:
      tags:
        - extension
      description: Retrieve a vDC template.
      responses:
        2XX:
          description: vdcTemplate the VDC Template whose id was given as input.
          content:
            application/vnd.vmware.admin.vmwVdcTemplate+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update a vDC template.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwVdcTemplate+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateType'
        required: true
      responses:
        2XX:
          description: vdcTemplate the new contents of the VDC Template.
          content:
            application/vnd.vmware.admin.vmwVdcTemplate+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Delete a vDC template.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/user/{id}:
    get:
      tags:
        - admin
      description: Retrieve a user.
      responses:
        2XX:
          description: UserType
          content:
            application/vnd.vmware.admin.user+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_UserType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: "Update a user.\n\n Use this request to update any property of\
        \ a local user, or to update the name or description of an imported user.\
        \ A locked user cannot be updated."
      requestBody:
        content:
          application/vnd.vmware.admin.user+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_UserType'
        required: true
      responses:
        2XX:
          description: UserType
          content:
            application/vnd.vmware.admin.user+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_UserType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete a user.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}:
    get:
      tags:
        - user
      description: Retrieve a vApp or VM.
      responses:
        2XX:
          description: VAppType
          content:
            application/vnd.vmware.vcloud.vApp+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Modify the name or description of a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.vm+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VmType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete a vApp or VM.
      parameters:
        - in: query
          name: force
          schema:
            $ref: '#/components/schemas/query-parameter_force'
          style: form
        - in: query
          name: recursive
          schema:
            $ref: '#/components/schemas/query-parameter_recursive'
          style: form
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/metadata/{key}:
    get:
      tags:
        - user
      description: Retrieve the value of the specified key from vApp or VM metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete the specified key and its value from vApp or VM metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}:
    get:
      tags:
        - user
      description: Retrieve a vApp template.
      responses:
        2XX:
          description: VAppTemplateType
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the name, description and gold master of a vApp template.
      requestBody:
        content:
          application/vnd.vmware.vcloud.vAppTemplate+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VAppTemplateType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete a vApp template.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/metadata/{key}:
    get:
      tags:
        - user
      description: Retrieve the value of the specified key from vApp template or VM
        metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Delete the specified key and its value from vApp template or VM
        metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}:
    get:
      tags:
        - admin
      description: Retrieve the admin view of an organization vDC.
      responses:
        2XX:
          description: AdminVdcType
          content:
            application/vnd.vmware.admin.vdc+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminVdcType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Modify an organization vDC.
      requestBody:
        content:
          application/vnd.vmware.admin.vdc+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_AdminVdcType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: "Delete an organization vDC.\n\n You must disable the virtual datacenter\
        \ before you can delete it."
      parameters:
        - in: query
          name: force
          schema:
            $ref: '#/components/schemas/query-parameter_force'
          style: form
        - in: query
          name: recursive
          schema:
            $ref: '#/components/schemas/query-parameter_recursive'
          style: form
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}:
    get:
      tags:
        - user
      description: Retrieve a vDC.
      responses:
        2XX:
          description: VdcType
          content:
            application/vnd.vmware.vcloud.vdc+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VdcType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: "Modify the name and/or description of an organization vDC.\n\n\
        \ This operation is asynchronous and returns a task that you can monitor to\
        \ track the progress of the request."
      requestBody:
        content:
          application/vnd.vmware.vcloud.vdc+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VdcType'
        required: true
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: "Delete an organization vDC.\n\n You must disable the virtual datacenter\
        \ before you can delete it, unless {@code RestConstants.DeleteParameters.FORCE}\
        \ is asserted"
      parameters:
        - in: query
          name: force
          schema:
            $ref: '#/components/schemas/query-parameter_force'
          style: form
        - in: query
          name: recursive
          schema:
            $ref: '#/components/schemas/query-parameter_recursive'
          style: form
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}/metadata/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key from virtual datacenter
        metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete the specified key and its value from virtual datacenter
        metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/vdcStorageProfile/{id}/metadata/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key from vDC storage profile
        metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Set the value for the specified metadata key to the value provided,
        overwriting any existing value.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataValueType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - admin
      description: Delete the specified key and its value from vDC storage profile
        metadata.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/vmAffinityRules/{ruleId}:
    get:
      tags:
        - user
      description: Retrieves the specified VM affinity rule
      responses:
        2XX:
          description: representation of a VM affinity rule {@link VmAffinityRuleInfo}
          content:
            application/vnd.vmware.vcloud.vmaffinityrule+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VmAffinityRuleType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Updates the specified VM affinity/anti\-affinity rule. This operation
        is asynchronous and returns a task that you can monitor to track the progress
        of the request.
      requestBody:
        content:
          application/vnd.vmware.vcloud.vmaffinityrule+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VmAffinityRuleType'
        required: true
      responses:
        2XX:
          description: representation of a Task {@link TaskSpec}
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      description: Deletes the specified VM affinity/anti\-affinity rule
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vmGroup/{groupId}:
    get:
      tags:
        - extension
      description: Retrieves the vm group by Id
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    delete:
      tags:
        - extension
      description: Delete the specified VM group
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/resourceclassaction/{id}/aclrules:
    get:
      tags:
        - extension
      description: List registered resource class ACL rule for extension service.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Registers resource class ACL rule for extension service.
      requestBody:
        content:
          application/vnd.vmware.admin.aclRule+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AclRuleType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.aclRule+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AclRuleType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/blockingTasks:
    get:
      tags:
        - extension
      description: Retrieve a list of active or recently completed blocking task requests.
      responses:
        2XX:
          description: '{@link ReferencesType}'
      security:
        - bearerAuth: []
  /admin/extension/vdcTemplateReferences:
    get:
      tags:
        - extension
      description: Retrieve a list of all VDC templates.
      responses:
        2XX:
          description: ReferencesType
          content:
            application/vnd.vmware.admin.vmwVdcTemplateReferences+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateListType'
      security:
        - bearerAuth: []
  /admin/network/{id}/allocatedAddresses:
    get:
      tags:
        - admin
      description: Retrieve the list of IP addresses allocated to the network.
      responses:
        2XX:
          description: '{@link JAXBElement<AllocatedIpAddressesType\>}'
          content:
            application/vnd.vmware.vcloud.allocatedNetworkAddress+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AllocatedIpAddressesType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /network/{id}/allocatedAddresses:
    get:
      tags:
        - user
      description: Retrieve a list of IP addresses allocated to the network.
      responses:
        2XX:
          description: '{@link JAXBElement<AllocatedIpAddressesType\>}'
          content:
            application/vnd.vmware.vcloud.allocatedNetworkAddress+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AllocatedIpAddressesType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/amqp:
    get:
      tags:
        - extension
      description: Retrieve system AMQP settings.
      responses:
        2XX:
          description: '{@link JAXBElement<AmqpSettingsType\>}'
          content:
            application/vnd.vmware.admin.amqpSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AmqpSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update system AMQP settings.
      requestBody:
        content:
          application/vnd.vmware.admin.amqpSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AmqpSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<AmqpSettingsType\>}'
          content:
            application/vnd.vmware.admin.amqpSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AmqpSettingsType'
      security:
        - bearerAuth: []
  /apidefinition/{id}:
    get:
      tags:
        - user
      description: ''
      responses:
        2XX:
          description: '{@link ApiDefinitionType}'
          content:
            application/vnd.vmware.vcloud.apidefinition+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ApiDefinitionType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/{id}/apidefinitions:
    get:
      tags:
        - extension
      description: Returns the API definitions registered by this service.
      responses:
        2XX:
          description: List of {@link QueryResultApiDefinitionRecordType}
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Creates API definition.
      requestBody:
        content:
          application/vnd.vmware.admin.apiDefinition+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AdminApiDefinitionType'
        required: true
      responses:
        2XX:
          description: '{@link AdminApiDefinitionType}'
          content:
            application/vnd.vmware.admin.apiDefinition+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AdminApiDefinitionType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /apidefinitions:
    get:
      tags:
        - user
      description: Return all API definitions.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /files:
    get:
      tags:
        - user
      description: Return all API definition file descriptors.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /service/{id}/apidefinitions:
    get:
      tags:
        - user
      description: Return all Extension Service API Definitions.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /extensibility:
    get:
      tags:
        - user
      description: Retrieve a list of links to API extensibility operations and entities.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.apiextensibility+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ApiExtensibilityType'
      security:
        - bearerAuth: []
  /admin/extension/service/{id}/apifilters:
    get:
      tags:
        - extension
      description: Returns the API filters registered by this service.
      responses:
        2XX:
          description: List of {@link QueryResultApiFilterRecordType}
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Creates API filter.
      requestBody:
        content:
          application/vnd.vmware.admin.apiFilter+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ApiFilterType'
        required: true
      responses:
        2XX:
          description: '{@link ApiFilterType}'
          content:
            application/vnd.vmware.admin.apiFilter+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ApiFilterType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/associations/localAssociationData:
    get:
      tags:
        - admin
      description: Gets the associaiton data for a given local org. This can be pasted
        into the body of a request to add an associated org on a remote site
      responses:
        2XX:
          description: '{@link OrgAssociationType} containing the local org''s info'
          content:
            application/vnd.vmware.admin.organizationAssociation+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgAssociationType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/associations:
    get:
      tags:
        - admin
      description: Retrieves the complete list of Organizations associated with this
        organization
      responses:
        2XX:
          description: non\-null, possibly empty {@link List} of {@link OrgAssociationsType}
            representing this organization's associations
          content:
            application/vnd.vmware.admin.organizationAssociations+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgAssociationsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: "Replaces the organization's current list of association members\
        \ with the specified list of members\n\n If the list is empty, all existing\
        \ members will be deleted."
      requestBody:
        content:
          application/vnd.vmware.admin.organizationAssociations+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgAssociationsType'
        required: true
      responses:
        2XX:
          description: Reference to the task updating the org's associations
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Adds a new member to this organization's associations
      requestBody:
        content:
          application/vnd.vmware.admin.organizationAssociation+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgAssociationType'
        required: true
      responses:
        2XX:
          description: Reference to the task performing the association
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/hostReferences:
    get:
      tags:
        - extension
      description: Retrieve the list of ESX/ESXi hosts in the cloud.
      responses:
        2XX:
          description: '{@link JAXBElement<VMWHostReferencesType\>}'
          content:
            application/vnd.vmware.admin.vmwHostReferences+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWHostReferencesType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/networks:
    get:
      tags:
        - extension
      description: "Retrieve a list of available vCenter networks and portgroups.\n\
        \n Networks and portgroups that are already in use by a vCloud Director network\
        \ are not listed."
      responses:
        2XX:
          description: '{@link JAXBElement<NetworksReferencesType\>}'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providervdc/{id}/availableStorageProfiles:
    get:
      tags:
        - extension
      description: Retrieve a list of storage classes that can be added to the specified
        provider vDC. Storage classes that have already been added to the provider
        vDC are not included in the list.
      responses:
        2XX:
          description: '{@link VMWStorageProfilesType}'
          content:
            application/vnd.vmware.admin.vmwStorageProfiles+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWStorageProfilesType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/resourcePoolList:
    get:
      tags:
        - extension
      description: "Retrieve a list of unused resource pools from a vCenter server.\n\
        \n Resource pools that are already in use by a provider vDC are not listed."
      responses:
        2XX:
          description: ResourcePoolListType
          content:
            application/vnd.vmware.admin.resourcePoolList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ResourcePoolListType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/blockingTask/{id}:
    get:
      tags:
        - extension
      description: Retrieve the representation of a blocking task.
      responses:
        2XX:
          description: BlockingTask
          content:
            application/vnd.vmware.admin.blockingTask+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_BlockingTaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/blockingTask/operations:
    get:
      tags:
        - extension
      description: Retrieve a list of operations that are configured as blocking tasks.
      responses:
        2XX:
          description: '{@link JAXBElement<TaskExtensionSettingsType\>}'
          content:
            application/vnd.vmware.admin.taskOperationList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskOperationListType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update the list of operations that are configured as blocking tasks.
      responses:
        2XX:
          description: '{@link JAXBElement<TaskOperationListType\>}'
          content:
            application/vnd.vmware.admin.taskOperationList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskOperationListType'
      security:
        - bearerAuth: []
  /admin/extension/settings/blockingTask:
    get:
      tags:
        - extension
      description: Retrieve system blocking task settings.
      responses:
        2XX:
          description: '{@link JAXBElement<TaskExtensionSettingsType\>}'
          content:
            application/vnd.vmware.admin.blockingTaskSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_BlockingTaskSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update system blocking task settings.
      responses:
        2XX:
          description: '{@link JAXBElement<TaskExtensionSettingsType\>}'
          content:
            application/vnd.vmware.admin.blockingTaskSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_BlockingTaskSettingsType'
      security:
        - bearerAuth: []
  /vApp/{id}/bootOptions:
    get:
      tags:
        - user
      description: ''
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.bootOptionsSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_BootOptionsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/branding:
    get:
      tags:
        - extension
      description: "Retrieve system branding settings.\n\n You can use system branding\
        \ settings to customize the vCloud Director Web console and some of the links\
        \ that appear on the vCloud Director Home login screen."
      responses:
        2XX:
          description: '{@link JAXBElement<BrandingSettingsType\>}'
          content:
            application/vnd.vmware.admin.brandingSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_BrandingSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: "Update system branding settings.\n\n You can use system branding\
        \ settings to customize the vCloud Director Web console and some of the links\
        \ that appear on the vCloud Director Home login screen."
      requestBody:
        content:
          application/vnd.vmware.admin.brandingSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_BrandingSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<BrandingSettingsType\>}'
          content:
            application/vnd.vmware.admin.brandingSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_BrandingSettingsType'
      security:
        - bearerAuth: []
  /catalog/{id}:
    get:
      tags:
        - user
      description: Retrieve a catalog.
      responses:
        2XX:
          description: CatalogType
          content:
            application/vnd.vmware.vcloud.catalog+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CatalogType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalogItem/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve all metadata associated with a catalog item.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Merge the metadata provided in the request with existing catalog
        item metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/catalog/{id}/metadata:
    get:
      tags:
        - admin
      description: Retrieve metadata associated with the catalog.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalog/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve all catalog metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/catalog/{id}/metadata/{domain}/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key in the specified domain
        from catalog metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/catalog/{id}/owner:
    get:
      tags:
        - admin
      description: Retrieve the owner of a catalog.
      responses:
        2XX:
          description: '{@link JAXBElement<OwnerType\>}'
          content:
            application/vnd.vmware.vcloud.owner+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OwnerType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: "Update the owner of a catalog.\n\n The request body specifies\
        \ the new owner"
      requestBody:
        content:
          application/vnd.vmware.vcloud.owner+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OwnerType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalogs/query:
    get:
      tags:
        - user
      description: Retrieves a list of Catalogs by using REST API general QueryHandler;
        If filter is provided it will be applied to the corresponding result set.
        Format determines the elements representation \- references or records. Default
        format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /vApp/{id}/checkpostcustomizationscript:
    get:
      tags:
        - user
      description: Retrieve the flag value check\_post\_guest\_customization. This
        flag decides if property collector would wait for post guest customization
        script to complete
      responses:
        2XX:
          description: VmCheckPGCType
          content:
            application/vnd.vmware.vcloud.vm.checkPostGuestCustomizationSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VmCheckPGCType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Modify the PostGC Status check of a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.vm.checkPostGuestCustomizationSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VmCheckPGCType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation sets the flag check\\_post\\_guest\\\
            _customization"
          content:
            application/vnd.vmware.vcloud.vm.checkPostGuestCustomizationSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VmCheckPGCType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /org/{id}/catalog/{catalogId}/controlAccess:
    get:
      tags:
        - user
      description: Retrieve access control information for a catalog.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: catalogId
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/controlAccess:
    get:
      tags:
        - user
      description: Retrieve access control information for a vApp.
      responses:
        2XX:
          description: ControlAccessParamsType
          content:
            application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/controlAccess:
    get:
      tags:
        - user
      description: Retrieve access control information for a VDC.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vdcTemplate/{id}/controlAccess:
    get:
      tags:
        - extension
      description: Retrieve access control information for a VDC template.
      responses:
        2XX:
          description: the ACL for that VDC Template.
          content:
            application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/virtualHardwareSection/cpu:
    get:
      tags:
        - user
      description: Retrieve the RASD item that specifies CPU properties of a VM.
      responses:
        2XX:
          description: ovf:RASD\_Type
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the RASD item that specifies CPU properties of a VM.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/virtualHardwareSection/cpu:
    get:
      tags:
        - user
      description: Retrieve the RASD item that specifies CPU properties of a VM.
      responses:
        2XX:
          description: ovf:RASD\_Type
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the RASD item that specifies CPU properties of a VM.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/datastore/{id}:
    get:
      tags:
        - extension
      description: Retrieve a datastore.
      responses:
        2XX:
          description: Datastore
          content:
            application/vnd.vmware.admin.datastore+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_DatastoreType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update datastore properties, including name, description, and low
        disk space thresholds.
      responses:
        2XX:
          description: Datastore
          content:
            application/vnd.vmware.admin.datastore+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_DatastoreType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/datastores:
    get:
      tags:
        - extension
      description: Retrieve a list of references to datastores in the system.
      responses:
        2XX:
          description: DatastoreReferences
      security:
        - bearerAuth: []
  /admin/extension/datastores/query:
    get:
      tags:
        - extension
      description: Get a list of all datastores by using REST API General QueryHandler.
        This is read only list of datastores. If filter is provided it will be applied
        to the corresponding result set. Format determines the elements representation
        \- referenceView or simpleView. Default format is referenceView.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/extension/providervdc/{id}/discoverResourcePools:
    get:
      tags:
        - extension
      description: Get direct children resource pools of Provider VDC that are valid
        candidates for creating a new VDC
      responses:
        2XX:
          description: '{@link VMWDiscoveredResourcePoolsType}'
          content:
            application/vnd.vmware.admin.vmwDiscoveredResourcePools+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWDiscoveredResourcePoolsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providervdc/{id}/discoverResourcePools/{parent_rp_moref}:
    get:
      tags:
        - extension
      description: Get direct children resource pools of {parent\_rp\_moref} nested
        under the Provider VDC which are valid candidates for creating a new VDC.
      responses:
        2XX:
          description: '{@link VMWDiscoveredResourcePoolsType}'
          content:
            application/vnd.vmware.admin.vmwDiscoveredResourcePools+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWDiscoveredResourcePoolsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: parent_rp_moref
        required: true
        schema:
          type: string
        style: simple
  /disk/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve metadata associated with the disk.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /disk/{id}/owner:
    get:
      tags:
        - user
      description: Retrieve the owner of a disk.
      responses:
        2XX:
          description: '{@link JAXBElement<OwnerType\>}'
          content:
            application/vnd.vmware.vcloud.owner+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OwnerType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Change the owner of a disk.
      requestBody:
        content:
          application/vnd.vmware.vcloud.owner+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OwnerType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /disks/query:
    get:
      tags:
        - user
      description: Retrieves a disk list by using REST API general QueryHandler; If
        filter is provided it will be applied to the corresponding result set. Format
        determines the elements representation \- references or records. Default format
        is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /vApp/{id}/virtualHardwareSection/disks:
    get:
      tags:
        - user
      description: Retrieve all RASD items that specify hard disk and hard disk controller
        properties of a VM.
      responses:
        2XX:
          description: RasdItemsListType
          content:
            application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RasdItemsListType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update all RASD items that specify hard disk and hard disk controller
        properties of a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RasdItemsListType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/virtualHardwareSection/disks:
    get:
      tags:
        - user
      description: Retrieve all RASD items that specify hard disk and hard disk controller
        properties of a VM.
      responses:
        2XX:
          description: RasdItemsListType
          content:
            application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RasdItemsListType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update all RASD items that specify hard disk and hard disk controller
        properties of a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RasdItemsListType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/email:
    get:
      tags:
        - extension
      description: Retrieve system email settings.
      responses:
        2XX:
          description: '{@link JAXBElement<EmailSettingsType\>}'
          content:
            application/vnd.vmware.admin.emailSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_EmailSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update system email settings.
      requestBody:
        content:
          application/vnd.vmware.admin.emailSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_EmailSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<EmailSettingsType\>}'
          content:
            application/vnd.vmware.admin.emailSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_EmailSettingsType'
      security:
        - bearerAuth: []
  /entity/{id}:
    get:
      tags:
        - user
      description: Redirects to the URL of an entity with the given VCD ID.
      responses:
        2XX:
          description: Response
          content:
            application/vnd.vmware.vcloud.entity+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_EntityType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/event/{id}:
    get:
      tags:
        - admin
      description: Returns event with specified ID.
      responses:
        2XX:
          description: event details
          content:
            application/vnd.vmware.admin.event+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_EventType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /query:
    get:
      tags:
        - user
      description: REST API General queries handler
      parameters:
        - in: query
          name: type
          schema:
            $ref: '#/components/schemas/query-parameter_type'
          style: form
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns result of the query executed with provided filter in
            xml format.
          content:
            application/vnd.vmware.vcloud.query.references+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ReferencesType'
      security:
        - bearerAuth: []
  /admin/extension:
    get:
      tags:
        - extension
      description: "Retrieve a list of extension objects and operations.\n\n The VMWExtension\
        \ element provides access to a cloud\\-wide namespace of vSphere platform\
        \ objects that are registered for use by the system, and links that allow\
        \ you to add vSphere servers and related resources such as networks and resource\
        \ pools to the cloud. It also provides access to system level configuration\
        \ settings for Kerberos and LDAP services."
      responses:
        2XX:
          description: VMWExtensionType
          content:
            application/vnd.vmware.admin.vmwExtension+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWExtensionType'
      security:
        - bearerAuth: []
  /admin/extension/service:
    get:
      tags:
        - extension
      description: Retrieves a list of extension service operations.
      responses:
        2XX:
          description: Representation of extension service operations.
          content:
            application/vnd.vmware.admin.extensionServices+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ExtensionServicesType'
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Creates service.
      requestBody:
        content:
          application/vnd.vmware.admin.service+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AdminServiceType'
        required: true
      responses:
        2XX:
          description: the newly created {@link AdminServiceType}
          content:
            application/vnd.vmware.admin.service+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AdminServiceType'
      security:
        - bearerAuth: []
  /admin/extension/externalNetworkReferences:
    get:
      tags:
        - extension
      description: Retrieve a list of references to exernal networks in the system.
      responses:
        2XX:
          description: VMWExternalNetworkReferences
          content:
            application/vnd.vmware.admin.vmwExternalNetworkReferences+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWExternalNetworkReferencesType'
      security:
        - bearerAuth: []
  /admin/extension/externalNetworkReferences/query:
    get:
      tags:
        - extension
      description: Get list of external networks by using REST API general QueryHandler.
        If filter is provided it will be applied to the corresponding result set.
        Format determines the elements representation \- referenceView or simpleView.
        Default format is referenceView.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/federation:
    get:
      tags:
        - admin
      description: Retrieve other organization settings.
      responses:
        2XX:
          description: '{@link JAXBElement<GeneralOrgSettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationFederationSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgFederationSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update other organization settings.
      requestBody:
        content:
          application/vnd.vmware.admin.organizationFederationSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgFederationSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<GeneralOrgSettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationFederationSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgFederationSettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/apidefinition/{id}/files:
    get:
      tags:
        - extension
      description: Returns all file descriptors for the API definition.
      responses:
        2XX:
          description: List of {@link QueryResultFileDescriptorRecordType}
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Creates file descriptor.
      requestBody:
        content:
          application/vnd.vmware.admin.fileDescriptor+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AdminFileDescriptorType'
        required: true
      responses:
        2XX:
          description: '{@link AdminFileDescriptorType}'
          content:
            application/vnd.vmware.admin.fileDescriptor+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AdminFileDescriptorType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /apidefinition/{id}/files:
    get:
      tags:
        - user
      description: Returns all file descriptors for the API definition.
      responses:
        2XX:
          description: List of {@link QueryResultFileDescriptorRecordType}
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/general:
    get:
      tags:
        - extension
      description: "Retrieve other system settings.\n\n These settings include catalog\
        \ publishing rights, VM quotas, and related system\\-wide configuration defaults."
      responses:
        2XX:
          description: '{@link JAXBElement<GeneralSettingsType\>}'
          content:
            application/vnd.vmware.admin.generalSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_GeneralSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: "Update other system settings.\n\n These settings include catalog\
        \ publishing rights, VM quotas, and related system\\-wide configuration defaults."
      requestBody:
        content:
          application/vnd.vmware.admin.generalSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_GeneralSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<GeneralSettingsType\>}'
          content:
            application/vnd.vmware.admin.generalSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_GeneralSettingsType'
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/general:
    get:
      tags:
        - admin
      description: Retrieve other organization settings.
      responses:
        2XX:
          description: '{@link JAXBElement<GeneralOrgSettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationGeneralSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgGeneralSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update other organization settings.
      requestBody:
        content:
          application/vnd.vmware.admin.organizationGeneralSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgGeneralSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<GeneralOrgSettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationGeneralSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgGeneralSettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/groups/query:
    get:
      tags:
        - admin
      description: Retrieves a list of groups for organization the org admin belongs
        to by using REST API general QueryHandler; If filter is provided it will be
        applied to the corresponding result set. Format determines the elements representation
        \- references or records. Default format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /vApp/{id}/guestcustomizationstatus:
    get:
      tags:
        - user
      description: 'Retrieve status of guest customization for that VM Following are
        the possible status 0 \- PENDING\_GC : Guest Customization is either not started
        or in progress. This is set whenever a VM need customization. 1 \- PENDING\_REBOOT
        : GC is successful, but reboot is pending. This is set when vCloud receives
        "guestinfo.gc.status" as successful 2 \- PENDING\_POST\_GC : Reboot has happened,
        waiting for post gc script to complete. This is set when tools running status
        comes as "Running" based on conditions 1 & 2 3 \- COMPLETE : GC is complete.'
      responses:
        2XX:
          description: VmCheckPGCType
          content:
            application/vnd.vmware.vcloud.guestCustomizationStatusSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_GuestCustomizationStatusSectionType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/guestCustomizationSection:
    get:
      tags:
        - user
      description: Retrieves the guest customization section of a VM.
      responses:
        2XX:
          description: GuestCustomizationSectionType
          content:
            application/vnd.vmware.vcloud.guestCustomizationSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_GuestCustomizationSectionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Updates the guest customization section of a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.guestCustomizationSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_GuestCustomizationSectionType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/guestCustomizationSection:
    get:
      tags:
        - user
      description: Retrieves the guest customization section of a VM.
      responses:
        2XX:
          description: GuestCustomizationSectionType
          content:
            application/vnd.vmware.vcloud.guestCustomizationSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_GuestCustomizationSectionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Updates the guest customization section of a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.guestCustomizationSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_GuestCustomizationSectionType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /hwv/{id}:
    get:
      tags:
        - user
      description: Retrieve a Virtual Hardware Version.
      responses:
        2XX:
          description: VirtualHardwareVersionType
          content:
            application/vnd.vmware.vcloud.virtualHardwareVersion+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VirtualHardwareVersionType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/host/{id}:
    get:
      tags:
        - extension
      description: Retrieve a host.
      responses:
        2XX:
          description: HostType
          content:
            application/vnd.vmware.admin.host+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_HostType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/hostGroup/{groupId}:
    get:
      tags:
        - extension
      description: Retrieves the host group by Id
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/resourcePool/{rpId}/hostGroups:
    get:
      tags:
        - extension
      description: List all HostGroups within this resource pool.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: rpId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/hostReferences:
    get:
      tags:
        - extension
      description: Retrieve a list of references to ESX/ESXi hosts attached to the
        system.
      responses:
        2XX:
          description: VMWHostReferences
          content:
            application/vnd.vmware.admin.vmwHostReferences+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWHostReferencesType'
      security:
        - bearerAuth: []
  /admin/extension/hostReferences/query:
    get:
      tags:
        - extension
      description: Get list of hosts by using REST API general QueryHAndler; This
        is read only list of host references and is not bound to specific states.
        If filter is provided it will be applied to the corresponding result set.
        Format determines the elements representation \- referenceView or simpleView.
        Default format is referenceView.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/extension/settings/kerberosSettings:
    get:
      tags:
        - extension
      description: Retrieve system Kerberos settings.
      responses:
        2XX:
          description: '{@link JAXBElement<KerberosSettingsType\>}'
          content:
            application/vnd.vmware.admin.kerberosSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_KerberosSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update system Kerberos settings.
      requestBody:
        content:
          application/vnd.vmware.admin.kerberosSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_KerberosSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<KerberosSettingsType\>}'
          content:
            application/vnd.vmware.admin.kerberosSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_KerberosSettingsType'
      security:
        - bearerAuth: []
  /admin/extension/settings/ldapSettings:
    get:
      tags:
        - extension
      description: Retrieve system LDAP settings.
      responses:
        2XX:
          description: '{@link JAXBElement<LdapSettingsType\>}'
          content:
            application/vnd.vmware.admin.ldapSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_LdapSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update system LDAP settings.
      requestBody:
        content:
          application/vnd.vmware.admin.ldapSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_LdapSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<LdapSettingsType\>}'
          content:
            application/vnd.vmware.admin.ldapSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_LdapSettingsType'
      security:
        - bearerAuth: []
  /vApp/{id}/leaseSettingsSection:
    get:
      tags:
        - user
      description: Retrieves the lease settings section of a vApp or vApp template
      responses:
        2XX:
          description: LeaseSettingsSectionType
          content:
            application/vnd.vmware.vcloud.leaseSettingsSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_LeaseSettingsSectionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Updates the lease settings section of a vApp or vApp template.
      requestBody:
        content:
          application/vnd.vmware.vcloud.leaseSettingsSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_LeaseSettingsSectionType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/leaseSettingsSection:
    get:
      tags:
        - user
      description: Retrieves the lease settings section of a vApp or vApp template
      responses:
        2XX:
          description: LeaseSettingsSectionType
          content:
            application/vnd.vmware.vcloud.leaseSettingsSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_LeaseSettingsSectionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Updates the lease settings section of a vApp or vApp template.
      requestBody:
        content:
          application/vnd.vmware.vcloud.leaseSettingsSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_LeaseSettingsSectionType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/catalog:
    get:
      tags:
        - extension
      description: Retrieve vCloud Director catalog setting details.
      responses:
        2XX:
          description: '{@link JAXBElement<CatalogSettingsType\>}'
          content:
            application/vnd.vmware.admin.catalogSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_CatalogSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update catalog settings details.
      requestBody:
        content:
          application/vnd.vmware.admin.catalogSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_CatalogSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<CatalogSettingsType\>}'
          content:
            application/vnd.vmware.admin.catalogSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_CatalogSettingsType'
      security:
        - bearerAuth: []
  /admin/extension/settings/license:
    get:
      tags:
        - extension
      description: Retrieve vCloud Director software license details.
      responses:
        2XX:
          description: '{@link JAXBElement<LicenseType\>}'
          content:
            application/vnd.vmware.admin.licenseSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_LicenseType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update vCloud Director software license details.
      requestBody:
        content:
          application/vnd.vmware.admin.licenseSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_LicenseType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<LicenseType\>}'
          content:
            application/vnd.vmware.admin.licenseSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_LicenseType'
      security:
        - bearerAuth: []
  /admin/extension/service/{id}/links:
    get:
      tags:
        - extension
      description: Returns the links registered by this service.
      responses:
        2XX:
          description: List of {@link QueryResultServiceLinkRecordType}
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Create service link.
      requestBody:
        content:
          application/vnd.vmware.admin.serviceLink+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AdminServiceLinkType'
        required: true
      responses:
        2XX:
          description: '{@link AdminServiceLinkType}'
          content:
            application/vnd.vmware.admin.serviceLink+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AdminServiceLinkType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /site:
    get:
      tags:
        - user
      description: Get the {@link SiteType} that represents this local site. GET /api/site
      responses:
        2XX:
          description: The information about this site.
          content:
            application/vnd.vmware.vcloud.site+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SiteType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Sets the local site to match what is specified in the {@link SiteType}.
        It can contain a list of associated sites in addition to info specific to
        the local site PUT /api/site
      requestBody:
        content:
          application/vnd.vmware.vcloud.site+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SiteType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
  /login:
    get:
      tags:
        - user
      description: Login with HTTP GET request. (Same as POST, implemented for convenience.)
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.orgList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgListType'
      deprecated: true
      security:
        - basicAuth: []
    post:
      tags:
        - user
      description: "Login with HTTP POST request.\n\n The response includes an authorization\
        \ token in this format:\n\n x\\-vcloud\\-authorization: *token*\n\n Include\
        \ this header in all subsequent requests."
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.orgList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgListType'
      deprecated: true
      security:
        - basicAuth: []
  /admin/extension/settings/lookupService:
    get:
      tags:
        - extension
      description: Retrieve settings that describe how vCloud Director connects to
        a vSphere lookup service.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.lookupServiceSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_LookupServiceSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Register / unregister Lookup Service to / from vCD. In `LookupServiceParamsType`
        1. If LookupServiceUrl is set and not empty, the action is for register lookup
        service. 2. If LookupServiceUrl is unset or empty, the action is for unregister
        lookup service.
      requestBody:
        content:
          application/vnd.vmware.admin.lookupServiceParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_LookupServiceParamsType'
        required: true
      responses:
        2XX:
          description: AcceptedResponse<TaskType\>
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
  /vApp/{id}/virtualHardwareSection/media:
    get:
      tags:
        - user
      description: Retrieve all RASD items that specify CD\-ROM, DVD, and floppy disk
        device and controller properties of a VM.
      responses:
        2XX:
          description: RasdItemsListType
          content:
            application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RasdItemsListType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/virtualHardwareSection/media:
    get:
      tags:
        - user
      description: Retrieve all RASD items that specify CD\-ROM, DVD, and floppy disk
        device and controller properties of a VM.
      responses:
        2XX:
          description: RasdItemsListType
          content:
            application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RasdItemsListType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /media/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve metadata associated with a media object.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /media/{id}/owner:
    get:
      tags:
        - user
      description: Retrieve the owner of a media object.
      responses:
        2XX:
          description: '{@link JAXBElement<OwnerType\>}'
          content:
            application/vnd.vmware.vcloud.owner+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OwnerType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /mediaList/query:
    get:
      tags:
        - user
      description: Retrieves a media list by using REST API general QueryHandler;
        If filter is provided it will be applied to the corresponding result set.
        Format determines the elements representation \- references or records. Default
        format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /vApp/{id}/virtualHardwareSection/memory:
    get:
      tags:
        - user
      description: Retrieve the RASD item that specifies memory properties of a VM.
      responses:
        2XX:
          description: ovf:RASD\_Type
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the RASD item that specifies memory properties of a VM.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/virtualHardwareSection/memory:
    get:
      tags:
        - user
      description: Retrieve the RASD item that specifies memory properties of a VM.
      responses:
        2XX:
          description: ovf:RASD\_Type
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the RASD item that specifies memory properties of a VM.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vmGroup/name/{groupName}:
    get:
      tags:
        - extension
      description: ''
      responses:
        2XX:
          description: '{@link JAXBElement<VMWVmGroupType\>} with given VM group name'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/namedVmGroupReferences:
    get:
      tags:
        - extension
      description: Gets all references to named VM groups.
      responses:
        2XX:
          description: '{@link JAXBElement<VMWVmGroupType\>} with given VM group name'
          content:
            application/vnd.vmware.vcloud.query.references+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ReferencesType'
      security:
        - bearerAuth: []
  /network/{id}:
    get:
      tags:
        - user
      description: Retrieve an organization network.
      responses:
        2XX:
          description: OrgNetworkType
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/virtualHardwareSection/networkCards:
    get:
      tags:
        - user
      description: Retrieve all RASD items that specify network card properties of
        a VM.
      responses:
        2XX:
          description: RasdItemsListType
          content:
            application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RasdItemsListType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update all RASD items that specify network card properties of a
        VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RasdItemsListType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/virtualHardwareSection/networkCards:
    get:
      tags:
        - user
      description: Retrieve all RASD items that specify network card properties of
        a VM.
      responses:
        2XX:
          description: RasdItemsListType
          content:
            application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RasdItemsListType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update all RASD items that specify network card properties of a
        VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RasdItemsListType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/networkConfigSection:
    get:
      tags:
        - user
      description: Retrieve the network config section of a vApp or vApp template.
      responses:
        2XX:
          description: NetworkConfigSectionType
          content:
            application/vnd.vmware.vcloud.networkConfigSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_NetworkConfigSectionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the network config section of a vApp.
      requestBody:
        content:
          application/vnd.vmware.vcloud.networkConfigSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_NetworkConfigSectionType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/networkConfigSection:
    get:
      tags:
        - user
      description: Retrieve the network config section of a vApp or vApp template.
      responses:
        2XX:
          description: NetworkConfigSectionType
          content:
            application/vnd.vmware.vcloud.networkConfigSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_NetworkConfigSectionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the network config section of a vApp.
      requestBody:
        content:
          application/vnd.vmware.vcloud.networkConfigSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_NetworkConfigSectionType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/networkConnectionSection:
    get:
      tags:
        - user
      description: Retrieve the network connection section of a VM.
      responses:
        2XX:
          description: NetworkConnectionSectionType
          content:
            application/vnd.vmware.vcloud.networkConnectionSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_NetworkConnectionSectionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the network connection section of a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.networkConnectionSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_NetworkConnectionSectionType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/networkConnectionSection:
    get:
      tags:
        - user
      description: Retrieve the network connection section of a VM.
      responses:
        2XX:
          description: NetworkConnectionSectionType
          content:
            application/vnd.vmware.vcloud.networkConnectionSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_NetworkConnectionSectionType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the network connection section of a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.networkConnectionSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_NetworkConnectionSectionType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/network/{id}/metadata:
    get:
      tags:
        - admin
      description: Retrieve metadata associated with the network.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /network/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve metadata associated with the network.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/network/{id}/metadata/{domain}/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key in the specified domain
        from network metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/networkPoolReferences:
    get:
      tags:
        - extension
      description: Retrieve a list of references to network pools in the system.
      responses:
        2XX:
          description: VMWNetworkPoolReferences
          content:
            application/vnd.vmware.admin.vmwNetworkPoolReferences+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWNetworkPoolReferencesType'
      security:
        - bearerAuth: []
  /admin/extension/networkPoolReferences/query:
    get:
      tags:
        - extension
      description: Get list of network pools by using REST API general QueryHandler.
        This is read only list of network pool references and is not bound to specific
        states. If filter is provided it will be applied to the corresponding result
        set. Format determines the elements representation \- referenceView or simpleView.
        Default format is referenceView.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /vApp/{id}/networkSection:
    get:
      tags:
        - user
      description: Retrieve the network section of a vApp or vApp template.
      responses:
        2XX:
          description: ovf:NetworkSection\_Type
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/networkSection:
    get:
      tags:
        - user
      description: Retrieve the network section of a vApp or vApp template.
      responses:
        2XX:
          description: ovf:NetworkSection\_Type
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/notifications:
    get:
      tags:
        - extension
      description: Retrieve system AMQP notifications settings.
      responses:
        2XX:
          description: '{@link JAXBElement<NotificationsSettingsType\>}'
          content:
            application/vnd.vmware.admin.notificationsSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_NotificationsSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update system AMQP notifications settings.
      requestBody:
        content:
          application/vnd.vmware.admin.notificationsSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_NotificationsSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<NotificationsSettingsType\>}'
          content:
            application/vnd.vmware.admin.notificationsSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_NotificationsSettingsType'
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/oauth:
    get:
      tags:
        - admin
      description: Retrieve organization OAuth settings.
      responses:
        2XX:
          description: '{@link JAXBElement<OrgOAuthSettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationOAuthSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgOAuthSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update organization OAuth settings.
      requestBody:
        content:
          application/vnd.vmware.admin.organizationOAuthSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgOAuthSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<OrgOAuthSettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationOAuthSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgOAuthSettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/object:
    get:
      tags:
        - extension
      description: Displays the list of currently registered object extensions
      responses:
        2XX:
          description: Representation of a collection of registered object extensions
            {@link ObjectExtensionsType}
          content:
            application/vnd.vmware.admin.extensibility.objects+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ObjectExtensionsType'
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Registers a new object extension
      requestBody:
        content:
          application/vnd.vmware.admin.extensibility.object+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ObjectExtensionType'
        required: true
      responses:
        2XX:
          description: representation of an object extension {@link ObjectExtensionType}
          content:
            application/vnd.vmware.admin.extensibility.object+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ObjectExtensionType'
      security:
        - bearerAuth: []
  /vApp/{id}/operatingSystemSection:
    get:
      tags:
        - user
      description: Retrieve the operating system section of a VM.
      responses:
        2XX:
          description: ovf:OperatingSystemSection\_Type
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the operating system section of a VM.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/operationLimitsSettings:
    get:
      tags:
        - extension
      description: Retrieves the system wide defaults for tenant throttling
      responses:
        2XX:
          description: '{@link JAXBElement<OperationLimitsSettingsType\>}'
          content:
            application/vnd.vmware.admin.operationLimitsSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_OperationLimitsSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update catalog settings details.
      requestBody:
        content:
          application/vnd.vmware.admin.operationLimitsSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_OperationLimitsSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<OperationLimitsSettingsType\>}'
          content:
            application/vnd.vmware.admin.operationLimitsSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_OperationLimitsSettingsType'
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/email:
    get:
      tags:
        - admin
      description: Retrieve organization email settings.
      responses:
        2XX:
          description: '{@link JAXBElement<OrgEmailSettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationEmailSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgEmailSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update organization email settings.
      requestBody:
        content:
          application/vnd.vmware.admin.organizationEmailSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgEmailSettingsType'
        required: true
      responses:
        2XX:
          description: JAXBElement<OrgEmailSettingsType\>
          content:
            application/vnd.vmware.admin.organizationEmailSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgEmailSettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/settings/guestPersonalizationSettings:
    get:
      tags:
        - admin
      description: Retrieve organization defaults for guest personalization settings.
      responses:
        2XX:
          description: '{@link JAXBElement<OrgGuestPersonalizationSettingsType\>}'
          content:
            application/vnd.vmware.admin.guestPersonalizationSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgGuestPersonalizationSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update organization defaults for guest personalization settings.
      requestBody:
        content:
          application/vnd.vmware.admin.guestPersonalizationSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgGuestPersonalizationSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<OrgGuestPersonalizationSettingsType\>}'
          content:
            application/vnd.vmware.admin.guestPersonalizationSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgGuestPersonalizationSettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/settings/ldap:
    get:
      tags:
        - admin
      description: Retrieve organization LDAP settings.
      responses:
        2XX:
          description: '{@link JAXBElement<OrgEmailSettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationLdapSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgLdapSettingsType'
      deprecated: true
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update organization LDAP settings.
      requestBody:
        content:
          application/vnd.vmware.admin.organizationLdapSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgLdapSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<OrgEmailSettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationLdapSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgLdapSettingsType'
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/orgNetworks/query:
    get:
      tags:
        - extension
      description: Get list of Organization Networks for the system by using REST
        API general QueryHandler. This is read only list and is not bound to specific
        states. If filter is provided it will be applied to the corresponding result
        set. Format determines the elements representation \- referenceView or simpleView.
        Default format is referenceView.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/operationLimitsSettings:
    get:
      tags:
        - admin
      description: Retrieve organization defaults for guest personalization settings.
      responses:
        2XX:
          description: '{@link JAXBElement<OrgGuestPersonalizationSettingsType\>}'
          content:
            application/vnd.vmware.admin.operationLimitsSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_OperationLimitsSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update organization operation limits settings.
      requestBody:
        content:
          application/vnd.vmware.admin.operationLimitsSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_OperationLimitsSettingsType'
        required: true
      responses:
        2XX:
          description: JAXBElement<OrgGuestPersonalizationSettingsType\>
          content:
            application/vnd.vmware.admin.operationLimitsSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_OperationLimitsSettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/settings/passwordPolicy:
    get:
      tags:
        - admin
      description: Retrieve organization password policy settings.
      responses:
        2XX:
          description: '{@link JAXBElement<OrgPasswordPolicySettingsType\>}'
          content:
            application/vnd.vmware.admin.organizationPasswordPolicySettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgPasswordPolicySettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update organization password policy settings.
      requestBody:
        content:
          application/vnd.vmware.admin.organizationPasswordPolicySettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgPasswordPolicySettingsType'
        required: true
      responses:
        2XX:
          description: JAXBElement<OrgPasswordPolicyLeaseSettingsType\>
          content:
            application/vnd.vmware.admin.organizationPasswordPolicySettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgPasswordPolicySettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/settings:
    get:
      tags:
        - admin
      description: "Retrieve settings for this organization.\n\n Organization settings\
        \ are divided into categories. This request retrieves all categories of organization\
        \ settings."
      responses:
        2XX:
          description: '{@link JAXBElement<OrgSettingsType\>}'
          content:
            application/vnd.vmware.admin.orgSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: "Updates settings for this organization.\n\n Organization settings\
        \ are divided into categories. This request updates all categories of organization\
        \ settings."
      requestBody:
        content:
          application/vnd.vmware.admin.orgSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<OrgSettingsType\>}'
          content:
            application/vnd.vmware.admin.orgSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgSettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}/edgeGateways:
    get:
      tags:
        - admin
      description: List all gateways for this Org vDC.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Create an edge gateway.
      requestBody:
        content:
          application/vnd.vmware.admin.edgeGateway+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_GatewayType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.admin.edgeGateway+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_GatewayType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}/networks:
    get:
      tags:
        - admin
      description: List all networks for this Org vDC.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Create an Org vDC network.
      requestBody:
        content:
          application/vnd.vmware.vcloud.orgVdcNetwork+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgVdcNetworkType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.orgVdcNetwork+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgVdcNetworkType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /org/{id}/vdcRollup:
    get:
      tags:
        - user
      description: Retrieve the summary of usage and reserve capacity of all OrgVDCs
        in this org, and, if specified, any associated orgs.
      responses:
        2XX:
          description: The {@link JAXBElement} of the {@link OrgVdcRollupType}.
          content:
            application/vnd.vmware.vcloud.orgVdcRollup+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgVdcRollupType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/orgVdcs/query:
    get:
      tags:
        - extension
      description: Get list of all Organization Vdcs in the system by using REST API
        general QueryHandler. This is read only list and is not bound to specific
        states. If filter is provided it will be applied to the corresponding result
        set. Format determines the elements representation \- referenceView or simpleView.
        Default format is referenceView.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /org/{id}:
    get:
      tags:
        - user
      description: Retrieve an organization.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.org+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/metadata:
    get:
      tags:
        - admin
      description: Retrieve metadata associated with the organization.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /org/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve metadata associated with the organization.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/metadata/{domain}/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key in the specified domain
        from organization metadata .
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vdc/{id}/resourcePools:
    get:
      tags:
        - extension
      description: Retrieve resource pools associated with an organization VDC
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.OrganizationVdcResourcePoolSet+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_OrganizationResourcePoolSetType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /org:
    get:
      tags:
        - user
      description: "Retrieve a list of organizations accessible to you.\n\n The system\
        \ administrator has access to all organizations."
      responses:
        2XX:
          description: OrgListType
          content:
            application/vnd.vmware.vcloud.orgList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgListType'
      security:
        - bearerAuth: []
  /admin/orgs/query:
    get:
      tags:
        - admin
      description: Retrieves a list of organizations by using REST API general QueryHandler;
        If filter is provided it will be applied to the corresponding result set.
        Format determines the elements representation \- references or records. Default
        format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /vApp/{id}/productSections:
    get:
      tags:
        - user
      description: Retrieve a list of ProductSection elements from a vApp template,
        vApp, or VM.
      responses:
        2XX:
          description: '{@link JAXBElement<ProductSectionListType\>}'
          content:
            application/vnd.vmware.vcloud.productSections+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ProductSectionListType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update all ProductSection elements in a vApp template, vApp, or
        VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.productSections+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_ProductSectionListType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/productSections:
    get:
      tags:
        - user
      description: Retrieve a list of ProductSection elements from a vApp template,
        vApp, or VM.
      responses:
        2XX:
          description: '{@link JAXBElement<ProductSectionListType\>}'
          content:
            application/vnd.vmware.vcloud.productSections+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ProductSectionListType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/providervdc/{id}:
    get:
      tags:
        - admin
      description: Retrieve a provider vDC.
      responses:
        2XX:
          description: ProviderVdcType
          content:
            application/vnd.vmware.admin.providervdc+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ProviderVdcType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/providervdc/{id}/metadata:
    get:
      tags:
        - admin
      description: Retrieve metadata associated with the provider vDC.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providerVdcReferences:
    get:
      tags:
        - extension
      description: Retrieve a list of references to provider vDCs in the system.
      responses:
        2XX:
          description: VMWProviderVdcReferences
          content:
            application/vnd.vmware.admin.vmwProviderVdcReferences+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcReferencesType'
      security:
        - bearerAuth: []
  /admin/extension/pvdcStorageProfile/{id}:
    get:
      tags:
        - extension
      description: Retrieve provider vDC storage profile details.
      responses:
        2XX:
          description: ProviderVdcStorageClassType representation of storage profile
            referred by storageClassId
          content:
            application/vnd.vmware.admin.vmwPvdcStorageProfile+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcStorageProfileType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: "Update a provider vDC storage profile\n\n You can update a storage\
        \ profile to enable or disable it."
      requestBody:
        content:
          application/vnd.vmware.admin.vmwPvdcStorageProfile+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcStorageProfileType'
        required: true
      responses:
        2XX:
          description: Updated representation of the storage profile
          content:
            application/vnd.vmware.admin.vmwPvdcStorageProfile+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcStorageProfileType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/pvdcStorageProfile/{id}:
    get:
      tags:
        - admin
      description: Retrieve provider vDC storage profile details.
      responses:
        2XX:
          description: ProviderVdcStorageClassType representation of storage profile
            referred by storageClassId
          content:
            application/vnd.vmware.admin.pvdcStorageProfile+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ProviderVdcStorageProfileType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/pvdcStorageProfile/{id}/metadata:
    get:
      tags:
        - admin
      description: Retrieve metadata associated with the Provider VDC Storage Profile.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providerVdcReferences/query:
    get:
      tags:
        - extension
      description: Get list of provider vDCs by using REST API general QueryHandler.
        This is read only list and is not bound to specific states. If filter is provided
        it will be applied to the corresponding result set. Format determines the
        elements representation \- references, records or idrecords. Default format
        is records.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/extension/providervdc/{id}/resourcePools:
    get:
      tags:
        - extension
      description: Retrieve a provider vDC resource pool set.
      responses:
        2XX:
          description: '{@link PvdcResourcePoolSetType}'
          content:
            application/vnd.vmware.admin.vmwProviderVdcResourcePoolSet+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcResourcePoolSetType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /service:
    get:
      tags:
        - user
      description: Return all extension services registered with the system.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /admin/user/{id}/grantedRights:
    get:
      tags:
        - admin
      description: Queries user granted privileges
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.query.references+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ReferencesType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/resourceclass/{id}/resourceclassactions:
    get:
      tags:
        - extension
      description: List registered resource class actions for extension service.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Registers resource class action for extension service. The resource
        class action will be added only if a resource class with the same name does
        not exist.
      requestBody:
        content:
          application/vnd.vmware.admin.resourceClassAction+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ResourceClassActionType'
        required: true
      responses:
        2XX:
          description: Newly registered or already existing resource class action.
          content:
            application/vnd.vmware.admin.resourceClassAction+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ResourceClassActionType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/{id}/resourceclasses:
    get:
      tags:
        - extension
      description: List registered resource classes for extension service.
      responses:
        2XX:
          description: JAXB resource class
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Registers resource class for extension service. The resource class
        will be added only if a resource class with the same name does not exist.
      requestBody:
        content:
          application/vnd.vmware.admin.resourceClass+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ResourceClassType'
        required: true
      responses:
        2XX:
          description: Newly registered or already existing resource class.
          content:
            application/vnd.vmware.admin.resourceClass+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ResourceClassType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/{id}/rights:
    get:
      tags:
        - extension
      description: Gives the rights registered by this extension service.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.rights+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_RightRefsType'
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Registers right to the rights managed by this extension service.
        The right will be added only if a right with the same name does not already
        exists.
      requestBody:
        content:
          application/vnd.vmware.admin.right+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RightType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.right+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RightType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdcs/query:
    get:
      tags:
        - admin
      description: Retrieves a list of vdcs in the organization; If filter is provided
        it will be applied to the corresponding result set. Format determines the
        elements representation \- references or records. Default format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/org/{orgId}/roles/query:
    get:
      tags:
        - admin
      description: Retrieves a list of roles in the cloud by using REST API general
        QueryHandler; If filter is provided it will be applied to the corresponding
        result set. Format determines the elements representation \- references or
        records. Default format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
  /admin/roles/query:
    get:
      tags:
        - admin
      description: Retrieves a list of roles in the cloud by using REST API general
        QueryHandler; If filter is provided it will be applied to the corresponding
        result set. Format determines the elements representation \- references or
        records. Default format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/extension/resourcePool/{rpId}/rules:
    get:
      tags:
        - extension
      description: List all VmHostAffinityRules within this resource pool.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Create VM Affinity Rules within this resource pool.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwVmHostAffinityRule+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWVmHostAffinityRuleType'
        required: true
      responses:
        2XX:
          description: the task to create VM Host Affinity Rule
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: rpId
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/runtimeInfoSection:
    get:
      tags:
        - user
      description: Retrieve the runtime info section of a VM.
      responses:
        2XX:
          description: RuntimeInfoSectionType The runtime info section
          content:
            application/vnd.vmware.vcloud.runtimeInfoSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RuntimeInfoSectionType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /v1.5/schema/{schemaFileName}:
    get:
      tags:
        - user
      description: Retrieve the specified schema definition file from the server.
      responses:
        2XX:
          description: xml schema represented as String
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: schemaFileName
        required: true
        schema:
          type: string
        style: simple
  /versions/schema/versions.xsd:
    get:
      tags:
        - user
      description: Unauthenticated GET of versions.xsd schema definition file.
      responses:
        2XX:
          description: versions.xsd encoded as UTF\-8
      security:
        - bearerAuth: []
  /admin/catalog/{id}/extension:
    get:
      tags:
        - admin
      description: Displays a list of Selector Extensions that are associated with
        a selector.
      responses:
        2XX:
          description: Representation of a collection of selector extension {@link
            SelectorExtensionsType}
          content:
            application/vnd.vmware.admin.extensibility.selectors+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SelectorExtensionsType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Creates a Selector Extension.
      requestBody:
        content:
          application/vnd.vmware.admin.extensibility.selector+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SelectorExtensionType'
        required: true
      responses:
        2XX:
          description: Representation of a Selector Extension {@link SelectorExtensionType}
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdcs/extension:
    get:
      tags:
        - admin
      description: Displays a list of Selector Extensions that are associated with
        a selector.
      responses:
        2XX:
          description: Representation of a collection of selector extension {@link
            SelectorExtensionsType}
          content:
            application/vnd.vmware.admin.extensibility.selectors+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SelectorExtensionsType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Creates a Selector Extension.
      requestBody:
        content:
          application/vnd.vmware.admin.extensibility.selector+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SelectorExtensionType'
        required: true
      responses:
        2XX:
          description: Representation of a Selector Extension {@link SelectorExtensionType}
      security:
        - bearerAuth: []
  /admin/org/{id}/extension:
    get:
      tags:
        - admin
      description: Displays a list of Selector Extensions that are associated with
        a selector.
      responses:
        2XX:
          description: Representation of a collection of selector extension {@link
            SelectorExtensionsType}
          content:
            application/vnd.vmware.admin.extensibility.selectors+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SelectorExtensionsType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Creates a Selector Extension.
      requestBody:
        content:
          application/vnd.vmware.admin.extensibility.selector+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SelectorExtensionType'
        required: true
      responses:
        2XX:
          description: Representation of a Selector Extension {@link SelectorExtensionType}
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/providervdc/{id}/extension:
    get:
      tags:
        - admin
      description: Displays a list of Selector Extensions that are associated with
        a selector.
      responses:
        2XX:
          description: Representation of a collection of selector extension {@link
            SelectorExtensionsType}
          content:
            application/vnd.vmware.admin.extensibility.selectors+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SelectorExtensionsType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Creates a Selector Extension.
      requestBody:
        content:
          application/vnd.vmware.admin.extensibility.selector+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SelectorExtensionType'
        required: true
      responses:
        2XX:
          description: Representation of a Selector Extension {@link SelectorExtensionType}
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}/extension:
    get:
      tags:
        - admin
      description: Displays a list of Selector Extensions that are associated with
        a selector.
      responses:
        2XX:
          description: Representation of a collection of selector extension {@link
            SelectorExtensionsType}
          content:
            application/vnd.vmware.admin.extensibility.selectors+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SelectorExtensionsType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Creates a Selector Extension.
      requestBody:
        content:
          application/vnd.vmware.admin.extensibility.selector+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SelectorExtensionType'
        required: true
      responses:
        2XX:
          description: Representation of a Selector Extension {@link SelectorExtensionType}
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/object/{id}/selectorExtensions:
    get:
      tags:
        - extension
      description: Displays a list of all selector extensions of a registered object
        extension.
      responses:
        2XX:
          description: Representation of a collection of {@link SelectorExtensionType}
            associated with a. object extension
          content:
            application/vnd.vmware.admin.extensibility.selectors+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SelectorExtensionsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/virtualHardwareSection/serialPorts:
    get:
      tags:
        - user
      description: Retrieve all RASD items that specify serial port properties of
        a VM.
      responses:
        2XX:
          description: RasdItemsListType
          content:
            application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RasdItemsListType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Modifies all RASD items that specify serial port properties of
        a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RasdItemsListType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/virtualHardwareSection/serialPorts:
    get:
      tags:
        - user
      description: Retrieve all RASD items that specify serial port properties of
        a VM.
      responses:
        2XX:
          description: RasdItemsListType
          content:
            application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RasdItemsListType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Modifies all RASD items that specify serial port properties of
        a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.rasdItemsList+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RasdItemsListType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /server_status:
    get:
      tags:
        - user
      description: Always returns HTTP 200
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /service/{id}:
    get:
      tags:
        - user
      description: Return the Extension Service API Definition.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.service+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ServiceType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/resourceclass/{id}/serviceresources:
    get:
      tags:
        - extension
      description: List registered service resources for extension service.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Registers service resource for extension service.
      requestBody:
        content:
          application/vnd.vmware.admin.serviceResource+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ServiceResourceType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.serviceResource+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ServiceResourceType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/query:
    get:
      tags:
        - extension
      description: Return the System Administrator representation of all extension
        services registered with the system.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /vAppTemplate/{id}/shadowVms:
    get:
      tags:
        - user
      description: Retrieve a list of shadow VMs associated with the specified vApp
        template.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.query.references+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ReferencesType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /site/associations/localAssociationData:
    get:
      tags:
        - user
      description: Get the {@link SiteAssociationsType} for this site. GET /api/site/associations/localAssociationData
      responses:
        2XX:
          description: The site association for this site that could be used with
            a remote site
          content:
            application/vnd.vmware.admin.siteAssociation+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SiteAssociationType'
      security:
        - bearerAuth: []
  /site/associations:
    get:
      tags:
        - user
      description: Get the {@link SiteAssociationsType} for this site. GET /api/site/associations
      responses:
        2XX:
          description: The site associations for the site
          content:
            application/vnd.vmware.admin.siteAssociations+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SiteAssociationsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the site's list of associated sites PUT /api/site/associations
      requestBody:
        content:
          application/vnd.vmware.admin.siteAssociations+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SiteAssociationsType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Add a new {@link SiteAssociationType} for this site. POST /api/site/associations
      requestBody:
        content:
          application/vnd.vmware.admin.siteAssociation+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SiteAssociationType'
        required: true
      responses:
        2XX:
          description: JAXBElement<TaskType\>
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
  /vApp/{id}/snapshotSection:
    get:
      tags:
        - user
      description: Retrieve SnapshotSection element for a vApp or VM.
      responses:
        2XX:
          description: '{@link JAXBElement<SnapshotSectionType\>}'
          content:
            application/vnd.vmware.vcloud.snapshotSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SnapshotSectionType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/startupSection:
    get:
      tags:
        - user
      description: Retrieve the startup section of a vApp.
      responses:
        2XX:
          description: ovf:StartupSection\_Type
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update the startup section of a vApp.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/storageProfiles:
    get:
      tags:
        - extension
      description: Retrieve all storage profiles in the VIM server
      responses:
        2XX:
          description: '{@link JAXBElement<VMWStorageProfilesType\>}'
          content:
            application/vnd.vmware.admin.vmwStorageProfiles+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWStorageProfilesType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/strandedItems/query:
    get:
      tags:
        - extension
      description: Get list of all stranded items in the system by using REST API
        general QueryHandler. This is read only list and is not bound to specific
        states. If filter is provided it will be applied to the corresponding result
        set. Format determines the elements representation \- references, records
        or idrecords. Default format is records.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /supportedSystemsInfo:
    get:
      tags:
        - user
      description: List operating systems available for use on virtual machines owned
        by this organization.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.supportedSystemsInfo+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SupportedOperatingSystemsInfoType'
      deprecated: true
      security:
        - bearerAuth: []
  /versions:
    get:
      tags:
        - user
      description: Retrieve a list of vCloud API versions supported by this system.
        This request does not require an authentication token.
      responses:
        2XX:
          description: The list of supported vCloud API versions and their login URLs.
      security:
        - bearerAuth: []
  /admin/extension/settings/passwordPolicy:
    get:
      tags:
        - extension
      description: Retrieve system password policy settings.
      responses:
        2XX:
          description: '{@link JAXBElement<SystemPasswordPolicySettingsType\>}'
          content:
            application/vnd.vmware.admin.systemPasswordPolicySettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_SystemPasswordPolicySettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update system password policy settings.
      requestBody:
        content:
          application/vnd.vmware.admin.systemPasswordPolicySettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_SystemPasswordPolicySettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<SystemPasswordPolicySettingsType\>}'
          content:
            application/vnd.vmware.admin.systemPasswordPolicySettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_SystemPasswordPolicySettingsType'
      security:
        - bearerAuth: []
  /admin/extension/settings:
    get:
      tags:
        - extension
      description: "Retrieve system settings.\n\n System settings specify default\
        \ values and behaviors for the cloud and all of the organizations in it. System\
        \ settings are divided into categories. This request retrieves all categories\
        \ of system settings."
      responses:
        2XX:
          description: '{@link JAXBElement<SystemSettingsType\>}'
          content:
            application/vnd.vmware.admin.systemSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_SystemSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: "Update system settings.\n\n System settings specify default values\
        \ and behaviors for the cloud and all of the organizations in it. System settings\
        \ are divided into categories. This request updates all categories of system\
        \ settings."
      requestBody:
        content:
          application/vnd.vmware.admin.systemSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_SystemSettingsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<SystemSettingsType\>}'
          content:
            application/vnd.vmware.admin.systemSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_SystemSettingsType'
      security:
        - bearerAuth: []
  /task/{id}:
    get:
      tags:
        - user
      description: Retrieve a task.
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Update a task.
      requestBody:
        content:
          application/vnd.vmware.vcloud.task+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_TaskType'
        required: true
      responses:
        2XX:
          description: '{@link TaskType}'
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /tasksList/{id}:
    get:
      tags:
        - user
      description: Retrieve a list of this organization's queued, running, or recently
        completed tasks.
      responses:
        2XX:
          description: TasksListType
          content:
            application/vnd.vmware.vcloud.tasksList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TasksListType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Post an external task to this organization.
      requestBody:
        content:
          application/vnd.vmware.vcloud.task+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_TaskType'
        required: true
      responses:
        2XX:
          description: '{@link TaskType} since 2.0'
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/screen:
    get:
      tags:
        - user
      description: Retrieves a thumbnail image of a VM console. The content type of
        the response can be any of {@code image/png}, {@code image/gif}.
      responses:
        2XX:
          description: byte data
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/users/query:
    get:
      tags:
        - admin
      description: Retrieves a list of users for organization the org admin belongs
        to by using REST API general QueryHandler; If filter is provided it will be
        applied to the corresponding result set. Format determines the elements representation
        \- references or records. Default format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/vAppLeaseSettings:
    get:
      tags:
        - admin
      description: Retrieve organization vApp lease settings.
      responses:
        2XX:
          description: '{@link JAXBElement<OrgLeaseSettingsType\>}'
          content:
            application/vnd.vmware.admin.vAppLeaseSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgLeaseSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update organization vApp lease settings.
      requestBody:
        content:
          application/vnd.vmware.admin.vAppLeaseSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgLeaseSettingsType'
        required: true
      responses:
        2XX:
          description: JAXBElement<OrgVAppTemplateLeaseSettingsType\>
          content:
            application/vnd.vmware.admin.vAppLeaseSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgLeaseSettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve metadata associated with the vApp or VM.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/ovf:
    get:
      tags:
        - user
      description: Retrieve the OVF descriptor of a vApp directly.
      responses:
        2XX:
          description: ovf:EnvelopType
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/owner:
    get:
      tags:
        - user
      description: Retrieve the owner of a vApp.
      responses:
        2XX:
          description: '{@link JAXBElement<OwnerType\>}'
          content:
            application/vnd.vmware.vcloud.owner+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OwnerType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Change the owner of a vApp.
      requestBody:
        content:
          application/vnd.vmware.vcloud.owner+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OwnerType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/customizationSection:
    get:
      tags:
        - user
      description: Retrieve the customization section of a vApp template.
      responses:
        2XX:
          description: CustomizationSectionType
          content:
            application/vnd.vmware.vcloud.customizationSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CustomizationSectionType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/settings/vAppTemplateLeaseSettings:
    get:
      tags:
        - admin
      description: Retrieve organization vApp template lease settings.
      responses:
        2XX:
          description: '{@link JAXBElement<OrgVAppTemplateLeaseSettingsType\>}'
          content:
            application/vnd.vmware.admin.vAppTemplateLeaseSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgVAppTemplateLeaseSettingsType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Update organization vApp template lease settings.
      requestBody:
        content:
          application/vnd.vmware.admin.vAppTemplateLeaseSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_OrgVAppTemplateLeaseSettingsType'
        required: true
      responses:
        2XX:
          description: JAXBElement<OrgVAppTemplateLeaseSettingsType\>
          content:
            application/vnd.vmware.admin.vAppTemplateLeaseSettings+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OrgVAppTemplateLeaseSettingsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve metadata associated with the vApp template or VM.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/ovf:
    get:
      tags:
        - user
      description: Retrieve the OVF descriptor of a vApp template.
      responses:
        2XX:
          description: ovf:EnvelopType
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/owner:
    get:
      tags:
        - user
      description: Retrieve the owner of a vApp template.
      responses:
        2XX:
          description: '{@link JAXBElement<OwnerType\>}'
          content:
            application/vnd.vmware.vcloud.owner+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_OwnerType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplates/query:
    get:
      tags:
        - user
      description: Retrieves a list of vAppTemplates using REST API general QueryHandler;
        If filter is provided it will be applied to the corresponding result set.
        Format determines the elements representation \- references or records. Default
        format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/extension/vapps/query:
    get:
      tags:
        - extension
      description: Get list of all vApps in the system by using REST API general QueryHandler.
        This is read only list and is not bound to specific states. If filter is provided
        it will be applied to the corresponding result set. Format determines the
        elements representation \- referenceView or simpleView. Default format is
        referenceView.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /vApps/query:
    get:
      tags:
        - user
      description: Retrieves a list of vApps by using REST API general QueryHandler;
        If filter is provided it will be applied to the corresponding result set.
        Format determines the elements representation \- references or records. Default
        format is references.
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /vms/query:
    get:
      tags:
        - user
      description: Retrieves a list of VMs in lease by using REST API general QueryHandler;
        If filter is provided it will be applied to the corresponding result set.
        Format determines the elements representation \- references or records. Default
        format is references.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>
      security:
        - bearerAuth: []
  /admin/extension/vsm/{id}:
    get:
      tags:
        - extension
      description: Retrieve vShield Manager configuration details, including administrator
        credentials.
      responses:
        2XX:
          description: JAXB representation of vShieldManager.
          content:
            application/vnd.vmware.admin.vshieldmanager+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_ShieldManagerType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update vShield Manager configuration details, including administrator
        credentials.
      requestBody:
        content:
          application/vnd.vmware.admin.vshieldmanager+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ShieldManagerType'
        required: true
      responses:
        2XX:
          description: Reference to the started update VSM task.
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/{vimObjType}/{vimObjMoref}/vSphereWebClientUrl:
    get:
      tags:
        - extension
      description: Retrieve the vSphere URL of an object.
      responses:
        2XX:
          description: '{@link JAXBElement<VSphereWebClientUrlType\>}'
          content:
            application/vnd.vmware.admin.vSphereWebClientUrl+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VSphereWebClientUrlType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: vimObjType
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: vimObjMoref
        required: true
        schema:
          type: string
        style: simple
  /admin/:
    get:
      tags:
        - admin
      description: "Retrieve an administrative view of a cloud.\n\n The VCloud element\
        \ provides access to cloud\\-wide namespace of objects that an administrator\
        \ can view and, in most cases, modify."
      responses:
        2XX:
          description: VCloudType
          content:
            application/vnd.vmware.admin.vcloud+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VCloudType'
      security:
        - bearerAuth: []
  /org/{id}/metrics/historic:
    get:
      tags:
        - user
      description: Retrieve the all the metrics for a given org for the past 24 hours
      responses:
        2XX:
          description: rolled up metrics for the organization
          content:
            application/vnd.vmware.vcloud.metrics.historicUsage+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_HistoricUsageType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Retrieve the metrics for a given org based on the filters provided
        by the spec
      requestBody:
        content:
          application/vnd.vmware.vcloud.metrics.historicUsageSpec+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_HistoricUsageSpecType'
        required: true
      responses:
        2XX:
          description: rolled up metrics for the organization
          content:
            application/vnd.vmware.vcloud.metrics.historicUsage+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_HistoricUsageType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/metrics/historic:
    get:
      tags:
        - user
      description: Retrieves the past 24h rolled up metrics for a VDC
      responses:
        2XX:
          description: rolled up metrics for the vdc
          content:
            application/vnd.vmware.vcloud.metrics.historicUsage+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_HistoricUsageType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Retrieves rolled up metrics for a VDC according to the spec
      requestBody:
        content:
          application/vnd.vmware.vcloud.metrics.historicUsageSpec+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_HistoricUsageSpecType'
        required: true
      responses:
        2XX:
          description: Rolled up metrics for the VDC
          content:
            application/vnd.vmware.vcloud.metrics.historicUsage+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_HistoricUsageType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}/metadata:
    get:
      tags:
        - admin
      description: Retrieve metadata associated with the virtual datacenter.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve metadata associated with a vDC.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}/metadata/{domain}/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key in the specified domain
        from virtual datacenter metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /vdcStorageProfile/{id}:
    get:
      tags:
        - user
      description: Returns storage class referred by the Id. All properties of the
        storage classes are visible to vcloud user, except for VDC Storage Class reference
      responses:
        2XX:
          description: VdcStorageClassType representation of storage class referred
            by storageClassId
          content:
            application/vnd.vmware.vcloud.vdcStorageProfile+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VdcStorageProfileType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdcStorageProfile/{id}/metadata:
    get:
      tags:
        - admin
      description: Retrieve metadata associated with the vDC storage profile.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    post:
      tags:
        - admin
      description: Merge the metadata provided in the request with existing metadata.
      requestBody:
        content:
          application/vnd.vmware.vcloud.metadata+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MetadataType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdcStorageProfile/{id}/metadata:
    get:
      tags:
        - user
      description: Retrieve metadata associated with the vDC storage profile.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdcStorageProfile/{id}/metadata/{domain}/{key}:
    get:
      tags:
        - admin
      description: Retrieve the value of the specified key from vDC storage profile
        metadata.
      responses:
        2XX:
          description: '{@link JAXBElement<MetadataType\>}'
          content:
            application/vnd.vmware.vcloud.metadata.value+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MetadataValueType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
  /admin/vdcStorageProfile/{id}:
    get:
      tags:
        - admin
      description: Returns the representation of a vDC storage profile
      responses:
        2XX:
          description: AdminVdcStorageProfileType representation of storage profile
            referred by storageProfileId
          content:
            application/vnd.vmware.admin.vdcStorageProfile+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminVdcStorageProfileType'
      security:
        - bearerAuth: []
    put:
      tags:
        - admin
      description: Updates a single storage profile with user supplied data
      requestBody:
        content:
          application/vnd.vmware.admin.vdcStorageProfile+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_AdminVdcStorageProfileType'
        required: true
      responses:
        2XX:
          description: Updated representation of the storage profile
          content:
            application/vnd.vmware.admin.vdcStorageProfile+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminVdcStorageProfileType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdcTemplate/{id}:
    get:
      tags:
        - user
      description: Retrieve a vDC template.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.vdcTemplate+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VdcTemplateType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdcTemplates:
    get:
      tags:
        - user
      description: "Retrieve a list of vDC templates accessible to you.\n\n The system\
        \ administrator has access to all templates."
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.vdcTemplates+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VdcTemplatesType'
      security:
        - bearerAuth: []
  /admin/providervdc/{id}/vdcReferences:
    get:
      tags:
        - admin
      description: "Retrieve a list of organization vDCs supported by a given provider\
        \ vDC.\n\n Resources from the provider vDC are allocated across all organization\
        \ vDCs in the list."
      responses:
        2XX:
          description: VdcReferencesType
          content:
            application/vnd.vmware.admin.vdcReferences+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VdcReferencesType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/networkPool/{id}/vendorServices:
    get:
      tags:
        - extension
      description: Retrieve services associated with this network pool
      responses:
        2XX:
          description: '{@link JAXBElement<ServicesType\>}'
          content:
            application/vnd.vmware.admin.vmwNetworkPool.services+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VendorServicesType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServerReferences:
    get:
      tags:
        - extension
      description: Retrieve a list of references to vCenter servers attached to the
        system.
      responses:
        2XX:
          description: VMWVimServerReferences
          content:
            application/vnd.vmware.admin.vmwVimServerReferences+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWVimServerReferencesType'
      security:
        - bearerAuth: []
  /admin/extension/vimServerReferences/query:
    get:
      tags:
        - extension
      description: Get list of vSphere servers by using REST API general QueryHandler;
        This is read only list of vim servers and is not bound to specific states.
        If filter is provided it will be applied to the corresponding result set.
        Format determines the elements representation \- referenceView or simpleView.
        Default format is referenceView.
      parameters:
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/query-parameter_filter'
          style: form
        - in: query
          name: sortAsc
          schema:
            $ref: '#/components/schemas/query-parameter_sortAsc'
          style: form
        - in: query
          name: sortDesc
          schema:
            $ref: '#/components/schemas/query-parameter_sortDesc'
          style: form
        - in: query
          name: format
          schema:
            $ref: '#/components/schemas/query-parameter_format'
          style: form
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
        - in: query
          name: offset
          schema:
            $ref: '#/components/schemas/query-parameter_offset'
          style: form
        - in: query
          name: fields
          schema:
            $ref: '#/components/schemas/query-parameter_fields'
          style: form
        - in: query
          name: filterEncoded
          schema:
            $ref: '#/components/schemas/query-parameter_filterEncoded'
          style: form
        - in: query
          name: links
          schema:
            $ref: '#/components/schemas/query-parameter_links'
          style: form
      responses:
        2XX:
          description: Returns OkResponse<ContainerType\>;
      security:
        - bearerAuth: []
  /admin/extension/vimServer/{id}:
    get:
      tags:
        - extension
      description: Retrieve the representation of a registered vCenter server.
      responses:
        2XX:
          description: VimServerType
          content:
            application/vnd.vmware.admin.vmwvirtualcenter+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VimServerType'
      security:
        - bearerAuth: []
    put:
      tags:
        - extension
      description: Update the representation of a registered vCenter server.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwvirtualcenter+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VimServerType'
        required: true
      responses:
        2XX:
          description: TaskType This operation is asynchronous and the user should
            monitor the returned task status in order to check when it is completed.
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/virtualHardwareSection:
    get:
      tags:
        - user
      description: "Retrieve the virtual hardware section of a VM.\n\n This operation\
        \ retrieves the entire VirtualHardwareSection of a VM. You can also retrieve\
        \ many RASD item elements of a VirtualHardwareSection individually, or as\
        \ groups of related items."
      responses:
        2XX:
          description: ovf:VirtualHardwareSection\_Type
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: "Update the virtual hardware section of a VM.\n\n This operation\
        \ updates the entire VirtualHardwareSection of a VM. You can also update many\
        \ RASD item elements of a VirtualHardwareSection individually, or as groups\
        \ of related items."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/virtualHardwareSection:
    get:
      tags:
        - user
      description: "Retrieve the virtual hardware section of a VM.\n\n This operation\
        \ retrieves the entire VirtualHardwareSection of a VM. You can also retrieve\
        \ many RASD item elements of a VirtualHardwareSection individually, or as\
        \ groups of related items."
      responses:
        2XX:
          description: ovf:VirtualHardwareSection\_Type
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: "Update the virtual hardware section of a VM.\n\n This operation\
        \ updates the entire VirtualHardwareSection of a VM. You can also update many\
        \ RASD item elements of a VirtualHardwareSection individually, or as groups\
        \ of related items."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/vmAffinityRules:
    get:
      tags:
        - user
      description: Retrieves a list of all VM Affinity rules within a given vDC.
      responses:
        2XX:
          description: a list of all VM Affinity rules( both affinity and anti\-affinity)
            for the given vDC
          content:
            application/vnd.vmware.vcloud.vmaffinityrules+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VmAffinityRulesType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: Creates a new VM affinity rule.This operation is asynchronous and
        returns a task that you can monitor to track the progress of the request.
      requestBody:
        content:
          application/vnd.vmware.vcloud.vmaffinityrule+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VmAffinityRuleType'
        required: true
      responses:
        2XX:
          description: representation of a Task {@link TaskSpec}
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/vmCapabilities:
    get:
      tags:
        - user
      description: Gets {@link VmCapabilitiesType} for the VM identified by id.
      responses:
        2XX:
          description: '{@link VmCapabilitiesType}'
          content:
            application/vnd.vmware.vcloud.vmCapabilitiesSection+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VmCapabilitiesType'
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      description: Updates VM's {@link VmCapabilities}
      requestBody:
        content:
          application/vnd.vmware.vcloud.vmCapabilitiesSection+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VmCapabilitiesType'
        required: true
      responses:
        2XX:
          description: '{@link AcceptedResponse<TaskType\>}'
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/complianceResult:
    get:
      tags:
        - user
      description: Return the results of the most recent POST /vApp/vm\-{id}/action/checkCompliance
        request to the specified VM.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vm.complianceResult+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ComplianceResultType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/metrics/current:
    get:
      tags:
        - user
      description: Gets the current usage for all available VM metrics.
      responses:
        2XX:
          description: a {@link CurrentUsageType} instance of metrics for the specified
            VM
          content:
            application/vnd.vmware.vcloud.metrics.currentUsage+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CurrentUsageType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: "Gets the current usage for VM metrics according to the provided\
        \ spec object.\n\n The spec object can contain a collection of wildcard\\\
        -style metric name patterns to fine\\-tune the list of returned metrics."
      requestBody:
        content:
          application/vnd.vmware.vcloud.metrics.currentUsageSpec+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CurrentUsageSpecType'
        required: true
      responses:
        2XX:
          description: a {@link CurrentUsageType} instance of metrics for the specified
            VM
          content:
            application/vnd.vmware.vcloud.metrics.currentUsage+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CurrentUsageType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/resourcePool/{rpId}/vmGroup/name/{groupName}:
    get:
      tags:
        - extension
      description: Gets {@link JAXBElement<VMWVmGroupType\>} with given VM group name.
      responses:
        2XX:
          description: '{@link JAXBElement<VMWVmGroupType\>} with given VM group name'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: rpId
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
  /vmGroup/name/{groupName}:
    get:
      tags:
        - user
      description: ''
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vmGroups/name/{groupName}:
    get:
      tags:
        - extension
      description: ''
      responses:
        2XX:
          description: '{@link JAXBElement<VMWVmGroupType\>} with given VM group name'
          content:
            application/vnd.vmware.admin.vmwVmGroupsType+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWVmGroupsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/resourcePool/{rpId}/vmGroups:
    get:
      tags:
        - extension
      description: List all VmGroups within this resource pool.
      responses:
        2XX:
          description: list of VM groups in given resource pool.
      security:
        - bearerAuth: []
    post:
      tags:
        - extension
      description: Create VM group within this resource pool.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwVmGroupType+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWVmGroupType'
        required: true
      responses:
        2XX:
          description: VM group task
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: rpId
        required: true
        schema:
          type: string
        style: simple
  /vmGroups:
    get:
      tags:
        - user
      description: ''
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: ''
      requestBody:
        content:
          application/vnd.vmware.admin.vmwVmGroupType+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWVmGroupType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
  /vApp/{id}/metrics/historic:
    get:
      tags:
        - user
      description: Gets the past 24 hours worth of samples for all available VM metrics.
      responses:
        2XX:
          description: a {@link HistoricUsageType} instance of metrics for the specified
            VM
          content:
            application/vnd.vmware.vcloud.metrics.historicUsage+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_HistoricUsageType'
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      description: "Gets the historic usage for VM metrics according to the provided\
        \ spec object.\n\n The spec object can contain a collection of wildcard\\\
        -style metric name patterns to fine\\-tune the list of returned metrics, as\
        \ well as a start and end time (either relative or absolute) to refine the\
        \ set of sample points to a specific date range."
      requestBody:
        content:
          application/vnd.vmware.vcloud.metrics.historicUsageSpec+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_HistoricUsageSpecType'
        required: true
      responses:
        2XX:
          description: a {@link HistoricUsageType} instance of metrics for the specified
            VM
          content:
            application/vnd.vmware.vcloud.metrics.historicUsage+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_HistoricUsageType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/question:
    get:
      tags:
        - user
      description: Retrieve a question being asked by a VM.
      responses:
        2XX:
          description: VmPendingQuestionType
          content:
            application/vnd.vmware.vcloud.vmPendingQuestion+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VmPendingQuestionType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /disk/{id}/attachedVms:
    get:
      tags:
        - user
      description: Retrieve a list of all VMs attached to a disk.
      responses:
        2XX:
          description: '{@link JAXBElement<VmsType\>}'
          content:
            application/vnd.vmware.vcloud.vms+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VmsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/resourcePool/{id}/vmList:
    get:
      tags:
        - extension
      description: List all VMs using this resource pool.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/vmsList:
    get:
      tags:
        - extension
      description: "Retrieve a list of virtual machines that can be imported from\
        \ a registered vCenter server.\n\n This request supports optional query parameters:\n\
        \n* page \\- The page to return. The first page is page 1.\n* pageSize \\\
        - The number of virtual machines to list on a page. An integer value between\
        \ 1 and 100. The default value is 1."
      parameters:
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/query-parameter_page'
          style: form
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/query-parameter_pageSize'
          style: form
      responses:
        2XX:
          description: VmObjectRefsListType
          content:
            application/vnd.vmware.admin.vmsObjectRefsList+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VmObjectRefsListType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vmGroup/{groupId}/vmsList:
    get:
      tags:
        - extension
      description: Enumerate the properties of the specified VM group
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vmGroup/name/{groupName}/vmsList:
    get:
      tags:
        - extension
      description: Get all VMs from all clusters in given VM group.
      responses:
        2XX:
          description: list of VM records.
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/blockingTask/{id}/action/abort:
    post:
      tags:
        - extension
      description: "Abort a blocking task.\n\n This request ends the task, cleaning\
        \ up any transient objects that it created. Task status is set to ABORTED."
      requestBody:
        content:
          application/vnd.vmware.admin.blockingTaskOperationParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_BlockingTaskOperationParamsType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/screen/action/acquireMksTicket:
    post:
      tags:
        - user
      description: Retrieve a mks ticket that you can use to gain access to the console
        of a running VM.
      responses:
        2XX:
          description: '{@link MksTicketType}'
          content:
            application/vnd.vmware.vcloud.mksTicket+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MksTicketType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/screen/action/acquireTicket:
    post:
      tags:
        - user
      description: Retrieve a screen ticket that you can use with the VMRC browser
        plug\-in to gain access to the console of a running VM.
      responses:
        2XX:
          description: ScreenTicketType
          content:
            application/vnd.vmware.vcloud.screenTicket+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ScreenTicketType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vmGroup/name/{groupName}/action/addVms:
    post:
      tags:
        - extension
      description: "Adds virtual machines to the specified VM group.\n\n This asynchronous\
        \ call returns a task. The process of adding virtual machines to a VM group\
        \ can result in the virtual machine being processed and redeployed by the\
        \ placement engine. All virtual machines provided to this call will be marked\
        \ busy until the add to group process is complete."
      requestBody:
        content:
          application/vnd.vmware.vcloud.vms+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VmsType'
        required: true
      responses:
        2XX:
          description: a task to monitor the progress of adding virtual machines to
            a VM group
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/question/action/answer:
    post:
      tags:
        - user
      description: Answer a question being asked by a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.vmPendingAnswer+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VmQuestionAnswerType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/disk/action/attach:
    post:
      tags:
        - user
      description: Attach a disk to a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.diskAttachOrDetachParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_DiskAttachOrDetachParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /task/{id}/action/cancel:
    post:
      tags:
        - user
      description: Cancel a task.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalog/{id}/action/captureVApp:
    post:
      tags:
        - user
      description: Create a vApp template in this catalog from a vApp.
      requestBody:
        content:
          application/vnd.vmware.vcloud.captureVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CaptureVAppParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n The response includes a Task element. You can\
            \ monitor the task to to track the creation of the vApp template."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/action/captureVApp:
    post:
      tags:
        - user
      description: Create a vApp template from a vApp.
      requestBody:
        content:
          application/vnd.vmware.vcloud.captureVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CaptureVAppParamsType'
        required: true
      responses:
        2XX:
          description: "VAppTemplateType\n\n The response includes a Task element.\
            \ You can monitor the task to to track the creation of the vApp template."
          content:
            application/vnd.vmware.vcloud.vAppTemplate+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppTemplateType'
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/{id}/authorizationcheck:
    post:
      tags:
        - extension
      description: Checks user authorization for service, URL and request verb.
      requestBody:
        content:
          application/vnd.vmware.admin.authorizationCheckParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AuthorizationCheckParamsType'
        required: true
      responses:
        2XX:
          description: AuthorizationCheckResponseType
          content:
            application/vnd.vmware.admin.authorizationCheckResponse+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AuthorizationCheckResponseType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/authorizationcheck:
    post:
      tags:
        - extension
      description: Checks user authorization for all services with enabled authorization,
        URL and request verb.
      requestBody:
        content:
          application/vnd.vmware.admin.authorizationCheckParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AuthorizationCheckParamsType'
        required: true
      responses:
        2XX:
          description: AuthorizationCheckResponseType
          content:
            application/vnd.vmware.admin.authorizationCheckResponse+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AuthorizationCheckResponseType'
      security:
        - bearerAuth: []
  /vApp/{id}/action/checkCompliance:
    post:
      tags:
        - user
      description: Check storage profile compliance for the specified VM.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task. When the task completes, you can retrieve the results by making\
            \ a GET /vApp/vm\\-{id}/complianceResult request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/action/clearunusedlocalizationbundles:
    post:
      tags:
        - extension
      description: Cleanup for unused external localization resources.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /admin/extension/service/action/clearunusedrights:
    post:
      tags:
        - extension
      description: Clears all the rights that are not associated with a role or acl
        rule and which extension service is already deleted.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /vdc/{id}/action/cloneMedia:
    post:
      tags:
        - user
      description: Create a copy of a media object.
      requestBody:
        content:
          application/vnd.vmware.vcloud.cloneMediaParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CloneMediaParamsType'
        required: true
      responses:
        2XX:
          description: "MediaType\n\n The response includes a Task element. You can\
            \ monitor the task to to track the creation of the copy."
          content:
            application/vnd.vmware.vcloud.media+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MediaType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/action/cloneVApp:
    post:
      tags:
        - user
      description: Create a copy of a vApp.
      requestBody:
        content:
          application/vnd.vmware.vcloud.cloneVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CloneVAppParamsType'
        required: true
      responses:
        2XX:
          description: "VAppType\n\n The response includes a Task element. You can\
            \ monitor the task to to track the creation of the copy."
          content:
            application/vnd.vmware.vcloud.vApp+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/action/cloneVAppTemplate:
    post:
      tags:
        - user
      description: Create a copy of a vApp template.
      requestBody:
        content:
          application/vnd.vmware.vcloud.cloneVAppTemplateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CloneVAppTemplateParamsType'
        required: true
      responses:
        2XX:
          description: "VAppTemplateType\n\n The response includes a Task element.\
            \ You can monitor the task to to track the creation of the copy."
          content:
            application/vnd.vmware.vcloud.vAppTemplate+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppTemplateType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/action/composeVApp:
    post:
      tags:
        - user
      description: Compose a vApp from existing virtual machines.
      requestBody:
        content:
          application/vnd.vmware.vcloud.composeVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_ComposeVAppParamsType'
        required: true
      responses:
        2XX:
          description: "VAppType\n\n The response includes a Task element. You can\
            \ monitor the task to to track the creation of the vApp."
          content:
            application/vnd.vmware.vcloud.vApp+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/configureServices:
    post:
      tags:
        - admin
      description: Update edgeGateway configuration.
      requestBody:
        content:
          application/vnd.vmware.admin.edgeGatewayServiceConfiguration+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_GatewayFeaturesType'
        required: true
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/configureSyslogServerSettings:
    post:
      tags:
        - admin
      description: Configure Syslog server settings for the org vdc edge gateway
      requestBody:
        content:
          application/vnd.vmware.vcloud.SyslogSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SyslogServerType'
        required: true
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/consolidate:
    post:
      tags:
        - user
      description: Consolidate VM snapshots.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/action/consolidate:
    post:
      tags:
        - user
      description: Consolidate VM snapshots.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /org/{id}/catalog/{catalogId}/action/controlAccess:
    post:
      tags:
        - user
      description: Update access control information for a catalog.
      requestBody:
        content:
          application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - in: path
        name: catalogId
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/controlAccess:
    post:
      tags:
        - user
      description: Update access control information for a vApp.
      requestBody:
        content:
          application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
        required: true
      responses:
        2XX:
          description: ControlAccessParamsType
          content:
            application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/convertToAdvancedGateway:
    post:
      tags:
        - admin
      description: Mark a gateway as an advanced gateway.
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/convertToAdvancedNetworking:
    post:
      tags:
        - admin
      description: Upgrade to advanced networking for a gateway
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/network/{id}/action/convertToDistributedInterface:
    post:
      tags:
        - admin
      description: "Convert org vdc network to a distributed interface\n\n This operation\
        \ is valid for internal org vdc routed networks that are subinterfaces or\
        \ internal."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/network/{id}/action/convertToInternalInterface:
    post:
      tags:
        - admin
      description: "Convert org vdc network to an interface\n\n This operation is\
        \ valid for internal org vdc routed networks that are subinterfaces"
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/network/{id}/action/convertToSubInterface:
    post:
      tags:
        - admin
      description: "Convert org vdc network to an sub interface\n\n This operation\
        \ is valid for internal org vdc routed networks"
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalog/{id}/action/copy:
    post:
      tags:
        - user
      description: Copy a catalog item from one catalog to another.
      requestBody:
        content:
          application/vnd.vmware.vcloud.copyOrMoveCatalogItemParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CopyOrMoveCatalogItemParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n The response includes a Task element. You can\
            \ monitor the task to track the copy of the catalog item."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/catalogs:
    post:
      tags:
        - admin
      description: "Create a catalog.\n\n The catalog is created in the unpublished\
        \ state."
      requestBody:
        content:
          application/vnd.vmware.admin.catalog+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_AdminCatalogType'
        required: true
      responses:
        2XX:
          description: "CatalogType\n\n This operation is asynchronous. The response\
            \ body includes a task that you can monitor to track the progress of the\
            \ request."
          content:
            application/vnd.vmware.admin.catalog+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminCatalogType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalog/{id}/catalogItems:
    post:
      tags:
        - user
      description: Add an item to a catalog.
      requestBody:
        content:
          application/vnd.vmware.vcloud.catalogItem+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CatalogItemType'
        required: true
      responses:
        2XX:
          description: CatalogItemType
          content:
            application/vnd.vmware.vcloud.catalogItem+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CatalogItemType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/disk:
    post:
      tags:
        - user
      description: Create a disk.
      requestBody:
        content:
          application/vnd.vmware.vcloud.diskCreateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_DiskCreateParamsType'
        required: true
      responses:
        2XX:
          description: DiskType
          content:
            application/vnd.vmware.vcloud.disk+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_DiskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/networkPools:
    post:
      tags:
        - extension
      description: Create a network pool.
      responses:
        2XX:
          description: VMWNetworkPool
      security:
        - bearerAuth: []
  /admin/org/{id}/networks:
    post:
      tags:
        - admin
      description: Create an organization network.
      responses:
        2XX:
          description: OrgNetworkType
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/orgs:
    post:
      tags:
        - admin
      description: Create an organization.
      requestBody:
        content:
          application/vnd.vmware.admin.organization+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_AdminOrgType'
        required: true
      responses:
        2XX:
          description: AdminOrgType
          content:
            application/vnd.vmware.admin.organization+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminOrgType'
      security:
        - bearerAuth: []
  /admin/extension/externalnets:
    post:
      tags:
        - extension
      description: Create an external network.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwexternalnet+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWExternalNetworkType'
        required: true
      responses:
        2XX:
          description: VMWExternalNetworkType
          content:
            application/vnd.vmware.admin.vmwexternalnet+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWExternalNetworkType'
      security:
        - bearerAuth: []
  /admin/extension/providervdcs:
    post:
      tags:
        - extension
      description: Create a provider vDC.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwprovidervdc+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcType'
        required: true
      responses:
        2XX:
          description: "VMWProviderVdcType\n\n This operation is asynchronous. The\
            \ response includes a Task that you can monitor to track the progress\
            \ of the request."
          content:
            application/vnd.vmware.admin.vmwprovidervdc+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcType'
      deprecated: true
      security:
        - bearerAuth: []
  /admin/extension/providervdcsparams:
    post:
      tags:
        - extension
      description: Create a provider vDC.
      requestBody:
        content:
          application/vnd.vmware.admin.createProviderVdcParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcParamsType'
        required: true
      responses:
        2XX:
          description: "VMWProviderVdcType\n\n This operation is asynchronous. The\
            \ response includes a Task that you can monitor to track the progress\
            \ of the request."
          content:
            application/vnd.vmware.admin.vmwprovidervdc+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcType'
      security:
        - bearerAuth: []
  /admin/org/{orgId}/roles:
    post:
      tags:
        - admin
      description: Creates a role or optionally creates a role template along with
        role instances based on the tempalte for a sys\-admin client at API version
        < 27
      requestBody:
        content:
          application/vnd.vmware.admin.role+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RoleType'
        required: true
      responses:
        2XX:
          description: RoleType
          content:
            application/vnd.vmware.admin.role+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RoleType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
  /admin/roles:
    post:
      tags:
        - admin
      description: Creates a role or optionally creates a role template along with
        role instances based on the tempalte for a sys\-admin client at API version
        < 27
      requestBody:
        content:
          application/vnd.vmware.admin.role+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RoleType'
        required: true
      responses:
        2XX:
          description: RoleType
          content:
            application/vnd.vmware.admin.role+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_RoleType'
      security:
        - bearerAuth: []
  /vApp/{id}/action/createSnapshot:
    post:
      tags:
        - user
      description: Creates new snapshot of a virtual machine or of all the virtual
        machines in a vApp. Prior to creation of the new snapshots, any existing user
        created snapshots associated with the virtual machines are removed.
      requestBody:
        content:
          application/vnd.vmware.vcloud.createSnapshotParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CreateSnapshotParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vdcTemplates:
    post:
      tags:
        - extension
      description: Create a VDC template.
      requestBody:
        content:
          application/vnd.vmware.admin.vmwVdcTemplate+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateType'
        required: true
      responses:
        2XX:
          description: vdcTemplate the new VDC Template.
      security:
        - bearerAuth: []
  /admin/org/{id}/users:
    post:
      tags:
        - admin
      description: "Create or import a user.\n\n Users can be created locally or imported\
        \ from the organization's LDAP service."
      requestBody:
        content:
          application/vnd.vmware.admin.user+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_UserType'
        required: true
      responses:
        2XX:
          description: UserType
          content:
            application/vnd.vmware.admin.user+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_UserType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/vdcs:
    post:
      tags:
        - admin
      description: Create an organization VDC.
      requestBody:
        content:
          application/vnd.vmware.admin.vdc+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_AdminVdcType'
        required: true
      responses:
        2XX:
          description: AdminVdcType
          content:
            application/vnd.vmware.admin.vdc+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminVdcType'
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/vdcsparams:
    post:
      tags:
        - admin
      description: Creates an organization vDC.
      requestBody:
        content:
          application/vnd.vmware.admin.createVdcParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CreateVdcParamsType'
        required: true
      responses:
        2XX:
          description: "AdminVdcType\n\n This operation is asynchronous. The response\
            \ includes a Task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.admin.vdc+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_AdminVdcType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/deploy:
    post:
      tags:
        - user
      description: "Deploy a vApp or VM.\n\n Deployment allocates all resources for\
        \ the vApp and the virtual machines it contains."
      requestBody:
        content:
          application/vnd.vmware.vcloud.deployVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_DeployVAppParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/disk/action/detach:
    post:
      tags:
        - user
      description: Detach a disk from a VM.
      requestBody:
        content:
          application/vnd.vmware.vcloud.diskAttachOrDetachParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_DiskAttachOrDetachParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/rule/{ruleId}/action/disable:
    post:
      tags:
        - extension
      description: Disables the specified VM Host affinity rule.
      responses:
        2XX:
          description: a task to monitor disabling of the rule
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/datastore/{id}/action/disable:
    post:
      tags:
        - extension
      description: Disable a datastore.
      responses:
        2XX:
          description: Datastore
          content:
            application/vnd.vmware.admin.datastore+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_DatastoreType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/disableDistributedRouting:
    post:
      tags:
        - admin
      description: Disable distributed routing for a gateway
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/host/{id}/action/disable:
    post:
      tags:
        - extension
      description: "Disable a host.\n\n Disabling a host prevents vApps from stratin\
        \ gon it. vApps that are running on the host continue to run."
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/disableNestedHypervisor:
    post:
      tags:
        - user
      description: Hide hardware\-assisted CPU virtualization from guest OS.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/action/disable:
    post:
      tags:
        - admin
      description: "Disable an organization.\n\n Disabling an organization prevents\
        \ users from logging in to it."
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providervdc/{id}/action/disable:
    post:
      tags:
        - extension
      description: "Disable a provider vDC.\n\n You can disable a provider vDC to\
        \ prevent the creation of organization vDCs that use its resources. When you\
        \ disable a provider vDC, you also disable the organization vDCs that use\
        \ its resources. Running vApps and powered on virtual machines continue to\
        \ run in those vDCs, but users cannot deploy additional vApps in them."
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/resourcePool/{id}/action/disable:
    post:
      tags:
        - extension
      description: Disable a provider vDC resource pool.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/disableDownload:
    post:
      tags:
        - user
      description: Disable a vApp for download.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/action/disableDownload:
    post:
      tags:
        - user
      description: Disable a vApp template for download.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}/action/disable:
    post:
      tags:
        - admin
      description: "Disable an organization vDC.\n\n Disabling an organization vDC\
        \ prevents prevent any further allocation of resources to it, but does not\
        \ affect existing allocations. When an organization vDC is disabled, an organization\
        \ user cannot deploy new virtual machines in it."
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/discardSuspendedState:
    post:
      tags:
        - user
      description: "Discard suspended state of a vApp or VM.\n\n Discarding the suspended\
        \ state of a vApp discards the suspended state of all VMs it contains."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/media/action/ejectMedia:
    post:
      tags:
        - user
      description: Eject virtual media.
      requestBody:
        content:
          application/vnd.vmware.vcloud.mediaInsertOrEjectParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MediaInsertOrEjectParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/rule/{ruleId}/action/enable:
    post:
      tags:
        - extension
      description: Enables the specified VM Host affinity rule.
      responses:
        2XX:
          description: a task to monitor enabling of the rule
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/datastore/{id}/action/enable:
    post:
      tags:
        - extension
      description: Enable a datastore.
      responses:
        2XX:
          description: Datastore
          content:
            application/vnd.vmware.admin.datastore+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_DatastoreType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/enableDistributedRouting:
    post:
      tags:
        - admin
      description: Enable distributed routing for a gateway
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /media/{id}/action/enableDownload:
    post:
      tags:
        - user
      description: Enable download for the media
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/host/{id}/action/enable:
    post:
      tags:
        - extension
      description: Enable a host.
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/action/enable:
    post:
      tags:
        - admin
      description: "Enable an organization.\n\n Enabling an organization allows users\
        \ to log in to it."
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providervdc/{id}/action/enable:
    post:
      tags:
        - extension
      description: Enable a provider vDC.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/resourcePool/{id}/action/enable:
    post:
      tags:
        - extension
      description: Enable a provider VDC resource pool
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/enableDownload:
    post:
      tags:
        - user
      description: Enable a vApp for download.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/action/enableDownload:
    post:
      tags:
        - user
      description: Enable a vApp template for download
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}/action/enable:
    post:
      tags:
        - admin
      description: Enable an organization vDC.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/enableNestedHypervisor:
    post:
      tags:
        - user
      description: Expose hardware\-assisted CPU virtualization to guest OS.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/enterMaintenanceMode:
    post:
      tags:
        - user
      description: "Place the vApp in maintenance mode.\n\n When a vApp is in maintenance\
        \ mode, it is read\\-only to users. Only a system administrator can modify\
        \ it. User\\-initiated tasks that are running when the vApp enters maintenance\
        \ mode continue to run."
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/exitMaintenanceMode:
    post:
      tags:
        - user
      description: Take the vApp out of maintenance mode.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/settings/vAppLeaseSettings/action/expireVAppsRuntimeLease:
    post:
      tags:
        - admin
      description: ''
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/settings/vAppTemplateLeaseSettings/action/expireVAppTemplatesStorageLease:
    post:
      tags:
        - admin
      description: ''
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/settings/vAppLeaseSettings/action/expireVAppsStorageLease:
    post:
      tags:
        - admin
      description: ''
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/blockingTask/{id}/action/fail:
    post:
      tags:
        - extension
      description: "Fail a blocking task.\n\n This request ends the task, setting\
        \ the status of any transient objects that it created to ERROR. Task status\
        \ is set to ERROR."
      requestBody:
        content:
          application/vnd.vmware.admin.blockingTaskOperationParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_BlockingTaskOperationParamsType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/customizeAtNextPowerOn:
    post:
      tags:
        - user
      description: Force guest customization on next power on.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/strandedItem/{id}/action/forceDelete:
    post:
      tags:
        - extension
      description: Removes stranded item and its children
      responses:
        2XX:
          description: Task created to remove the stranded item
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/action/forcevimserverreconnect:
    post:
      tags:
        - extension
      description: Force vCloud Director to reconnect to a registered vCenter server.
      responses:
        2XX:
          description: TaskType This operation is asynchronous and the user should
            monitor the returned task status in order to check when it is completed.
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/groups:
    post:
      tags:
        - admin
      description: Import a group from the LDAP directory service.
      requestBody:
        content:
          application/vnd.vmware.admin.group+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_GroupType'
        required: true
      responses:
        2XX:
          description: GroupType
          content:
            application/vnd.vmware.admin.group+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_GroupType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/importMedia:
    post:
      tags:
        - extension
      description: Import media from vCenter.
      requestBody:
        content:
          application/vnd.vmware.admin.importMediaParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ImportMediaParamsType'
        required: true
      responses:
        2XX:
          description: "MediaType\n\n This operation is asynchronous. The response\
            \ contains an embedded task object that you can monitor to track the progress\
            \ of the request."
          content:
            application/vnd.vmware.vcloud.media+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MediaType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/importVm:
    post:
      tags:
        - extension
      description: Import a virtual machine from vCenter.
      requestBody:
        content:
          application/vnd.vmware.admin.importVmParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ImportVmParamsType'
        required: true
      responses:
        2XX:
          description: "VmType\n\n This operation is asynchronous. The `status` of\
            \ `VmType` can be used to monitor the import process."
          content:
            application/vnd.vmware.vcloud.vm+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VmType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/importVmAsVApp:
    post:
      tags:
        - extension
      description: Import a virtual machine from vCenter as a vCloud Director vApp.
      requestBody:
        content:
          application/vnd.vmware.admin.importVmAsVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ImportVmAsVAppParamsType'
        required: true
      responses:
        2XX:
          description: "VAppType\n\n This operation is asynchronous. The response\
            \ contains an embedded task object that you can monitor to track the progress\
            \ of the request."
          content:
            application/vnd.vmware.vcloud.vApp+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/importVmAsVAppTemplate:
    post:
      tags:
        - extension
      description: Import a virtual machine from vCenter as a vCloud Director vApp
        template.
      requestBody:
        content:
          application/vnd.vmware.admin.importVmAsVAppTemplateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ImportVmAsVAppTemplateParamsType'
        required: true
      responses:
        2XX:
          description: "VAppTemplateType\n\n This operation is asynchronous. The response\
            \ contains an embedded task object that you can monitor to track the progress\
            \ of the request."
          content:
            application/vnd.vmware.vcloud.vAppTemplate+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppTemplateType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/importVmIntoExistingVApp:
    post:
      tags:
        - extension
      description: Import a virtual machine from vCenter into an existing vCloud Director
        vApp.
      requestBody:
        content:
          application/vnd.vmware.admin.importVmIntoExistingVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ImportVmIntoExistingVAppParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/media/action/insertMedia:
    post:
      tags:
        - user
      description: Insert virtual media.
      requestBody:
        content:
          application/vnd.vmware.vcloud.mediaInsertOrEjectParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MediaInsertOrEjectParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/installVMwareTools:
    post:
      tags:
        - user
      description: Install VMware Tools on a running VM.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/action/instantiateOvf:
    post:
      tags:
        - user
      description: Instantiate a vApp or VM from an OVF
      requestBody:
        content:
          application/vnd.vmware.vcloud.instantiateOvfParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_InstantiateOvfParamsType'
        required: true
      responses:
        2XX:
          description: "VAppType\n\n The response includes an upload link for the\
            \ OVF descriptor"
          content:
            application/vnd.vmware.vcloud.vApp+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/action/instantiateVAppTemplate:
    post:
      tags:
        - user
      description: Create a vApp from a vApp template
      requestBody:
        content:
          application/vnd.vmware.vcloud.instantiateVAppTemplateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_InstantiateVAppTemplateParamsType'
        required: true
      responses:
        2XX:
          description: "VAppType\n\n The response includes a Task element. You can\
            \ monitor the task to to track the creation of the vApp."
          content:
            application/vnd.vmware.vcloud.vApp+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /org/{id}/action/instantiate:
    post:
      tags:
        - user
      description: Instantiates a VDC template. The caller supplies the VDC template
        and the name and description (as a ParamsType), which are the only two things
        the tenant can override in the template.
      requestBody:
        content:
          application/vnd.vmware.vcloud.instantiateVdcTemplateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_InstantiateVdcTemplateParamsType'
        required: true
      responses:
        2XX:
          description: vdcTemplate
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /sessions:
    post:
      tags:
        - user
      description: "Log in and create a Session object.\n\n To authenticate to the\
        \ API service, POST a request to its login URL. The request body must contain\
        \ a MIME Base64 encoding of your credentials in the form:\n\n*user*@*organization*:*password*\n\
        \n To obtain the login URL, make an unauthenticated GET request to the vCloud\
        \ Director api/versions URL. The response to this request lists the API versions\
        \ that the server supports, and provides a login URL for each version."
      responses:
        2XX:
          description: "SessionType\n\n The response includes an authorization token\
            \ in this format:\n\n x\\-vcloud\\-authorization: *token*\n\n Include\
            \ this header in all subsequent requests."
          content:
            application/vnd.vmware.vcloud.session+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SessionType'
      security:
        - basicAuth: []
  /admin/extension/rule/{ruleId}/action/makeMandatory:
    post:
      tags:
        - extension
      description: Make specified VM Host affinity rule mandatory.
      responses:
        2XX:
          description: a task to monitor enabling of the rule
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/rule/{ruleId}/action/makeOptional:
    post:
      tags:
        - extension
      description: Make the specified VM Host affinity optional.
      responses:
        2XX:
          description: a task to monitor enabling of the rule
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providervdc/{id}/action/merge:
    post:
      tags:
        - extension
      description: "Merge provider vDCs.\n\n This operation merges the provider vDC\
        \ specified in the request URL with one or more provider vDCs specified in\
        \ the request parameters, and returns a representation of the merged provider\
        \ vDC."
      requestBody:
        content:
          application/vnd.vmware.admin.providerVdcMergeParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_ProviderVdcMergeParamsType'
        required: true
      responses:
        2XX:
          description: VMWProviderVdc
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/action/migrateTenant:
    post:
      tags:
        - extension
      description: Initiate relocation of all entities for a given org (tenant).
      requestBody:
        content:
          application/vnd.vmware.cloud.tenantMigrationParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_TenantMigrationParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<TaskType\>}'
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
  /admin/vdc/{id}/migrateVcdniToVxlan:
    post:
      tags:
        - admin
      description: Migrate vcdni networks to vxlan networks Since 27.0
      responses:
        2XX:
          description: "TaskType\n\n Converts all VCDNI networks in this VDC to VXLAN\
            \ networks. See https://kb.vmware.com/kb/2148381. This operation is asynchronous\
            \ and returns a task that you can monitor to track the progress of the\
            \ request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/resourcePool/{id}/action/migrateVms:
    post:
      tags:
        - extension
      description: Migrate one or more virtual machines to a different resource pool.
      requestBody:
        content:
          application/vnd.vmware.admin.migrateVmParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_MigrateParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task. When the task completes, the virtual machines on the list have\
            \ been migrated."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/modifyFormFactor:
    post:
      tags:
        - admin
      description: Modify edgeGateway form factor.
      requestBody:
        content:
          application/vnd.vmware.vcloud.edgeGatewayFormFactor+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_EdgeGatewayFormFactorType'
        required: true
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalog/{id}/action/move:
    post:
      tags:
        - user
      description: Move a catalog item from one catalog to another.
      requestBody:
        content:
          application/vnd.vmware.vcloud.copyOrMoveCatalogItemParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CopyOrMoveCatalogItemParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n The response includes a Task element. You can\
            \ monitor the task to track the move of the catalog item."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/events:
    post:
      tags:
        - admin
      description: Post an external event to the system.
      requestBody:
        content:
          application/vnd.vmware.admin.event+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_EventType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/power/action/powerOff:
    post:
      tags:
        - user
      description: "Power off a vApp or VM.\n\n If used on a vApp, powers off all\
        \ VMs in the vApp. If used on a VM, powers off the VM. This operation is available\
        \ only for a vApp or VM that is powered on."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/power/action/powerOn:
    post:
      tags:
        - user
      description: "Power on a vApp or VM.\n\n If used on a vApp, powers on all VMs\
        \ in the vApp. If used on a VM, powers on the VM. This operation is available\
        \ only for a vApp or VM that is powered off."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/host/{id}/action/prepare:
    post:
      tags:
        - extension
      description: "Prepare a host.\n\n When you add a host to a cluster, you must\
        \ prepare the host before vCloud Director can use the host's resources."
      requestBody:
        content:
          application/vnd.vmware.admin.prepareHostParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_PrepareHostParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/user/{id}/entityRights:
    post:
      tags:
        - admin
      description: Queries user privileges on a set of entities
      requestBody:
        content:
          application/vnd.vmware.admin.entityReferences+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_EntityReferencesType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.userEntityRights+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_UserEntityRightsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/role/{id}/action/relinkToTemplate:
    post:
      tags:
        - admin
      description: Relink a role to the template specified by its defaultRoleId.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/reapplyServices:
    post:
      tags:
        - admin
      description: Reapply services on an edgeGateway.
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/power/action/reboot:
    post:
      tags:
        - user
      description: "Reboot a vApp or VM.\n\n If used on a vApp, reboots all VMs in\
        \ the vApp. If used on a VM, reboots the VM. This operation is available only\
        \ for a vApp or VM that is powered on."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/recomposeVApp:
    post:
      tags:
        - user
      description: Recompose a vApp to add or remove VMs.
      requestBody:
        content:
          application/vnd.vmware.vcloud.recomposeVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RecomposeVAppParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/reconfigureVm:
    post:
      tags:
        - user
      description: "Updates Vm name, Description, and any or all of the following\
        \ sections.  \n\n* VirtualHardwareSection\n* OperatingSystemSection\n* NetworkConnectionSection\n\
        * GuestCustomizationSection\n\n Sections not included in the request body\
        \ will not be updated. In API requests that specify version 29.0 or higher,\
        \ this operation allows to also update:\n* the boot\\-options of the VM (boot\\\
        -delay and enter\\-bios).\n* the storage profile\n* the VM capabilities (ability\
        \ to add CPU or MEM while the VM is powered\\-on)\n* the hardware\\-assisted\
        \ CPU virtualization capability"
      requestBody:
        content:
          application/vnd.vmware.vcloud.vm+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VmType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/redeploy:
    post:
      tags:
        - admin
      description: Redeploy edgeGateway.
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/action/refreshStorageProfiles:
    post:
      tags:
        - extension
      description: Refresh Storage Classes data from a registered vCenter server.
      responses:
        2XX:
          description: TaskType This operation is asynchronous and the user should
            monitor the returned task status in order to check when it is completed.
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/action/refresh:
    post:
      tags:
        - extension
      description: Refresh vCenter server.
      responses:
        2XX:
          description: TaskType Asynchronous task representing refresh operation.
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/settings/federation/action/regenerateFederationCertificate:
    post:
      tags:
        - admin
      description: Regenerates the certificates used to establish trust between an
        organization and its identity provider
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/org/{id}/associations/localAssociationData/action/regenerateKeyPair:
    post:
      tags:
        - admin
      description: Regenerates an org's key pair for associations
      responses:
        2XX:
          description: Task reference
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /site/associations/localAssociationData/action/regenerateKeyPair:
    post:
      tags:
        - user
      description: Add a new {@link SiteAssociationType} for this site. POST /api/site/action/localAssociationData/regenerateSiteKey
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
  /admin/vdc/{id}/action/registerVApp:
    post:
      tags:
        - admin
      description: Create a vApp based on a set of .vmx files and resource mappings
      requestBody:
        content:
          application/vnd.vmware.admin.registerVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RegisterVAppParamsType'
        required: true
      responses:
        2XX:
          description: "VAppType\n\n The response includes a Task element. You can\
            \ monitor the task to to track the creation of the vApp."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/action/registervimserver:
    post:
      tags:
        - extension
      description: Register a vCenter server and vShield manager.
      requestBody:
        content:
          application/vnd.vmware.admin.registerVimServerParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_RegisterVimServerParamsType'
        required: true
      responses:
        2XX:
          description: RegisterVimServerParamsType
          content:
            application/vnd.vmware.admin.registerVimServerParams+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_RegisterVimServerParamsType'
      security:
        - bearerAuth: []
  /vApp/{id}/action/reloadFromVc:
    post:
      tags:
        - user
      description: "Reloads VM state from VC. Checks VM's extra configuration properties\
        \ to ensure that they include all the default properties required for cloud\\\
        -managed VMs and do not include any blacklisted properties or values. Reconfigures\
        \ VM to add default properties and remove blacklisted properties and values\
        \ if needed.\n\n This API is available to sysadmin users only."
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/relocate:
    post:
      tags:
        - user
      description: Relocate a VM to a different datastore.
      requestBody:
        content:
          application/vnd.vmware.vcloud.relocateVmParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RelocateParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and return a task.\
            \ When the task completes, the VM has been relocated."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vAppTemplate/{id}/action/relocate:
    post:
      tags:
        - user
      description: Relocate a VM to a different datastore.
      requestBody:
        content:
          application/vnd.vmware.vcloud.relocateVmParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_RelocateParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and return a task.\
            \ When the task completes, the VM has been relocated."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/removeAllSnapshots:
    post:
      tags:
        - user
      description: Removes all user created snapshots for a vApp or virtual machine.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vmGroup/name/{groupName}/action/removeVms:
    post:
      tags:
        - extension
      description: "Removes virtual machines from the specified VM group.\n\n This\
        \ asynchronous call returns a task. The process of removing virtual machines\
        \ from a VM group can result in the virtual machine being processed and redeployed\
        \ by the placement engine. All virtual machines provided to this call will\
        \ be marked busy until the remove from group process is complete."
      requestBody:
        content:
          application/vnd.vmware.vcloud.vms+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_VmsType'
        required: true
      responses:
        2XX:
          description: a task to monitor the progress of removing virtual machines
            from a VM group
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/host/{id}/action/repair:
    post:
      tags:
        - extension
      description: Repair a host.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/amqp/action/resetAmqpCertificate:
    post:
      tags:
        - extension
      description: Resets AMQP certificate.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /admin/extension/settings/amqp/action/resetAmqpTruststore:
    post:
      tags:
        - extension
      description: Resets AMQP truststore.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /admin/extension/settings/ldapSettings/action/resetLdapKeyStore:
    post:
      tags:
        - extension
      description: Resets system LDAP keystore.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/ldap/action/resetLdapKeyStore:
    post:
      tags:
        - admin
      description: Resets organization LDAP keystore.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/ldapSettings/action/resetLdapCertificate:
    post:
      tags:
        - extension
      description: Resets system LDAP SSL certificate.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/ldap/action/resetLdapCertificate:
    post:
      tags:
        - admin
      description: Resets organization LDAP SSL certificate.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/network/{id}/action/reset:
    post:
      tags:
        - admin
      description: "Reset networking services on a network.\n\n This operation is\
        \ valid for all networks except vApp networks in undeployed vApps."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/ldapSettings/action/resetLdapSspiKeytab:
    post:
      tags:
        - extension
      description: Resets system LDAP SSPI key tab.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/ldap/action/resetLdapSspiKeytab:
    post:
      tags:
        - admin
      description: Resets organization LDAP SSPI keytab.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/power/action/reset:
    post:
      tags:
        - user
      description: "Reset a vApp or VM.\n\n If used on a vApp, resets all VMs in the\
        \ vApp. If used on a VM, resets the VM. This operation is available only for\
        \ a vApp or VM that is powered on."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/general/action/resetVcTrustsore:
    post:
      tags:
        - extension
      description: Resets vCenter trust store.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
  /admin/extension/blockingTask/{id}/action/resume:
    post:
      tags:
        - extension
      description: "Resume a blocking task.\n\n This request unblocks the task and\
        \ allows it to continue."
      requestBody:
        content:
          application/vnd.vmware.admin.blockingTaskOperationParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_BlockingTaskOperationParamsType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/revertToCurrentSnapshot:
    post:
      tags:
        - user
      description: Reverts a vApp or virtual machine to the current snapshot, if any.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/power/action/shutdown:
    post:
      tags:
        - user
      description: "Shut down a vApp or VM.\n\n If used on a vApp, shuts down all\
        \ VMs in the vApp. If used on a VM, shuts down the VM. This operation is available\
        \ only for a vApp or VM that is powered on."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/power/action/suspend:
    post:
      tags:
        - user
      description: "Suspend a vApp or VM.\n\n If used on a vApp, suspends all VMs\
        \ in the vApp. If used on a VM, suspends the VM. This operation is available\
        \ only for a vApp or VM that is powered on."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalog/{id}/action/sync:
    post:
      tags:
        - user
      description: Force sync the catalog to the remote subscribed catalog.
      responses:
        2XX:
          description: "TaskType\n\n The response includes a Task element. You can\
            \ monitor the task to to track the sync of the catalog."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalogItem/{id}/action/sync:
    post:
      tags:
        - user
      description: Synchronize a catalog item with its source object.
      responses:
        2XX:
          description: "{@link TaskType}\n\n The response is a Task element. You can\
            \ monitor the task to track the progress of this operation."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/network/{id}/action/syncSyslogServerSettings:
    post:
      tags:
        - admin
      description: "Synchronize syslog server settings for a network.\n\n When you\
        \ change the IP addresses of the primary or secondary syslog server for a\
        \ cloud, you must also synchronize the syslog server settings for organization\
        \ and vApp networks that include a firewall service for which logging has\
        \ been enabled."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/syncSyslogServerSettings:
    post:
      tags:
        - admin
      description: Synchronize syslog server settings on an edgeGateway.
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/user/{id}/action/takeOwnership:
    post:
      tags:
        - admin
      description: Transfer ownership of this user's vApps, media, and catalogs to
        the caller.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/amqp/action/test:
    post:
      tags:
        - extension
      description: "Validate provisional AMQP settings.\n\n This request attempts\
        \ to contact an AMQP broker using the values in the request body (an AmqpSettings\
        \ element). If the attempt succeeds, the AmqpSettings are considered valid\
        \ and can be used to update the system's AMQP settings."
      requestBody:
        content:
          application/vnd.vmware.admin.amqpSettings+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_AmqpSettingsType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.amqpSettingsTest+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_AmqpSettingsTestType'
      security:
        - bearerAuth: []
  /vApp/{id}/action/undeploy:
    post:
      tags:
        - user
      description: "Undeploy a vApp/VM.\n\n Undeployment deallocates all resources\
        \ used by the vApp and the VMs it contains."
      requestBody:
        content:
          application/vnd.vmware.vcloud.undeployVAppParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_UndeployVAppParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/role/{id}/action/unlinkFromTemplate:
    post:
      tags:
        - admin
      description: Unlink a role from the template specified by its defaultRoleId.
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/user/{id}/action/unlock:
    post:
      tags:
        - admin
      description: Unlock a user.
      responses:
        2XX:
          description: success
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/host/{id}/action/unprepare:
    post:
      tags:
        - extension
      description: "Unprepare a host.\n\n Unpreparing host makes its resources inaccessible\
        \ to vCloud Director."
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/vimServer/{id}/action/unregister:
    post:
      tags:
        - extension
      description: Unregister a vCenter server.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/bootOptions:
    post:
      tags:
        - user
      description: ''
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/catalog/{id}/action/publish:
    post:
      tags:
        - admin
      description: "Publish a catalog.\n\n Publishing a catalog sets the value of\
        \ its IsPublished element to true and makes the catalog visible to organization\
        \ administrators of all organizations in a cloud."
      requestBody:
        content:
          application/vnd.vmware.admin.publishCatalogParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_PublishCatalogParamsType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/catalog/{id}/action/publishToExternalOrganizations:
    post:
      tags:
        - admin
      description: Publish a catalog to external orgs.
      requestBody:
        content:
          application/vnd.vmware.admin.publishExternalCatalogParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_PublishExternalCatalogParamsType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/blockingTask/{id}/action/updateProgress:
    post:
      tags:
        - extension
      description: "Extend the expiration timeout of an active task.\n\n This request\
        \ resets the timeout value and timeout action for an active task. Use this\
        \ request to keep the task alive when it might become subject to a timeout\
        \ action."
      requestBody:
        content:
          application/vnd.vmware.admin.blockingTaskUpdateProgressOperationParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_BlockingTaskUpdateProgressParamsType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.admin.blockingTask+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_BlockingTaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providervdc/{id}/storageProfiles:
    post:
      tags:
        - extension
      description: "Update storage classes of a provider vDC.\n\n The request parameters\
        \ specify storage classes to add or remove."
      requestBody:
        content:
          application/vnd.vmware.admin.updateProviderVdcStorageProfiles+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_UpdateProviderVdcStorageProfilesParamsType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/providervdc/{id}/action/updateResourcePools:
    post:
      tags:
        - extension
      description: Add or remove provider vDC resource pools.
      requestBody:
        content:
          application/vnd.vmware.admin.resourcePoolSetUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_UpdateResourcePoolSetParamsType'
        required: true
      responses:
        2XX:
          description: "{@link TaskType}\n\n This operation is asynchronous and returns\
            \ a task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/catalog/{id}/action/subscribeToExternalCatalog:
    post:
      tags:
        - admin
      description: Subscribe to an external catalog.
      requestBody:
        content:
          application/vnd.vmware.admin.externalCatalogSubscriptionParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_ExternalCatalogSubscriptionParamsType'
        required: true
      responses:
        2XX:
          description: success
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/vdc/{id}/vdcStorageProfiles:
    post:
      tags:
        - admin
      description: Add or remove virtual datacenter storage classes.
      requestBody:
        content:
          application/vnd.vmware.admin.updateVdcStorageProfiles+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_UpdateVdcStorageProfilesType'
        required: true
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/upgradeConfig:
    post:
      tags:
        - admin
      description: Upgrades the edge gateway appliance size.
      responses:
        2XX:
          description: TaskType
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/host/{id}/action/upgrade:
    post:
      tags:
        - extension
      description: Upgrade the vCloud Director host agent on a host after you have
        upgraded vCloud Director software.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vApp/{id}/action/upgradeHardwareVersion:
    post:
      tags:
        - user
      description: Upgrade the virtual hardware version of a VM to the highest supported
        virtual hardware version of the vDC that contains it.
      responses:
        2XX:
          description: "TaskType\n\n This operation is asynchronous and returns a\
            \ task that you can monitor to track the progress of the request."
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/amqp/action/updateAmqpCertificate:
    post:
      tags:
        - extension
      description: Updates AMQP certificate. AMQP certificate and trust store are
        mutually exclusive. Overrides AMQP trust store, if update is successful.
      requestBody:
        content:
          application/vnd.vmware.admin.certificateUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CertificateUpdateParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<CertificateUploadSocketType\>}'
          content:
            application/vnd.vmware.admin.certificateUploadSocketType+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CertificateUploadSocketType'
      security:
        - bearerAuth: []
  /admin/extension/settings/amqp/action/updateAmqpTruststore:
    post:
      tags:
        - extension
      description: Updates AMQP trust store. AMQP certificate and trust store are
        mutually exclusive. Overrides AMQP certificate, if update is successful.
      requestBody:
        content:
          application/vnd.vmware.admin.trustStoreUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_TrustStoreUpdateParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<TrustStoreUploadSocketType\>}'
          content:
            application/vnd.vmware.admin.trustStoreUploadSocketType+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TrustStoreUploadSocketType'
      security:
        - bearerAuth: []
  /admin/extension/settings/ldapSettings/action/updateLdapKeyStore:
    post:
      tags:
        - extension
      description: Updates system LDAP keystore.
      requestBody:
        content:
          application/vnd.vmware.admin.keystoreUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_KeystoreUpdateParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<KeystoreUploadSocketType\>}'
          content:
            application/vnd.vmware.admin.keystoreUploadSocketType+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_KeystoreUploadSocketType'
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/ldap/action/updateLdapKeyStore:
    post:
      tags:
        - admin
      description: Updates organization LDAP keystore.
      requestBody:
        content:
          application/vnd.vmware.admin.keystoreUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_KeystoreUpdateParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<KeystoreUploadSocketType\>}'
          content:
            application/vnd.vmware.admin.keystoreUploadSocketType+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_KeystoreUploadSocketType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/ldapSettings/action/updateLdapCertificate:
    post:
      tags:
        - extension
      description: Updates system LDAP SSL certificate.
      requestBody:
        content:
          application/vnd.vmware.admin.certificateUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CertificateUpdateParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<CertificateUploadSocketType\>}'
          content:
            application/vnd.vmware.admin.certificateUploadSocketType+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CertificateUploadSocketType'
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/ldap/action/updateLdapCertificate:
    post:
      tags:
        - admin
      description: Updates organization LDAP SSL certificate.
      requestBody:
        content:
          application/vnd.vmware.admin.certificateUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_CertificateUpdateParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<FileUploadSocketType\>}'
          content:
            application/vnd.vmware.admin.certificateUploadSocketType+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CertificateUploadSocketType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/service/localizationbundles:
    post:
      tags:
        - extension
      description: Initiates localization bundle upload.
      requestBody:
        content:
          application/vnd.vmware.admin.bundleUploadParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_BundleUploadParamsType'
        required: true
      responses:
        2XX:
          description: BundleUploadSocketType containing URL where bundle must be
            uploaded.
          content:
            application/vnd.vmware.admin.bundleUploadSocket+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_BundleUploadSocketType'
      security:
        - bearerAuth: []
  /vdc/{id}/media:
    post:
      tags:
        - user
      description: Upload a media image
      requestBody:
        content:
          application/vnd.vmware.vcloud.media+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_MediaType'
        required: true
      responses:
        2XX:
          description: "MediaType\n\n The response includes an upload link for the\
            \ media image."
          content:
            application/vnd.vmware.vcloud.media+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_MediaType'
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/ldapSettings/action/updateLdapSspiKeytab:
    post:
      tags:
        - extension
      description: Updates system LDAP SSPI key tab.
      requestBody:
        content:
          application/vnd.vmware.admin.sspiKeytabUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SspiKeytabUpdateParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<SspiKeytabUploadSocketType\>}'
          content:
            application/vnd.vmware.admin.sspiKeytabUploadSocketType+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SspiKeytabUploadSocketType'
      security:
        - bearerAuth: []
  /admin/org/{id}/settings/ldap/action/updateLdapSspiKeytab:
    post:
      tags:
        - admin
      description: Updates organization LDAP SSPI keytab.
      requestBody:
        content:
          application/vnd.vmware.admin.sspiKeytabUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_SspiKeytabUpdateParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<SspiKeytabUploadSocketType\>}'
          content:
            application/vnd.vmware.admin.sspiKeytabUploadSocketType+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_SspiKeytabUploadSocketType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /catalog/{id}/action/upload:
    post:
      tags:
        - user
      description: Upload a vApp template to a catalog
      requestBody:
        content:
          application/vnd.vmware.vcloud.uploadVAppTemplateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_UploadVAppTemplateParamsType'
        required: true
      responses:
        2XX:
          description: "CatalogItemType\n\n The response is the CatalogItemType. The\
            \ API client then need to make another call to the referenced media entity\
            \ in order to get the upload URI."
          content:
            application/vnd.vmware.vcloud.catalogItem+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_CatalogItemType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/action/uploadVAppTemplate:
    post:
      tags:
        - user
      description: Upload an OVF package to create a vApp template
      requestBody:
        content:
          application/vnd.vmware.vcloud.uploadVAppTemplateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_UploadVAppTemplateParamsType'
        required: true
      responses:
        2XX:
          description: "VAppTemplateType\n\n The response includes an upload link\
            \ for the OVF descriptor"
          content:
            application/vnd.vmware.vcloud.vAppTemplate+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_VAppTemplateType'
      deprecated: true
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/extension/settings/general/action/updateVcTrustsore:
    post:
      tags:
        - extension
      description: Updates vCenter trust store.
      requestBody:
        content:
          application/vnd.vmware.admin.vcTrustStoreUpdateParams+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud-ext_VcTrustStoreUpdateParamsType'
        required: true
      responses:
        2XX:
          description: '{@link JAXBElement<VcTrustStoreUploadSocketType\>}'
          content:
            application/vnd.vmware.admin.vcTrustStoreUploadSocket+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud-ext_VcTrustStoreUploadSocketType'
      security:
        - bearerAuth: []
  /admin/extension/vdcTemplate/{id}/action/controlAccess:
    put:
      tags:
        - extension
      description: Update access control information for a VDC template.
      requestBody:
        content:
          application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /vdc/{id}/action/controlAccess:
    put:
      tags:
        - user
      description: Update access control information for a VDC. Provided access control
        information should only use ReadOnly access level or else {@link BadRequestException}
        is thrown
      requestBody:
        content:
          application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.controlAccess+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_ControlAccessParamsType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
  /admin/edgeGateway/{id}/action/updateProperties:
    put:
      tags:
        - admin
      description: Endpoint for just updating gateway properties by themselves.
      requestBody:
        content:
          application/vnd.vmware.admin.edgeGateway+json;version=30.0:
            schema:
              $ref: '#/components/schemas/vcloud_GatewayType'
        required: true
      responses:
        2XX:
          description: success
          content:
            application/vnd.vmware.vcloud.task+json;version=30.0:
              schema:
                $ref: '#/components/schemas/vcloud_TaskType'
      security:
        - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      bearerFormat: null
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: null
  schemas:
    query-parameter_force:
      type: boolean
    query-parameter_recursive:
      type: boolean
    query-parameter_fields:
      type: string
    query-parameter_filter:
      type: string
    query-parameter_filterEncoded:
      type: boolean
    query-parameter_format:
      type: string
      enum:
        - references
        - records
        - idrecords
    query-parameter_links:
      type: boolean
    query-parameter_offset:
      type: integer
      minimum: 0
    query-parameter_page:
      type: integer
      minimum: 1
    query-parameter_pageSize:
      type: integer
      minimum: 1
      maximum: 128
    query-parameter_sortAsc:
      type: string
    query-parameter_sortDesc:
      type: string
    query-parameter_type:
      type: string
      enum:
        - aclRule
        - adminApiDefinition
        - adminCatalog
        - adminCatalogItem
        - adminDisk
        - adminEvent
        - adminEventCBM
        - adminFileDescriptor
        - adminGroup
        - adminMedia
        - adminOrgVdc
        - adminOrgVdcStorageProfile
        - adminRole
        - adminService
        - adminShadowVM
        - adminTask
        - adminUser
        - adminVApp
        - adminVAppNetwork
        - adminVAppTemplate
        - adminVM
        - adminVMDiskRelation
        - apiDefinition
        - apiFilter
        - blockingTask
        - catalog
        - catalogItem
        - cell
        - condition
        - datastore
        - datastoreProviderVdcRelation
        - disk
        - dvSwitch
        - edgeGateway
        - event
        - externalLocalization
        - externalNetwork
        - fileDescriptor
        - fromCloudTunnel
        - group
        - host
        - licensingManagedServer
        - licensingReport
        - licensingReportSample
        - licensingVirtualMachine
        - media
        - networkPool
        - orgNetwork
        - orgVdc
        - orgVdcNetwork
        - orgVdcResourcePoolRelation
        - orgVdcStorageProfile
        - organization
        - portgroup
        - providerVdc
        - providerVdcResourcePoolRelation
        - providerVdcStorageProfile
        - resourceClass
        - resourceClassAction
        - resourcePool
        - resourcePoolVmList
        - right
        - role
        - service
        - serviceLink
        - serviceResource
        - strandedItem
        - strandedUser
        - task
        - toCloudTunnel
        - user
        - vApp
        - vAppNetwork
        - vAppOrgVdcNetworkRelation
        - vAppTemplate
        - virtualCenter
        - vm
        - vmDiskRelation
        - vmGroupVms
        - vmGroups
    vcloud_AmqpConfigurationType:
      title: vcloud_AmqpConfigurationType
      description: Represents a list of AMQP Configuration items
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            amqpBrokers:
              description: List of AMQP Broker configurations.
              allOf:
                - $ref: '#/components/schemas/vcloud_AmqpBrokersType'
            amqpComponentConfigurations:
              description: List of AMQP Broker configurations.
              allOf:
                - $ref: '#/components/schemas/vcloud_AmqpComponentConfigurationsType'
          additionalProperties: false
    vcloud_AmqpComponentConfigurationsType:
      title: vcloud_AmqpComponentConfigurationsType
      description: Represents an AMQP Component Configuration list
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            amqpComponentConfiguration:
              description: AMQP Component Configuration.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_AmqpComponentConfigurationType'
          additionalProperties: false
    vcloud_AmqpComponentConfigurationType:
      title: vcloud_AmqpComponentConfigurationType
      description: Represents an AMQP Component Configuration.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            name:
              description: Name of AMQP configuration component.
              type: string
            amqpConfigList:
              description: List of AMQP config entries for a component.
              allOf:
                - $ref: '#/components/schemas/vcloud_AmqpConfigListType'
          required:
            - name
            - amqpConfigList
          additionalProperties: false
    vcloud_AmqpConfigListType:
      title: vcloud_AmqpConfigListType
      description: Represents an AMQP Configuration key value pair list
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            configEntry:
              description: Reference to an AMQP Configuration item.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_AmqpConfigEntryType'
          additionalProperties: false
    vcloud_AmqpConfigEntryType:
      title: vcloud_AmqpConfigEntryType
      description: AMQP Component config entry.
      type: object
      properties:
        key:
          description: A key value pair in a config entry. This element contains the
            value for the named key.
          type: string
        value:
          type: string
      required:
        - key
        - value
      additionalProperties: false
    vcloud_AmqpBrokersType:
      title: vcloud_AmqpBrokersType
      description: Represents a list of AMQP broker configurations.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            amqpBrokerConfiguration:
              description: Reference to an AMQP Configuration item.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_AmqpBrokerConfigurationType'
          additionalProperties: false
    vcloud_AmqpBrokerConfigurationType:
      title: vcloud_AmqpBrokerConfigurationType
      description: Represents configuration for an AMQP broker
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            amqpHost:
              description: Hostname of the AMQP broker.
              type: string
            amqpPort:
              description: Port used by the AMQP broker.
              type: integer
              format: int32
            amqpUsername:
              description: Username for the AMQP broker.
              type: string
            amqpPassword:
              description: Password for the AMQP broker.
              type: string
            amqpVHost:
              description: Virtual host for the AMQP broker.
              type: string
            amqpUseSSL:
              description: Use SSL for communication with the AMQP broker.
              type: boolean
            amqpSslAcceptAll:
              description: Accept all SSL certificates. Must be true if AmqpUseSSL
                is true.
              type: boolean
          required:
            - amqpHost
            - amqpPort
            - amqpUsername
            - amqpVHost
            - amqpUseSSL
            - amqpSslAcceptAll
          additionalProperties: false
    vcloud_TaskRequestBaseType:
      title: vcloud_TaskRequestBaseType
      description: Base type for blocking tasks.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            createdTime:
              description: The date/time that the blocking task was created.
              type: string
              format: date-time
            timeoutDate:
              description: The date/time at which this request times out. Requests
                time out if not acted upon within a configured interval. When a request
                times out, the action specified in timeoutAction is taken automatically.
              type: string
              format: date-time
            timeoutAction:
              description: "Action that is automatically taken when a request times\
                \ out. One of:  \n**resume** (The task will be resumed.)  \n**abort**\
                \ (The task will be aborted. Transient objects are cleaned up. Task\
                \ status is set to ABORTED.)  \n**fail** (The task will be failed.\
                \ Transient object status and task status are set to ERROR.)"
              type: string
            organization:
              description: The organization in which the blocking task runs.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            user:
              description: The user who triggered the blocking task.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            taskOwner:
              description: The owner of the blocking task.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - createdTime
            - timeoutDate
            - timeoutAction
            - organization
          additionalProperties: false
    vcloud_RequestOperationParamsType:
      title: vcloud_RequestOperationParamsType
      description: Represents parameters to a request.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            message:
              description: Message that will be associated with the action.
              type: string
          required:
            - message
          additionalProperties: false
    vcloud_EventPropertiesType:
      title: vcloud_EventPropertiesType
      description: List of event\-specific properties.
      type: object
      additionalProperties: false
    vcloud_EventType:
      title: vcloud_EventType
      description: Parameters for creating an event.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            type:
              description: A string identifying the type of the event. Length must
                be between 1 and 128 characters. Cannot start with com/vmware/vcloud.
              type: string
            serviceNamespace:
              description: Identifier of the external service that posted the event.
                Length must be between 1 and 128 characters. Cannot start with com.vmware.vcloud.
              type: string
            success:
              description: True if the event represents a successful operation.
              type: boolean
            typeFull:
              description: A message describing the event. Length must be between
                0 and 2000 characters.
              type: string
            owner:
              description: A reference to the owner of the event.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            user:
              description: A reference to the user for which the event was created.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            eventProperties:
              description: List of event\-specific properties.
              allOf:
                - $ref: '#/components/schemas/vcloud_EventPropertiesType'
          required:
            - type
            - serviceNamespace
            - success
            - user
          additionalProperties: false
    vcloud_AuditEventType:
      title: vcloud_AuditEventType
      description: Audit event
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            eventType:
              description: A string identifying the type of the event.
              type: string
            serviceNamespace:
              description: Identifier of the external service that posted the event
                or 'com.vmware.vcloud' for internal events.
              type: string
            timeStamp:
              description: Timestamp of the event.
              type: string
              format: date-time
            success:
              description: True if the event represents a successful operation. False
                otherwise.
              type: boolean
            org:
              description: A reference to the organization to which the event was
                posted.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            owner:
              description: A reference to the owner of the event.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            user:
              description: A reference to the user for which the event was created.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            details:
              description: Event properties in JSON format.
              type: string
          required:
            - eventType
            - serviceNamespace
            - timeStamp
            - success
            - org
            - user
          additionalProperties: false
    vcloud_ProviderVdcType:
      title: vcloud_ProviderVdcType
      description: Represents a Provider vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            status:
              description: "Creation status of the provider VDC. One of:  \n \\-1\
                \ (creation failed)  \n 0 (not ready)  \n 1 (ready)  \n 2 (unknown)\
                \  \n 3 (unrecognized)"
              type: integer
              format: int32
            computeCapacity:
              description: Read\-only indicator of CPU and memory capacity.
              allOf:
                - $ref: '#/components/schemas/vcloud_RootComputeCapacityType'
            availableNetworks:
              description: Read\-only list of available networks.
              allOf:
                - $ref: '#/components/schemas/vcloud_AvailableNetworksType'
            storageProfiles:
              description: Container for references to vSphere storage profiles available
                to this Provider vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_ProviderVdcStorageProfilesType'
            capabilities:
              description: Read\-only list of virtual hardware versions supported
                by this Provider vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_CapabilitiesType'
            vdcs:
              description: Read\-only list of organization vDCs backed by this Provider
                vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_VdcsType'
            isEnabled:
              description: True if this Provider vDC is enabled and can provide resources
                to organization vDCs. A Provider vDC is always enabled on creation.
              type: boolean
            networkPoolReferences:
              description: Read\-only list of network pools used by this Provider
                vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_NetworkPoolReferencesType'
          additionalProperties: false
    vcloud_CreateVdcParamsType:
      title: vcloud_CreateVdcParamsType
      description: Parameters for creating an organization vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            allocationModel:
              description: "The allocation model used by this vDC. One of:  \n**AllocationVApp**\
                \ (Pay as you go. Resources are committed to a vDC only when vApps\
                \ are created in it. When you use this allocation model, any Limit\
                \ values you specify for Memory and CPU are ignored on create and\
                \ returned as 0 on retrieve.)  \n**AllocationPool** (Only a percentage\
                \ of the resources you allocate are committed to the organization\
                \ vDC.)  \n**ReservationPool** (All the resources you allocate are\
                \ committed as a pool to the organization vDC. vApps in vDCs that\
                \ support this allocation model can specify values for resource and\
                \ limit.)"
              type: string
            computeCapacity:
              description: The compute capacity allocated to this vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_ComputeCapacityType'
            nicQuota:
              description: Maximum number of virtual NICs allowed in this vDC. Defaults
                to 0, which specifies an unlimited number.
              type: integer
              format: int32
            networkQuota:
              description: Maximum number of network objects that can be deployed
                in this vDC. Defaults to 0, which means no networks can be deployed.
              type: integer
              format: int32
            vmQuota:
              description: The maximum number of VMs that can be created in this vDC.
                Includes deployed and undeployed VMs in vApps and vApp templates.
                Defaults to 0, which specifies an unlimited number.
              type: integer
              format: int32
            isEnabled:
              description: True if this vDC is enabled for use by the organization
                vDCs. A vDC is always enabled on creation.
              type: boolean
            vdcStorageProfile:
              description: Storage profiles supported by this vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VdcStorageProfileParamsType'
            resourceGuaranteedMemory:
              description: Percentage of allocated memory resources guaranteed to
                vApps deployed in this vDC. For example, if this value is 0.75, then
                75% of allocated resources are guaranteed. Required when AllocationModel
                is AllocationVApp or AllocationPool. Value defaults to 1.0 if the
                element is empty.
              type: number
              format: double
            resourceGuaranteedCpu:
              description: Percentage of allocated CPU resources guaranteed to vApps
                deployed in this vDC. For example, if this value is 0.75, then 75%
                of allocated resources are guaranteed. Required when AllocationModel
                is AllocationVApp or AllocationPool. Value defaults to 1.0 if the
                element is empty.
              type: number
              format: double
            vCpuInMhz:
              description: Specifies the clock frequency, in Megahertz, for any virtual
                CPU that is allocated to a VM. A VM with 2 vCPUs will consume twice
                as much of this value. Ignored for ReservationPool. Required when
                AllocationModel is AllocationVApp or AllocationPool, and may not be
                less than 256 MHz. Defaults to 1000 MHz if the element is empty or
                missing. As of API version 5.7 this element became redundant with
                the "VCpuInMhz2" element in VdcType. Both elements are set to the
                same value in responses. However, on requests this element's value
                is the one that's used.
              type: integer
              format: int64
            isThinProvision:
              description: Boolean to request thin provisioning. Request will be honored
                only if the underlying datastore supports it. Thin provisioning saves
                storage space by committing it on demand. This allows over\-allocation
                of storage.
              type: boolean
            networkPoolReference:
              description: Reference to a network pool in the Provider vDC. Required
                if this vDC will contain routed or isolated networks.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            providerVdcReference:
              description: A reference to the Provider vDC from which this organization
                vDC is provisioned.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            resourcePoolRefs:
              description: Optional list of additional resource pools to back this
                Organization vDC. Specified resource pools must be backed by different
                clusters, and must not back an existing Organization vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
            usesFastProvisioning:
              description: Boolean to request fast provisioning. Request will be honored
                only if the underlying datastore supports it. Fast provisioning can
                reduce the time it takes to create virtual machines by using vSphere
                linked clones. If you disable fast provisioning, all provisioning
                operations will result in full clones.
              type: boolean
            overCommitAllowed:
              description: Set to false to disallow creation of the VDC if the AllocationModel
                is AllocationPool or ReservationPool and the ComputeCapacity you specified
                is greater than what the backing Provider VDC can supply. Defaults
                to true if empty or missing.
              type: boolean
            vmDiscoveryEnabled:
              description: True if discovery of vCenter VMs is enabled for resource
                pools backing this vDC. If left unspecified, the actual behaviour
                depends on enablement at the organization level and at the system
                level.
              type: boolean
          required:
            - allocationModel
            - computeCapacity
            - vdcStorageProfile
            - providerVdcReference
          additionalProperties: false
    vcloud_AdminVdcType:
      title: vcloud_AdminVdcType
      description: Represents the admin view of an organization vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_VdcType'
        - type: object
          properties:
            resourceGuaranteedMemory:
              description: Percentage of allocated memory resources guaranteed to
                vApps deployed in this vDC. For example, if this value is 0.75, then
                75% of allocated resources are guaranteed. Required when AllocationModel
                is AllocationVApp or AllocationPool. Value defaults to 1.0 if the
                element is empty.
              type: number
              format: double
            resourceGuaranteedCpu:
              description: Percentage of allocated CPU resources guaranteed to vApps
                deployed in this vDC. For example, if this value is 0.75, then 75%
                of allocated resources are guaranteed. Required when AllocationModel
                is AllocationVApp or AllocationPool. Value defaults to 1.0 if the
                element is empty.
              type: number
              format: double
            vCpuInMhz:
              description: Specifies the clock frequency, in Megahertz, for any virtual
                CPU that is allocated to a VM. A VM with 2 vCPUs will consume twice
                as much of this value. Ignored for ReservationPool. Required when
                AllocationModel is AllocationVApp or AllocationPool, and may not be
                less than 256 MHz. Defaults to 1000 MHz if the element is empty or
                missing.
              type: integer
              format: int64
            isThinProvision:
              description: Boolean to request thin provisioning. Request will be honored
                only if the underlying datastore supports it. Thin provisioning saves
                storage space by committing it on demand. This allows over\-allocation
                of storage.
              type: boolean
            networkPoolReference:
              description: Reference to a network pool in the Provider vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            vendorServices:
              description: Vendor services defined for this org vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_VendorServicesType'
            providerVdcReference:
              description: A reference to the ProviderVdc from which this vDC is provisioned.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            resourcePoolRefs:
              description: A set of references to the vCenter Resource Pools backing
                this VDC.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
            usesFastProvisioning:
              description: Boolean to request fast provisioning. Request will be honored
                only if the underlying datastore supports it. Fast provisioning can
                reduce the time it takes to create virtual machines by using vSphere
                linked clones. If you disable fast provisioning, all provisioning
                operations will result in full clones.
              type: boolean
            overCommitAllowed:
              description: Always null in the response to a GET request. On update,
                set to false to disallow the update if the AllocationModel is AllocationPool
                or ReservationPool and the ComputeCapacity you specified is greater
                than what the backing Provider VDC can supply. Defaults to true if
                empty or missing.
              type: boolean
            vmDiscoveryEnabled:
              description: True if discovery of vCenter VMs is enabled for resource
                pools backing this vDC.
              type: boolean
            universalNetworkPoolReference:
              description: Reference to a universal network pool.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_VdcReferencesType:
      title: vcloud_VdcReferencesType
      description: List of organization vDCs backed by this Provider vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vdcReference:
              description: A reference to an organization vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_ProviderVdcCapacityType:
      title: vcloud_ProviderVdcCapacityType
      description: Represents resource capacity in a Provider vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            units:
              description: Units in which the capacity is measured. For CPU devices,
                this is always Megahertz, represented by the string MHz.
              type: string
            allocation:
              description: Number of Units that have been allocated to consumers.
              type: integer
              format: int64
            reserved:
              description: Number of Units that have been reserved.
              type: integer
              format: int64
            total:
              description: Total number of Units that can be allocated to all consumers.
              type: integer
              format: int64
            used:
              description: Percentage of the allocation in use.
              type: integer
              format: int64
            overhead:
              description: Number of Units allocated to system resources such as vShield
                Manager virtual machines and shadow virtual machines provisioned from
                this Provider vDC.
              type: integer
              format: int64
          required:
            - units
            - total
          additionalProperties: false
    vcloud_RootComputeCapacityType:
      title: vcloud_RootComputeCapacityType
      description: Represents compute capacity with units.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            cpu:
              description: Read\-only indicator of CPU capacity available in the Provider
                vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_ProviderVdcCapacityType'
            memory:
              description: Read\-only indicator of memory capacity available in the
                Provider vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_ProviderVdcCapacityType'
            isElastic:
              description: True if compute capacity can grow or shrink based on demand.
              type: boolean
            isHA:
              description: True if compute capacity is highly available.
              type: boolean
          required:
            - cpu
            - memory
          additionalProperties: false
    vcloud_NetworkPoolReferencesType:
      title: vcloud_NetworkPoolReferencesType
      description: Container for references to network pools in this vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            networkPoolReference:
              description: A reference to a network pool.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_NetworkPoolType:
      title: vcloud_NetworkPoolType
      description: Represents a network pool.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceEntityType'
        - type: object
          additionalProperties: false
    vcloud_ProviderVdcStorageProfilesType:
      title: vcloud_ProviderVdcStorageProfilesType
      description: Container for references to storage profiles associated with a
        Provider vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            providerVdcStorageProfile:
              description: A reference to a Provider vDC storage profile.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_ProviderVdcStorageProfileType:
      title: vcloud_ProviderVdcStorageProfileType
      description: Represents a Provider vDC storage profile.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            enabled:
              description: True if this storage profile is enabled for use in this
                vDC.
              type: boolean
            units:
              description: Units of capacity.
              type: string
            capacityTotal:
              description: Total capacity of this storage profile.
              type: number
              format: double
            capacityUsed:
              description: Used capacity in this storage profile.
              type: number
              format: double
            iopsCapacity:
              description: IOPS capacity in this storage profile.
              type: integer
              format: int64
            iopsAllocated:
              description: Allocated IOPS in this storage profile.
              type: integer
              format: int64
          required:
            - units
            - capacityTotal
            - capacityUsed
          additionalProperties: false
    vcloud_VdcStorageProfileParamsType:
      title: vcloud_VdcStorageProfileParamsType
      description: Represents the parameters to create a storage profile in an organization
        vDC
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            enabled:
              description: True if this storage profile is enabled for use in the
                vDC.
              type: boolean
            units:
              description: Units used to define Limit.
              type: string
            limit:
              description: Maximum number of Units allocated for this storage profile.
                A value of 0 specifies unlimited Units.
              type: integer
              format: int64
            default:
              description: True if this is default storage profile for this vDC. The
                default storage profile is used when an object that can specify a
                storage profile is created with no storage profile specified.
              type: boolean
            iopsSettings:
              description: When NOT provided, disk storage placement ignores IOPs
                considerations; otherwise, this element holds all the disk IOPs related
                settings, including a subordinate Enabled flag. When that flag is
                false, disk provisioning using this profile will behave identically
                as if this element was not provided in the first place.
              allOf:
                - $ref: '#/components/schemas/vcloud_VdcStorageProfileIopsSettingsType'
            providerVdcStorageProfile:
              description: Reference to a Provider vDC storage profile.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - units
            - limit
            - default
            - providerVdcStorageProfile
          additionalProperties: false
    vcloud_AdminVdcStorageProfileType:
      title: vcloud_AdminVdcStorageProfileType
      description: Represents a storage profile in an organization vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_VdcStorageProfileType'
        - type: object
          properties:
            providerVdcStorageProfile:
              description: Reference to a Provider vDC storage profile.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - providerVdcStorageProfile
          additionalProperties: false
    vcloud_UpdateVdcStorageProfilesType:
      title: vcloud_UpdateVdcStorageProfilesType
      description: Parameters for updating storage profiles in an organization vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            addStorageProfile:
              description: Storage profile to add to the organization vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VdcStorageProfileParamsType'
            removeStorageProfile:
              description: Storage profile to remove from the organization vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_PhasesType:
      title: vcloud_PhasesType
      description: An extensibility phase represents a point in a workflow where control
        can be passed to an extension. Each phase may define its own message format
        for communicating with the extension.
      type: object
      additionalProperties: false
    vcloud_SelectorExtensionType:
      title: vcloud_SelectorExtensionType
      description: Represents the association between a registered extension and a
        selector. At the selector level it defines a default policy of association.
        At the instance level it defines an overridden policy or a selector instance
        specific association.
      allOf:
        - $ref: '#/components/schemas/vcloud_IdentifiableResourceType'
        - type: object
          properties:
            enabled:
              description: True if this extension selector association is enabled.
              type: boolean
            priority:
              description: Specifies priority level of a extension selector association.
              type: integer
            objectExtensionId:
              description: Opaque string identifying the associated registered object
                extension.
              type: string
            phases:
              description: One or more Phases implemented by this extension in the
                context of this Selector.
              allOf:
                - $ref: '#/components/schemas/vcloud_PhasesType'
          required:
            - enabled
            - priority
            - objectExtensionId
          additionalProperties: false
    vcloud_SelectorExtensionsType:
      title: vcloud_SelectorExtensionsType
      description: Represents the collection of selector extensions.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            selectorExtension:
              description: Represents the association between a registered extension
                and a selector.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_SelectorExtensionType'
          required:
            - selectorExtension
          additionalProperties: false
    vcloud_CertificateUpdateParamsType:
      title: vcloud_CertificateUpdateParamsType
      description: Parameters for certificate update.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadParamsType'
        - type: object
          additionalProperties: false
    vcloud_CertificateUploadSocketType:
      title: vcloud_CertificateUploadSocketType
      description: Upload socket for certificate.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadSocketType'
        - type: object
          additionalProperties: false
    vcloud_KeystoreUpdateParamsType:
      title: vcloud_KeystoreUpdateParamsType
      description: Parameters for keystore update.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadParamsType'
        - type: object
          properties:
            password:
              description: Password for the keystore.
              type: string
          additionalProperties: false
    vcloud_KeystoreUploadSocketType:
      title: vcloud_KeystoreUploadSocketType
      description: Upload socket for keystore.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadSocketType'
        - type: object
          additionalProperties: false
    vcloud_SspiKeytabUpdateParamsType:
      title: vcloud_SspiKeytabUpdateParamsType
      description: Parameters for SSPI keytab update.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadParamsType'
        - type: object
          properties:
            SspiServiceProviderName:
              description: Service provider name for SSPI.
              type: string
          required:
            - SspiServiceProviderName
          additionalProperties: false
    vcloud_SspiKeytabUploadSocketType:
      title: vcloud_SspiKeytabUploadSocketType
      description: Upload socket for SSPI keytab.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadSocketType'
        - type: object
          additionalProperties: false
    vcloud_TrustStoreUpdateParamsType:
      title: vcloud_TrustStoreUpdateParamsType
      description: Parameters for updating the truststore.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadParamsType'
        - type: object
          properties:
            password:
              description: Password for the truststore.
              type: string
          additionalProperties: false
    vcloud_TrustStoreUploadSocketType:
      title: vcloud_TrustStoreUploadSocketType
      description: Upload socket for the truststore.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadSocketType'
        - type: object
          additionalProperties: false
    vcloud_UserType:
      title: vcloud_UserType
      description: Represents a local or imported user.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            fullName:
              description: Full name of the user.
              type: string
            emailAddress:
              description: Email address of the user.
              type: string
            telephone:
              description: Telephone number of the user.
              type: string
            isEnabled:
              description: True if the user is enabled and can log in.
              type: boolean
            isLocked:
              description: True if the user account has been locked due to too many
                invalid login attempts. A locked user account can be re\-enabled by
                updating the user with this flag set to false. Only the system can
                set the value to true.
              type: boolean
            iM:
              description: User's instant messaging address.
              type: string
            nameInSource:
              description: User name as retrieved from, and in the encoding used by,
                the specified identity provider.
              type: string
            isAlertEnabled:
              deprecated: true
              description: This field is unused and is deprecated. (True if alerts
                are enabled for the user.)
              type: boolean
            alertEmailPrefix:
              deprecated: true
              description: This field is unused and is deprecated. (String to prepend
                to alert message Subject line.)
              type: string
            alertEmail:
              deprecated: true
              description: This field is unused and is deprecated. (True if this user
                should get alert email.)
              type: string
            isExternal:
              description: On creation, specifies whether this user should be imported
                from the organization's LDAP service or created locally. Ignored if
                ProviderType is SAML or OAUTH. On retrieval, indicates whether the
                user is local or imported.
              type: boolean
            providerType:
              description: "Identity provider type for this this user. One of:  \n\
                **INTEGRATED** (The user is created locally or imported from LDAP.)\
                \  \n**SAML** (The user is imported from a SAML identity provider.)\
                \  \n**OAUTH** (The user is imported from an OAUTH identity provider.)\
                \  \n If missing or empty the default value is **INTEGRATED**."
              type: string
            isDefaultCached:
              deprecated: true
              description: This field is unused and is deprecated. (True if this user
                is cached by default.)
              type: boolean
            isGroupRole:
              description: True if this user has a group role.
              type: boolean
            storedVmQuota:
              description: Quota of vApps that this user can store. A value of 0 specifies
                an unlimited quota.
              type: integer
              format: int32
            deployedVmQuota:
              description: Quota of vApps that this user can deploy concurrently.
                A value of 0 specifies an unlimited quota.
              type: integer
              format: int32
            role:
              description: A reference to the user's role. When you are creating a
                User, the request body must contain exactly one Role element. If the
                Role element is empty when retrieved,the user inherits a role from
                the group.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            password:
              description: The user's password. This value is never returned by GET.
                It is inspected on create and modify. On modify, the absence of this
                element indicates that the password should not be changed.
              type: string
            groupReferences:
              description: Container for references to groups of which this user is
                a member.
              allOf:
                - $ref: '#/components/schemas/vcloud_GroupsListType'
          additionalProperties: false
    vcloud_GroupType:
      title: vcloud_GroupType
      description: Represents a group in this organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            nameInSource:
              description: Group name as retrieved from, and in the encoding used
                by, the specified identity provider.
              type: string
            usersList:
              description: Container for references to users in the group.
              allOf:
                - $ref: '#/components/schemas/vcloud_UsersListType'
            providerType:
              description: "Identity provider type for this this group. One of:  \n\
                **INTEGRATED** (The group is imported from LDAP.)  \n**SAML** (The\
                \ group is imported from a SAML identity provider.)  \n If missing\
                \ or empty the default value is **INTEGRATED**."
              type: string
            role:
              description: The default role for users in this group.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_UsersListType:
      title: vcloud_UsersListType
      description: Container for references to users.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            userReference:
              description: A reference to a user.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_GroupsListType:
      title: vcloud_GroupsListType
      description: Container for references to groups.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            groupReference:
              description: A reference to a group.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_RightType:
      title: vcloud_RightType
      description: Represents a right.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            category:
              description: Assigns a category to the right.
              type: string
            bundleKey:
              description: Key used for name localization.
              type: string
            serviceNamespace:
              description: Namespace of the external service that created the right.
              type: string
          required:
            - category
          additionalProperties: false
    vcloud_RightReferencesType:
      title: vcloud_RightReferencesType
      description: Container for references to rights.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            rightReference:
              description: A reference to a right.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_RoleType:
      title: vcloud_RoleType
      description: A named collection of rights.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            rightReferences:
              description: Container for references to the rights assigned to this
                role.
              allOf:
                - $ref: '#/components/schemas/vcloud_RightReferencesType'
          additionalProperties: false
    vcloud_RoleReferencesType:
      title: vcloud_RoleReferencesType
      description: Container for references to roles.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            roleReference:
              description: A reference to a role.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_OrganizationReferenceType:
      title: vcloud_OrganizationReferenceType
      description: Represents a reference to an organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ReferenceType'
        - type: object
          additionalProperties: false
    vcloud_OrganizationReferencesType:
      title: vcloud_OrganizationReferencesType
      description: Represents the admin view of this cloud.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            organizationReference:
              description: A reference to an AdminOrgType object.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_OrganizationReferenceType'
          additionalProperties: false
    vcloud_ProviderVdcReferencesType:
      title: vcloud_ProviderVdcReferencesType
      description: Container for references to Provider vDCs.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            providerVdcReference:
              description: A reference to a Provider vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_VCloudType:
      title: vcloud_VCloudType
      description: Represents the admin view of a cloud.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            organizationReferences:
              description: Container for references to AdminOrg objects in the system.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrganizationReferencesType'
            providerVdcReferences:
              description: A container for references to ProviderVdc objects in the
                system.
              allOf:
                - $ref: '#/components/schemas/vcloud_ProviderVdcReferencesType'
            rightReferences:
              description: A container for references to Right objects in the system.
              allOf:
                - $ref: '#/components/schemas/vcloud_RightReferencesType'
            roleReferences:
              description: A container for references to Role objects in the system.
              allOf:
                - $ref: '#/components/schemas/vcloud_RoleReferencesType'
            networks:
              description: A container for references to ExternalNetwork objects in
                the system.
              allOf:
                - $ref: '#/components/schemas/vcloud_NetworksType'
          additionalProperties: false
    vcloud_AdminOrgType:
      title: vcloud_AdminOrgType
      description: Represents the admin view of an organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_OrgType'
        - type: object
          properties:
            settings:
              description: Settings for this organization. Establishes quotas, limits,
                and policies. Specifies how the organization connects to LDAP and
                email services.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgSettingsType'
            users:
              description: Container for references to users in this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_UsersListType'
            groups:
              description: Container for references to groups in this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_GroupsListType'
            catalogs:
              description: Container for references to catalogs in this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_CatalogsListType'
            vdcs:
              description: Container for references to vDCs in this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_VdcsType'
            vdcTemplates:
              description: Container for references to VDC templates in this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_VdcTemplatesType'
            networks:
              description: Container for references to organization vDC networks in
                this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_NetworksType'
            orgAssociations:
              description: Container for the references to other organizations whose
                content will be listed with this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgAssociationsType'
            rightReferences:
              description: A container for references to Right objects in the organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrganizationRightsType'
            roleReferences:
              description: A container for references to Role objects in the organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrganizationRolesType'
            roleTemplateReferences:
              description: A container for references to Role objects in the organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_RoleReferencesType'
          required:
            - settings
          additionalProperties: false
    vcloud_OrgVAppTemplateLeaseSettingsType:
      title: vcloud_OrgVAppTemplateLeaseSettingsType
      description: Represents default vAppTemplate lease policies for this organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            deleteOnStorageLeaseExpiration:
              description: Delete on storage lease expiration. Default is false. If
                true, storage for a vAppTemplate is deleted when the vAppTemplate
                lease expires. If false, the storage is flagged for deletion, but
                not deleted.
              type: boolean
            storageLeaseSeconds:
              description: Storage lease in seconds
              type: integer
              format: int32
          additionalProperties: false
    vcloud_VdcTemplatesType:
      title: vcloud_VdcTemplatesType
      description: Container for VdcTemplateType
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vdcTemplate:
              description: A reference to a VDC template object.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VdcTemplateType'
          additionalProperties: false
    vcloud_VdcTemplateType:
      title: vcloud_VdcTemplateType
      description: A reference to a VDC template.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            vdcTemplateSpecification:
              description: A reference to the specification for a VDC template object.
              allOf:
                - $ref: '#/components/schemas/vcloud_VdcTemplateSpecificationType'
          required:
            - vdcTemplateSpecification
          additionalProperties: false
    vcloud_VdcTemplateListType:
      title: vcloud_VdcTemplateListType
      description: Represents a list of VDC templates.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vdcTemplate:
              description: Reference to a VDC template.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_VdcSpecificationGroup:
      title: vcloud_VdcSpecificationGroup
      type: object
      properties:
        nicQuota:
          description: Maximum number of virtual NICs allowed in this vDC. Defaults
            to 0, which specifies an unlimited number.
          type: integer
          format: int32
        vmQuota:
          description: The quota of VMs that can be created in this vDC. Includes
            VMs in both vApps and vApp templates, deployed, or otherwise. Defaults
            to 0, which specifies an unlimited number.
          type: integer
          format: int32
        provisionedNetworkQuota:
          description: Maximum number of network objects that can be deployed in this
            VDC. Defaults to 0, which means no networks can be deployed.
          type: integer
          format: int32
        gatewayConfiguration:
          description: Defines a gateway and NAT Routed organization VDC network to
            be created.
          allOf:
            - $ref: '#/components/schemas/vcloud_VdcTemplateSpecificationGatewayConfigurationType'
        storageProfile:
          description: A set of name of Storage Profiles, with corresponding limit
            value, that all Provider VDCs must have, and that are selected at the
            time of VDC Template instantiation.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_VdcStorageProfileType'
      required:
        - nicQuota
        - provisionedNetworkQuota
        - storageProfile
      additionalProperties: false
    vcloud_AllocationPoolVdcSpecificationGroup:
      title: vcloud_AllocationPoolVdcSpecificationGroup
      type: object
      properties:
        cpuAllocationMhz:
          description: CPU allocation in Mhz
          type: integer
          format: int64
        memoryAllocationMB:
          description: Memory allocation in MB
          type: integer
          format: int64
        cpuGuaranteedPercentage:
          description: Percentage of allocated CPU resources guaranteed to vApps deployed
            in this vDC. For example, if this value is 75, then 75% of allocated resources
            are guaranteed. Required when AllocationModel is AllocationVApp or AllocationPool.
            Value defaults to 100 if the element is empty.
          type: integer
          format: int64
        vCpuInMhz:
          description: Specifies the clock frequency, in Megahertz, for any virtual
            CPU that is allocated to a VM. A VM with 2 vCPUs will consume twice as
            much of this value. Ignored for ReservationPool. Required when AllocationModel
            is AllocationVApp or AllocationPool, and may not be less than 256 MHz.
            Defaults to 1000 MHz if the element is empty or missing.
          type: integer
          format: int64
        memoryGuaranteedPercentage:
          description: Percentage of allocated memory resources guaranteed to vApps
            deployed in this vDC. For example, if this value is 75, then 75% of allocated
            resources are guaranteed. Required when AllocationModel is AllocationVApp
            or AllocationPool. Value defaults to 100 if the element is empty.
          type: integer
          format: int64
      additionalProperties: false
    vcloud_AllocationVAppVdcSpecificationGroup:
      title: vcloud_AllocationVAppVdcSpecificationGroup
      type: object
      properties:
        cpuAllocationMhz:
          description: CPU allocation in Mhz
          type: integer
          format: int64
        cpuLimitMhzPerVcpu:
          description: CPU allocation in Mhz
          type: integer
          format: int64
        memoryAllocationMB:
          description: Memory allocation in MB
          type: integer
          format: int64
        cpuGuaranteedPercentage:
          description: Percentage of allocated CPU resources guaranteed to vApps deployed
            in this vDC. For example, if this value is 75, then 75% of allocated resources
            are guaranteed. Required when AllocationModel is AllocationVApp or AllocationPool.
            Value defaults to 100 if the element is empty.
          type: integer
          format: int64
        memoryGuaranteedPercentage:
          description: Percentage of allocated memory resources guaranteed to vApps
            deployed in this vDC. For example, if this value is 75, then 75% of allocated
            resources are guaranteed. Required when AllocationModel is AllocationVApp
            or AllocationPool. Value defaults to 100 if the element is empty.
          type: integer
          format: int64
      additionalProperties: false
    vcloud_ReservationPoolVdcSpecificationGroup:
      title: vcloud_ReservationPoolVdcSpecificationGroup
      type: object
      properties:
        cpuAllocationMhz:
          description: CPU allocation in Mhz
          type: integer
          format: int64
        memoryAllocationMB:
          description: Memory allocation in MB
          type: integer
          format: int64
      additionalProperties: false
    vcloud_VdcTemplateSpecificationType:
      title: vcloud_VdcTemplateSpecificationType
      allOf:
        - $ref: '#/components/schemas/vcloud_VdcSpecificationGroup'
        - type: object
          additionalProperties: false
    vcloud_AllocationPoolVdcTemplateSpecificationType:
      title: vcloud_AllocationPoolVdcTemplateSpecificationType
      description: Specification for a VDC template using the AllocationPool allocation
        model.
      allOf:
        - $ref: '#/components/schemas/vcloud_VdcTemplateSpecificationType'
        - $ref: '#/components/schemas/vcloud_AllocationPoolVdcSpecificationGroup'
        - type: object
          additionalProperties: false
    vcloud_AllocationVappVdcTemplateSpecificationType:
      title: vcloud_AllocationVappVdcTemplateSpecificationType
      description: Specification for a VDC template using the AllocationVApp allocation
        model.
      allOf:
        - $ref: '#/components/schemas/vcloud_VdcTemplateSpecificationType'
        - $ref: '#/components/schemas/vcloud_AllocationVAppVdcSpecificationGroup'
        - type: object
          additionalProperties: false
    vcloud_ReservationPoolVdcTemplateSpecificationType:
      title: vcloud_ReservationPoolVdcTemplateSpecificationType
      description: Specification for a VDC template using the ReservationPool allocation
        model.
      allOf:
        - $ref: '#/components/schemas/vcloud_VdcTemplateSpecificationType'
        - $ref: '#/components/schemas/vcloud_ReservationPoolVdcSpecificationGroup'
        - type: object
          additionalProperties: false
    vcloud_VdcTemplateSpecificationGatewayConfigurationType:
      title: vcloud_VdcTemplateSpecificationGatewayConfigurationType
      description: Defines a gateway and NAT Routed organization VDC network to be
        created.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            gateway:
              description: 'EdgeGateway configuration for the VDC created by this
                template. The following restrictions apply:

                * You may not specify a BackwardCompatibilityMode or an EdgeGatewayServiceConfiguration.

                * The GatewayInterfaces element must contain exactly one GatewayInterface.
                That GatewayInterface must have an InterfaceType of uplink and must
                not contain a SubnetParticipation element.


                '
              allOf:
                - $ref: '#/components/schemas/vcloud_GatewayType'
            network:
              description: 'Org VDC network configuration created by this template.
                The following restrictions apply:

                * You may not specify a BackwardCompatibilityMode, EdgeGatewayServiceConfiguration,
                or NetworkFeatures.

                * The NetworkConfiguration must specify a FenceMode of natRouted.


                '
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgVdcNetworkType'
          required:
            - gateway
            - network
          additionalProperties: false
    vcloud_InstantiateVdcTemplateParamsType:
      title: vcloud_InstantiateVdcTemplateParamsType
      description: A basic type used to pass arguments to the instantiate VDC template
        operation, this provides a name and optional description for a VDC instantiated
        from a template.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: Typically used to name or identify the subject of the request.
                For example, the name of the object being created or modified.
              type: string
            source:
              description: A reference to a source object, which must be a VDC template.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            description:
              description: Optional description.
              type: string
          required:
            - source
          additionalProperties: false
    vcloud_NetworksType:
      title: vcloud_NetworksType
      description: Container for references to ExternalNetwork objects.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            network:
              description: A reference to an ExternalNetwork object.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_CatalogsListType:
      title: vcloud_CatalogsListType
      description: Container for references to catalogs.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            catalogReference:
              description: A reference to a catalog.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_ExternalNetworkType:
      title: vcloud_ExternalNetworkType
      description: Represents the admin view of an external network.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkType'
        - type: object
          properties:
            providerInfo:
              description: Shows vCenter server and port group moref used for external
                network.
              type: string
            networkBackingInfo:
              description: List of network backings (vCenter server and port group
                moref) for this network.
              allOf:
                - $ref: '#/components/schemas/vcloud_NetworkBackingInfoType'
          additionalProperties: false
    vcloud_NetworkBackingInfoType:
      title: vcloud_NetworkBackingInfoType
      type: array
      items:
        type: string
    vcloud_OrgSettingsType:
      title: vcloud_OrgSettingsType
      description: Container for this organization's settings.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            orgGeneralSettings:
              description: Represents general settings for this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgGeneralSettingsType'
            vAppLeaseSettings:
              description: Represents default lease durations and related policies
                for this organization. Runtime lease default is 7 days. Storage lease
                default is 30 days.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgLeaseSettingsType'
            vAppTemplateLeaseSettings:
              description: Represents default vAppTemplate lease policies for this
                organization. Storage lease default is 30 days.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgVAppTemplateLeaseSettingsType'
            orgLdapSettings:
              description: Represents the hostname and connection details for this
                organization's primary LDAP service.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgLdapSettingsType'
            orgEmailSettings:
              description: Represents the email settings for this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgEmailSettingsType'
            orgPasswordPolicySettings:
              description: Represents the password policy settings for this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgPasswordPolicySettingsType'
            orgOperationLimitsSettings:
              description: Represents operation limits settings for this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgOperationLimitsSettingsType'
            orgFederationSettings:
              description: Represents federated identity settings for this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgFederationSettingsType'
            orgOAuthSettings:
              description: Contains OAuth identity provider settings for this organization.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgOAuthSettingsType'
          additionalProperties: false
    vcloud_OrgGeneralSettingsType:
      title: vcloud_OrgGeneralSettingsType
      description: Represents general settings for an organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            canPublishCatalogs:
              description: True if this organization is allowed to share catalogs.
              type: boolean
            canPublishExternally:
              description: True if this organization allows creation of catalog feeds
                for consumption by external organizations.
              type: boolean
            canSubscribe:
              description: True if this organization allows subscription to external
                catalog feeds.
              type: boolean
            deployedVMQuota:
              description: Maximum number of virtual machines that can be deployed
                simultaneously by a member of this organization.
              type: integer
              format: int32
            storedVmQuota:
              description: Maximum number of virtual machines in vApps or vApp templates
                that can be stored in an undeployed state by a member of this organization.
              type: integer
              format: int32
            useServerBootSequence:
              description: This value is ignored.
              type: boolean
            delayAfterPowerOnSeconds:
              description: Specifies this organization's default for virtual machine
                boot delay after power on.
              type: integer
              format: int32
            vdcQuota:
              description: Maximum number of VDCs allowed in this organization. A
                value of \-1 means there is no maximum. A value of 0 means this organization
                cannot create any VDCs.
              type: integer
              format: int32
            vmDiscoveryEnabled:
              description: True if discovery of vCenter VMs is enabled for resource
                pools backing this vDC.
              type: boolean
          additionalProperties: false
    vcloud_OrgLeaseSettingsType:
      title: vcloud_OrgLeaseSettingsType
      description: Represents default lease durations and policies for this organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            deleteOnStorageLeaseExpiration:
              description: If true, storage for a vApp is deleted when the vApp's
                lease expires. If false, the storage is flagged for deletion, but
                not deleted.
              type: boolean
            deploymentLeaseSeconds:
              description: Default duration of a vApp deployment lease, in seconds.
              type: integer
              format: int32
            storageLeaseSeconds:
              description: Default duration of a storage lease, in seconds.
              type: integer
              format: int32
            powerOffOnRuntimeLeaseExpiration:
              description: When true, vApps are powered off when the runtime lease
                expires. When false or missing, vApps are suspended when the runtime
                lease expires.
              type: boolean
          additionalProperties: false
    vcloud_OrgFederationSettingsType:
      title: vcloud_OrgFederationSettingsType
      description: Represents federation settings for identity federation.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            sAMLMetadata:
              description: XML\-encoded SAML 2.0 metadata from this organization's
                identity provider. If empty, this organization does not support SAML.
                Download this content over a secure connection from a trusted source
                (typically your identity provider's SAML metadata URL).
              type: string
            enabled:
              description: This boolean value indicates whether the Identity Provider
                for the organization is enabled or disabled.
              type: boolean
            certificateExpiration:
              description: The expiration time of this org's certificate.
              type: string
              format: date-time
            samlSPEntityId:
              description: Service Provider Entity ID to be used when generating SP
                Metadata
              type: string
              format: uri
            roleAttributeName:
              description: The name of the SAML attribute that returns the identifiers
                of all the groups of which the user is a member.
              type: string
            samlSPKeyAndCertificateChain:
              description: Container for an organization's PEM\-encoded private key
                and certificate chain. The private key and the public key from the
                leaf certificate are used during SAML message processing. Not returned
                on GET
              allOf:
                - $ref: '#/components/schemas/vcloud_SamlSPKeyAndCertificateChainType'
          required:
            - samlSPEntityId
          additionalProperties: false
    vcloud_SamlSPKeyAndCertificateChainType:
      title: vcloud_SamlSPKeyAndCertificateChainType
      description: Container for an organization's PEM\-encoded private key and public
        key certificate chain used during SAML\-token processing.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            key:
              description: PEM\-encoded private key body in PKCS#8 format. Key is
                used during SAML operations for this Org.
              type: string
            certificateChain:
              description: PEM\-formatted X509 certificate chain. The public key from
                the leaf certificate is used during SAML operations for this Org.
              type: string
          required:
            - key
            - certificateChain
          additionalProperties: false
    vcloud_OrgOAuthSettingsType:
      title: vcloud_OrgOAuthSettingsType
      description: Contains OAuth identity provider settings for an organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            issuerId:
              description: Issuer Id for the OAuth Identity Provider.
              type: string
            oAuthKeyConfigurations:
              description: A list of OAuth Key configurations.
              allOf:
                - $ref: '#/components/schemas/vcloud_OAuthKeyConfigurationsListType'
            enabled:
              description: True if the OAuth Identity Provider for this organization
                is enabled. Unset or empty defaults to true.
              type: boolean
          additionalProperties: false
    vcloud_OAuthKeyConfigurationsListType:
      title: vcloud_OAuthKeyConfigurationsListType
      description: Contains a list of OAuth Key configurations.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            oAuthKeyConfiguration:
              description: OAuth key configuration.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_OAuthKeyConfigurationType'
          additionalProperties: false
    vcloud_OAuthKeyConfigurationType:
      title: vcloud_OAuthKeyConfigurationType
      description: OAuth Key Configuration
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            keyId:
              description: Identifier for the key used by the Identity Provider. This
                key id is expected to be present in the header portion of OAuth tokens
                issued by by the Identity provider.
              type: string
            algorithm:
              description: Identifies the cryptographic algorithm family of the key.
                Supported values are RSA and EC for asymmetric keys.
              type: string
            key:
              description: PEM formatted key body. Key is used during validation of
                OAuth tokens for this Org.
              type: string
            expirationDate:
              description: Expiration date for this key. If specified, tokens signed
                with this key should be considered invalid after this time.
              type: string
              format: date-time
          required:
            - algorithm
            - key
            - expirationDate
          additionalProperties: false
    vcloud_OrgLdapSettingsType:
      title: vcloud_OrgLdapSettingsType
      description: Represents LDAP connection settings for an organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            orgLdapMode:
              description: "Defines whether this organization is connected to an LDAP\
                \ service, and whether it uses the system default LDAP service or\
                \ a custom LDAP service. One of:  \n**NONE** (This organization has\
                \ no LDAP connection.)  \n**SYSTEM** (This organization uses the system\
                \ default LDAP service.)  \n**CUSTOM** (This organization uses the\
                \ LDAP service specified in CustomOrgLdapSettings.)"
              type: string
            customUsersOu:
              description: If OrgLdapMode is SYSTEM, specifies an LDAP attribute=value
                pair to use for OU (organizational unit).
              type: string
            customOrgLdapSettings:
              description: If OrgLdapMode is CUSTOM, this element defines the hostname
                and connection details for the organization's LDAP service.
              allOf:
                - $ref: '#/components/schemas/vcloud_CustomOrgLdapSettingsType'
          additionalProperties: false
    vcloud_CustomOrgLdapSettingsType:
      title: vcloud_CustomOrgLdapSettingsType
      description: Represents connection details for an organization's LDAP service.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            hostName:
              description: Hostname of the LDAP server.
              type: string
            port:
              description: Port at which to connect to the LDAP service.
              type: integer
              format: int32
            isSsl:
              description: True if the LDAP service requires an SSL connection.
              type: boolean
            isSslAcceptAll:
              description: True if the LDAP service accepts all SSL certificates.
              type: boolean
            realm:
              description: LDAP realm to use when looking up users.
              type: string
            searchBase:
              description: LDAP search base.
              type: string
            userName:
              description: 'Username to use when logging in to LDAP, specified using
                LDAP attribute=value pairs (for example: cn="ldap\-admin", c="example",
                dc="com").'
              type: string
            password:
              description: Password for the user identified by UserName. This value
                is never returned by GET. It is inspected on create and modify. On
                modify, the absence of this element indicates that the password should
                not be changed.
              type: string
            authenticationMechanism:
              description: "One of:  \n**SIMPLE** (Simple authentication as specified\
                \ in RFC 2251 and RFC 2829.)  \n**KERBEROS** (Kerberos authentication)\
                \  \n**MD5DIGEST** (Digest MD5 authentication as specified in RFC\
                \ 2831.)   \n**NTLM** (Windows NTLM authentication.)"
              type: string
            groupSearchBase:
              description: LDAP group search base.
              type: string
            isGroupSearchBaseEnabled:
              description: True if the group search base is enabled.
              type: boolean
            connectorType:
              description: "Defines LDAP service implementation type. One of:  \n\
                **ACTIVE\\_DIRECTORY** (LDAP service provided by Microsoft Active\
                \ Directory.)  \n**OPEN\\_LDAP** (LDAP service provided by Open LDAP)."
              type: string
            userAttributes:
              description: Defines how LDAP attributes are used when importing a user.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgLdapUserAttributesType'
            groupAttributes:
              description: Defines how LDAP attributes are used when importing a group.
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgLdapGroupAttributesType'
            useExternalKerberos:
              description: Set to true to use an external Kerberos service.
              type: boolean
          required:
            - port
            - authenticationMechanism
            - isGroupSearchBaseEnabled
            - connectorType
            - userAttributes
            - groupAttributes
          additionalProperties: false
    vcloud_OrgLdapGroupAttributesType:
      title: vcloud_OrgLdapGroupAttributesType
      description: Defines how a group is imported from LDAP.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            objectClass:
              description: LDAP objectClass of which imported groups are members.
                For example, group.
              type: string
            objectIdentifier:
              description: LDAP attribute to use as the unique identifier for a group.
                For example, objectGuid.
              type: string
            groupName:
              description: LDAP attribute to use for the group name. For example,
                cn.
              type: string
            membership:
              description: LDAP attribute to use when getting the members of a group.
                For example, member.
              type: string
            membershipIdentifier:
              description: LDAP attribute that identifies a group as a member of another
                group. For example, dn.
              type: string
            backLinkIdentifier:
              description: LDAP group attribute used to identify a group member.
              type: string
          required:
            - objectClass
            - objectIdentifier
            - groupName
            - membership
            - membershipIdentifier
          additionalProperties: false
    vcloud_OrgLdapUserAttributesType:
      title: vcloud_OrgLdapUserAttributesType
      description: Defines how LDAP attributes are used when importing a user.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            objectClass:
              description: LDAP objectClass of which imported users are members. For
                example, user or person
              type: string
            objectIdentifier:
              description: LDAP attribute to use as the unique identifier for a user.
                For example, objectGuid.
              type: string
            userName:
              description: LDAP attribute to use when looking up a user name to import.
                For example, userPrincipalName or samAccountName.
              type: string
            email:
              description: LDAP attribute to use for the user's email address. For
                example, mail.
              type: string
            fullName:
              description: LDAP attribute to use for the user's full name. For example,
                displayName.
              type: string
            givenName:
              description: LDAP attribute to use for the user's given name. For example,
                givenName.
              type: string
            surname:
              description: LDAP attribute to use for the user's surname. For example,
                sn.
              type: string
            telephone:
              description: LDAP attribute to use for the user's telephone number.
                For example, telephoneNumber.
              type: string
            groupMembershipIdentifier:
              description: LDAP attribute that identifies a user as a member of a
                group. For example, dn.
              type: string
            groupBackLinkIdentifier:
              description: LDAP attribute that returns the identifiers of all the
                groups of which the user is a member.
              type: string
          required:
            - objectClass
            - objectIdentifier
            - userName
            - email
            - fullName
            - givenName
            - surname
            - telephone
            - groupMembershipIdentifier
          additionalProperties: false
    vcloud_OrgEmailSettingsType:
      title: vcloud_OrgEmailSettingsType
      description: Represents the email settings for an organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            isDefaultSmtpServer:
              description: True if this organization uses the system default SMTP
                server.
              type: boolean
            isDefaultOrgEmail:
              description: True if this organization uses the system default email
                properties.
              type: boolean
            fromEmailAddress:
              description: If IsDefaultOrgEmail is false, specifies the sender's email
                address that appears in email notifications.
              type: string
            defaultSubjectPrefix:
              description: If IsDefaultOrgEmail is false, specifies a prefix for system
                email notifications.
              type: string
            isAlertEmailToAllAdmins:
              description: True if system email notifications should be sent to all
                users who have the Administrator role.
              type: boolean
            alertEmailTo:
              description: If IsAlertEmailToAllAdmins is false, specifies a list of
                users to receive system email notifications.
              type: array
              items:
                type: string
            smtpServerSettings:
              description: If IsDefaultSmtpServer is false, specifies connection details
                for an SMTP server to use.
              allOf:
                - $ref: '#/components/schemas/vcloud_SmtpServerSettingsType'
          required:
            - isDefaultSmtpServer
            - isDefaultOrgEmail
            - fromEmailAddress
            - defaultSubjectPrefix
            - isAlertEmailToAllAdmins
          additionalProperties: false
    vcloud_SmtpServerSettingsType:
      title: vcloud_SmtpServerSettingsType
      description: Defines connection details for the organization s SMTP server.
        If IsDefaultSmtpServer (in OrgEmailSettings) is false, the SmtpServerSettings
        element is taken into account.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isUseAuthentication:
              description: True if the SMTP server requires authentication.
              type: boolean
            host:
              description: Hostname of the SMTP server.
              type: string
            port:
              description: Port number of the SMTP server.
              type: integer
              format: int32
            username:
              description: Username to use when logging in to the SMTP service. (Required
                if IsUseAuthentication is True).
              type: string
            password:
              description: Password for the user identified by Username. This value
                is never returned by GET. It is inspected on create and modify. On
                modify, the absence of this element indicates that the password should
                not be changed. Required if IsUseAuthentication is true.
              type: string
            smtpSecureMode:
              description: "Security protocol to use when connecting to the SMTP server.\
                \ One of:  \n startTls \\-\\- Use the STARTTLS protocol  \n ssl \\\
                -\\- \\-Use the SSL/TLS protocol  \n none \\-\\- Do not use any security\
                \ protocol"
              allOf:
                - $ref: '#/components/schemas/vcloud_SmtpSecureModeType'
            sslTrustStore:
              description: Custom truststore to use to trust peer certificates when
                establishing a secure connection using SSL/STARTTLS (when enabled).
              type: string
          required:
            - isUseAuthentication
            - host
            - username
          additionalProperties: false
    vcloud_OrgPasswordPolicySettingsType:
      title: vcloud_OrgPasswordPolicySettingsType
      description: Represents password policy settings for this organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            accountLockoutEnabled:
              description: Set to true to enable account lockout for logins to this
                organization.
              type: boolean
            invalidLoginsBeforeLockout:
              description: Number of invalid login attempts that will trigger account
                lockout.
              type: integer
              format: int32
            accountLockoutIntervalMinutes:
              description: Number of minutes an account that is locked out will remain
                locked.
              type: integer
              format: int32
          required:
            - accountLockoutEnabled
            - invalidLoginsBeforeLockout
            - accountLockoutIntervalMinutes
          additionalProperties: false
    vcloud_AdminCatalogType:
      title: vcloud_AdminCatalogType
      description: Represents the admin view of a catalog.
      allOf:
        - $ref: '#/components/schemas/vcloud_CatalogType'
        - type: object
          properties:
            catalogStorageProfiles:
              description: Container for VdcStorageProfile elements that reference
                storage profiles used by this catalog.
              allOf:
                - $ref: '#/components/schemas/vcloud_CatalogStorageProfilesType'
            externalCatalogSubscriptionParams:
              description: Configuration parameters for a catalog that has an external
                subscription.
              allOf:
                - $ref: '#/components/schemas/vcloud_ExternalCatalogSubscriptionParamsType'
            publishExternalCatalogParams:
              description: Configuration parameters for a catalog that is published
                externally.
              allOf:
                - $ref: '#/components/schemas/vcloud_PublishExternalCatalogParamsType'
          additionalProperties: false
    vcloud_OrgsType:
      title: vcloud_OrgsType
      description: Represents a list of organizations.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            org:
              description: Reference to an organization.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_CatalogStorageProfilesType:
      title: vcloud_CatalogStorageProfilesType
      description: Container for VdcStorageProfile elements that reference storage
        profiles used by a catalog.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            vdcStorageProfile:
              description: A reference to a VDC storage profile.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - vdcStorageProfile
          additionalProperties: false
    vcloud_ExternalCatalogSubscriptionParamsType:
      title: vcloud_ExternalCatalogSubscriptionParamsType
      description: Configuration parameters for a catalog that has an external subscription.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            subscribeToExternalFeeds:
              description: True enables the external subscription configured by these
                parameters.
              type: boolean
            location:
              description: Endpoint URL to subscribe to.
              type: string
            password:
              description: Password required by the endpoint.
              type: string
            expectedSslThumbprint:
              description: Expected SSL thumbprint of the endpoint.
              type: string
            localCopy:
              description: If true, synchronization creates a local copy of all items.
                Defaults to false, which defers creation of the local copy until the
                item is required by an operation such as instantiation.
              type: boolean
          additionalProperties: false
    vcloud_PublishExternalCatalogParamsType:
      title: vcloud_PublishExternalCatalogParamsType
      description: Configuration parameters for a catalog that is published externally.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isPublishedExternally:
              description: True enables external publication as configured by these
                parameters.
              type: boolean
            catalogPublishedUrl:
              description: Read\-only endpoint URL supplied by the server. External
                subscribers can connect to the catalog at this URL.
              type: string
            password:
              description: Password required when connecting to the endpoint.
              type: string
            isCacheEnabled:
              description: True enables content caching for this catalog. All items
                in the catalog are created and stored in transfer storage. If false,
                items are not placed in transfer storage until they are requested
                by a subscriber.
              type: boolean
            preserveIdentityInfoFlag:
              description: True includes BIOS UUIDs and MAC addresses in the downloaded
                OVF package. If false, those information will be excluded.
              type: boolean
          additionalProperties: false
    vcloud_OrgGuestPersonalizationSettingsType:
      title: vcloud_OrgGuestPersonalizationSettingsType
      description: Represents default guest personalization settings for an organization.
        These values are applied during guest customization of virtual machines in
        this organization if their GuestCustomizationSection specifies UseOrgSettings.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            domainUsername:
              description: Username of an administrator for the Windows domain specified
                in DomainName.
              type: string
            domainPassword:
              description: Password for the user identified by DomainUsername.
              type: string
            domainName:
              description: Name of the domain for which DomainUsername has join rights
              type: string
            allowDomainSettings:
              description: True if virtual machines in this organization can join
                a Windows domain.
              type: boolean
            accountOrganizationalUnit:
              description: Value of the organizational unit (OU) LDAP attribute for
                DomainUsername.
              type: string
          additionalProperties: false
    vcloud_OrgOperationLimitsSettingsType:
      title: vcloud_OrgOperationLimitsSettingsType
      description: Represents operation limits settings for an organization. An operation
        is defined as resource\-intensive if it returns a Task object. The default
        value for all operation limits settings is 0, which specifies no limit.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            consolesPerVmLimit:
              description: Maximum number of remote consoles that can be open for
                a single VM.
              type: integer
              format: int32
            operationsPerUser:
              description: Maximum number of resource\-intensive operations requested
                by a user in this organization that can be simultaneously eligible
                to run. When a user makes a request that would cause this limit to
                be exceeded, the requested operation is queued but remains ineligible
                to run until enough of the user's eligible requests have been run
                to allow an ineligible request to become eligible.
              type: integer
              format: int32
            operationsPerOrg:
              description: Maximum number of resource\-intensive operations owned
                by this organization that can be simultaneously eligible to run. When
                an organization member makes a request that would cause this limit
                to be exceeded, the requested operation is queued but remains ineligible
                to run until enough of the organization's eligible requests have been
                run to allow an ineligible request to become eligible.
              type: integer
              format: int32
            queuedOperationsPerUser:
              description: Maximum number of resource\-intensive operations that a
                user in this organization can queue. When a user makes a request that
                would cause this limit to be exceeded, the request fails and returns
                HTTP status 400.
              type: integer
              format: int32
            queuedOperationsPerOrg:
              description: Maximum number of queued resource\-intensive operations
                allowed for all users in this organization. When an organization member
                makes a request that would cause this limit to be exceeded, the request
                fails and returns HTTP status 400.
              type: integer
              format: int32
          additionalProperties: false
    vcloud_OrganizationRightsType:
      title: vcloud_OrganizationRightsType
      description: Represents all the rights that have been granted to an organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            rightReference:
              description: A reference to a role.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_OrganizationRolesType:
      title: vcloud_OrganizationRolesType
      description: Represents all the roles available in an organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            roleReference:
              description: A reference to a role.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_NotificationType:
      title: vcloud-ext_NotificationType
      description: vCloud Director AMQP notification in XML format. This notification
        format has been deprecated in favor of a JSON format. It might be removed
        in a future release.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            type:
              description: The type of the notification. A string of the form com/vmware/vcloud/event/*object\-type*/*event\-type*.****
              type: string
            eventId:
              description: A unique identifier for the event.
              type: string
            link:
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LinkType'
            entityLink:
              description: Contains a reference to the entity associated with the
                notification.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_EntityLinkType'
            timestamp:
              description: Timestamp applied when the notification was posted.
              type: string
              format: date-time
            operationSuccess:
              description: True if the notification refers to a successful operation.
              type: boolean
          required:
            - type
            - eventId
            - timestamp
            - operationSuccess
          additionalProperties: false
    vcloud-ext_ObjectExtensionType:
      title: vcloud-ext_ObjectExtensionType
      description: Represents a registered object extension.
      allOf:
        - $ref: '#/components/schemas/vcloud_IdentifiableResourceType'
        - type: object
          properties:
            namespace:
              description: Extension service namespace. Must be unique among all registered
                services.
              type: string
            enabled:
              description: True if this extension service is enabled.
              type: boolean
            exchange:
              description: AMQP exchange that messages for this extension service
                are published to.
              type: string
            contentType:
              description: 'AMQP message body content type used. Supported values
                are: XML JSON Defaults to XML if none is specified.'
              type: string
            vendor:
              description: Extension service vendor name.
              type: string
          required:
            - namespace
            - enabled
            - exchange
            - vendor
          additionalProperties: false
    vcloud-ext_ObjectExtensionsType:
      title: vcloud-ext_ObjectExtensionsType
      description: The collection of registered object extensions.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            objectExtension:
              description: Represents a registered object extension.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_ObjectExtensionType'
          required:
            - objectExtension
          additionalProperties: false
    vcloud-ext_ExtensionServicesType:
      title: vcloud-ext_ExtensionServicesType
      description: List of references to registered extension services.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          additionalProperties: false
    vcloud-ext_AdminServiceType:
      title: vcloud-ext_AdminServiceType
      description: Represents an extension service.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            namespace:
              description: Extension service namespace. Must be unique among all registered
                services.
              type: string
            enabled:
              description: True if this extension service is enabled.
              type: boolean
            authorizationEnabled:
              description: True if this service participates in the vCloud API REST
                authorization framework for extension services.
              type: boolean
            routingKey:
              description: AMQP routing key for this extension service.
              type: string
            priority:
              description: Extension service priority. An integer between 0\-100.
                A value of 50 denotes a neutral priority.
              type: integer
              format: int32
            exchange:
              description: AMQP exchange that messages for this extension service
                are published to.
              type: string
            vendor:
              description: Extension service vendor name.
              type: string
            apiFilters:
              description: Container for API filters defined by an extension service.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_ApiFiltersType'
            serviceLinks:
              description: Container for values used to create links defined by an
                extension service.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_AdminServiceLinksType'
            apiDefinitions:
              description: Container for values used to specify an API defined by
                an extension service.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_AdminApiDefinitionsType'
            resourceClasses:
              description: Container for values that define extension service resource
                classes.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_ResourceClassesType'
          required:
            - namespace
            - routingKey
            - exchange
          additionalProperties: false
    vcloud-ext_ApiFilterType:
      title: vcloud-ext_ApiFilterType
      description: Represents an extension service API filter as a UrlPattern or a
        ResponseContentType.
      allOf:
        - $ref: '#/components/schemas/vcloud_IdentifiableResourceType'
        - type: object
          properties:
            urlPattern:
              description: Request URL pattern, written as a regular expression pattern
                recognized by java.util.regex.Pattern. Requests matching the pattern
                are sent to this extension service. Element content cannot exceed
                1024 characters. UrlPattern is mutually exclusive with ResponseContentType.
              type: string
            responseContentType:
              description: Response Content\-Type, expressed as a MIME Content\-Type
                string. Responses whose Content\-Type attribute has a value that matches
                this string are routed to the service. ResponseContentType is mutually
                exclusive with UrlPattern.
              type: string
          additionalProperties: false
    vcloud-ext_ApiFiltersType:
      title: vcloud-ext_ApiFiltersType
      description: Container for extension service API filters.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            apiFilter:
              description: Represents an extension service API filter.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_ApiFilterType'
          additionalProperties: false
    vcloud-ext_AdminApiDefinitionType:
      title: vcloud-ext_AdminApiDefinitionType
      description: Represents an extension service API definition.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            entryPoint:
              description: The URL to which a client can send requests to this extension
                service API. URL string must be <=255 characters. Can include the
                variable {baseUri}, which represents the vCloud Director REST API
                base URL.
              type: string
            namespace:
              description: The namespace of this external service API definition.
                Must be <=255 characters.
              type: string
            apiVendor:
              description: The name of the external service API vendor. Not required
                to be the same as the vendor of the external service this API definition
                is associated with. Must be <=255 characters.
              type: string
            supportedApiVersions:
              description: Supported extension service API versions.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VersionsType'
            files:
              description: List of files associated with this extension service API
                definition.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_AdminFileDescriptorsType'
          additionalProperties: false
    vcloud-ext_AdminApiDefinitionsType:
      title: vcloud-ext_AdminApiDefinitionsType
      description: Represents a list of extension service API definitions.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            apiDefinition:
              description: Represents a single extension service API definition.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_AdminApiDefinitionType'
          additionalProperties: false
    vcloud-ext_VersionsType:
      title: vcloud-ext_VersionsType
      description: Represents a list of extension service API versions.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            version:
              description: Represents a single extension service API version.
              type: array
              items:
                type: string
          additionalProperties: false
    vcloud-ext_AdminFileDescriptorType:
      title: vcloud-ext_AdminFileDescriptorType
      description: Represents an extension service API definition file.
      allOf:
        - $ref: '#/components/schemas/vcloud_IdentifiableResourceType'
        - type: object
          properties:
            description:
              description: Description of this extension service API definition file.
              type: string
            file:
              description: A reference to this extension service API definition file.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_AdminFileDescriptorsType:
      title: vcloud-ext_AdminFileDescriptorsType
      description: A list of extension service API definition file descriptors.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            fileDescriptor:
              description: Represents an extension service API definition file.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_AdminFileDescriptorType'
          additionalProperties: false
    vcloud-ext_AdminServiceLinkType:
      title: vcloud-ext_AdminServiceLinkType
      description: Represents a service link defined by an extension service.
      allOf:
        - $ref: '#/components/schemas/vcloud_IdentifiableResourceType'
        - type: object
          properties:
            linkHref:
              description: The value of href attribute of this service Link. Can be
                any URI, and can include the variables {baseUri} and {resourceId}.
                When constructing the href value of the Link, vCloud Director replaces
                {baseUri} with the vCloud Director REST API base URL, and replaces
                {resourceId} with the UUID portion of the id attribute value of the
                resource in which the Link is inserted. Must be <=255 characters.
              type: string
            mimeType:
              description: The value, specified as a MIME content type, of the type
                attribute of the Link. Must be <=255 characters.
              type: string
            rel:
              description: The value of the rel attribute of the Link. Must be <=255
                characters.
              type: string
            resourceType:
              description: The object type, specified as a MIME content type, of the
                object in which the Link appears. Must be <=255 characters.
              type: string
            resourceId:
              description: The id of the resource in which this Link appears. The
                resource must be of the type specified in ResourceType. If this element
                is missing or empty, the Link appears in all resources of the specified
                type. Must be <=255 characters.
              type: string
            externalResourceId:
              description: The id of an external resource managed by an extension.
                The value of this element will appear as the id attribute of the Link
                element. Must be <=255 characters.
              type: string
          required:
            - linkHref
            - mimeType
            - rel
            - resourceType
          additionalProperties: false
    vcloud-ext_AdminServiceLinksType:
      title: vcloud-ext_AdminServiceLinksType
      description: A list of service links for extension services.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            serviceLink:
              description: Represents a service link defined by an extension service.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_AdminServiceLinkType'
          additionalProperties: false
    vcloud-ext_BundleUploadParamsType:
      title: vcloud-ext_BundleUploadParamsType
      description: Parameters for initializing an upload session for an extension
        service localization bundle.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            fileSize:
              description: Size in bytes of the extension service localization bundle
                that will be uploaded.
              type: integer
              format: int64
            serviceNamespace:
              description: The service namespace to which this extension service localization
                bundle applies.
              type: string
          required:
            - fileSize
            - serviceNamespace
          additionalProperties: false
    vcloud-ext_BundleUploadSocketType:
      title: vcloud-ext_BundleUploadSocketType
      description: Upload information for an extension service localization bundle.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            uploadLocation:
              description: Upload URL for an extension service localization bundle.
              type: string
          additionalProperties: false
    vcloud-ext_AclAccessType:
      title: vcloud-ext_AclAccessType
      description: Represents an access type in an extension service ACL rule.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            access:
              description: "The access type. One of:  \n Entity  \n Shared  \n Published."
              type: string
            entity:
              description: Required when Access value is Entity. Contains a reference
                to the entity for which the action is authorized.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - access
          additionalProperties: false
    vcloud-ext_AclRuleType:
      title: vcloud-ext_AclRuleType
      description: Represents an extension service ACL rule.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            serviceResourceAccess:
              description: "Specifies service resource access. One of:  \n Entity\
                \ \\-\\- The action is authorized for the resource referenced in the\
                \ Entity element in this container.  \n Shared \\-\\- The action is\
                \ authorized for all resources in this resource class."
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_AclAccessType'
            organizationAccess:
              description: "Specifies organization access. One of:  \n Entity \\-\\\
                - The action is authorized for the organization referenced in the\
                \ Entity element in this container.  \n Shared \\-\\- The action is\
                \ authorized for all members of the organization that owns the resource.\
                \  \n Published \\-\\- The action is authorized for all members of\
                \ any organization in the cloud."
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_AclAccessType'
            principalAccess:
              description: "Specifies principal access. One of:  \n Entity \\-\\-\
                \ The action is authorized for the User referenced in the Entity element\
                \ in this container, or for any role that includes the Right referenced\
                \ in the Entity element in this container.  \n Shared \\-\\- The action\
                \ is authorized for all users."
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_AclAccessType'
          required:
            - organizationAccess
            - principalAccess
          additionalProperties: false
    vcloud-ext_ResourceClassActionType:
      title: vcloud-ext_ResourceClassActionType
      description: Defines the HTTP methods allowed on a URL pattern associated with
        an extension service resource class.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            httpMethod:
              description: 'HTTP method, one of: GET, PUT, POST, DELETE.'
              type: string
            urlPattern:
              description: "The relative URL of the resource as a named regular expression\
                \ where (?<id\\>) matches the resource identifier. For example:  \n\
                \ /backup/restore  \n /backup/restore/(?<id\\>[\\-,a\\-g,0\\-9]\\\
                *)  \n Must be <=1024 characters."
              type: string
            aclRules:
              description: Container for values used to create ACL rules for an extension
                service resource class action.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_AclRulesType'
          required:
            - httpMethod
            - urlPattern
          additionalProperties: false
    vcloud-ext_ResourceClassType:
      title: vcloud-ext_ResourceClassType
      description: Represents a resource class defined by an external service.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            mimeType:
              description: The MIME type for extension service resources of this resource
                class. Must be <=128 characters.
              type: string
            urlTemplate:
              description: A template for constructing the href attribute value for
                resources of this class. Can be any URI, and can include the variables
                {baseUri} and {resourceId}. When constructing the href value, vCloud
                Director replaces {baseUri} with the vCloud Director REST API base
                URL, and replaces {resourceId} the UUID portion of the resource id.
                Must be <=1024 characters.
              type: string
            nid:
              description: The Namespace Identifier for resources of this type, as
                specified in RFC2141. Must be <=255 characters.
              type: string
            urnPattern:
              description: The Namespace Specific String for resources of this type,
                as specified in RFC2141. Can be a string or a named regular expression,
                where (?<id\>) matches the resource identifier. Must be <=255 characters.
              type: string
            serviceResources:
              description: Container for values used to create service resources defined
                by this extension service.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_ServiceResourcesType'
            resourceClassActions:
              description: Container for values used to create resource class actions
                defined for this resource class.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_ResourceClassActionsType'
          additionalProperties: false
    vcloud-ext_ServiceResourceType:
      title: vcloud-ext_ServiceResourceType
      description: Represents an instance of resource class defined by an extension
        service.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            org:
              description: Organization that this extension service resource belongs
                to.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            externalObjectId:
              description: Object identifier for this extension service resource.
                Must be <=255 characters.
              type: string
          required:
            - org
            - externalObjectId
          additionalProperties: false
    vcloud-ext_ResourceClassesType:
      title: vcloud-ext_ResourceClassesType
      description: A list of resource classes defined by an extension service.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            resourceClass:
              description: Represents a resource class defined by an extension service.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_ResourceClassType'
          additionalProperties: false
    vcloud-ext_ServiceResourcesType:
      title: vcloud-ext_ServiceResourcesType
      description: A list of extension service resources.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            serviceResource:
              description: Represents an extension service resource.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_ServiceResourceType'
          additionalProperties: false
    vcloud-ext_ResourceClassActionsType:
      title: vcloud-ext_ResourceClassActionsType
      description: A list of extension service resource class actions.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            resourceClassAction:
              description: Represents an extension service resource class action.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_ResourceClassActionType'
          additionalProperties: false
    vcloud-ext_AclRulesType:
      title: vcloud-ext_AclRulesType
      description: A list of extension service resource class action ACL rules.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            aclRule:
              description: Represents an extension service resource class action ACL
                rule.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_AclRuleType'
          additionalProperties: false
    vcloud-ext_AuthorizationCheckParamsType:
      title: vcloud-ext_AuthorizationCheckParamsType
      description: Parameters for an authorization check request.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            user:
              description: The user for which an authorization check is requested.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            httpMethod:
              description: 'One of: GET, PUT, POST, DELETE'
              type: string
            uRL:
              description: 'The relative URL which is to be checked. Examples: /backup/restore,
                /backup/restore/{id}, /api/admin/org/{id}.'
              type: string
          required:
            - user
            - httpMethod
            - uRL
          additionalProperties: false
    vcloud-ext_AuthorizationCheckResponseType:
      title: vcloud-ext_AuthorizationCheckResponseType
      description: Response to an authorization check request.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isAuthorized:
              description: True if the referenced user is authorized to make the specified
                HTTP request to the specified URL.
              type: boolean
          additionalProperties: false
    vcloud-ext_SystemSettingsType:
      title: vcloud-ext_SystemSettingsType
      description: Represents system\-level settings.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            generalSettings:
              description: General settings.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_GeneralSettingsType'
            notificationsSettings:
              description: Notifications settings.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_NotificationsSettingsType'
            ldapSettings:
              description: LDAP settings.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_LdapSettingsType'
            amqpSettings:
              description: AMQP settings.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_AmqpSettingsType'
            emailSettings:
              description: Email settings.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_EmailSettingsType'
            license:
              description: Settings for retrieving and updating vCloud Director license
                information.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_LicenseType'
            brandingSettings:
              description: BrandingSettings stores all information about how to brand
                the product for vCloud service, like provider name, logo etc.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_BrandingSettingsType'
            blockingTaskSettings:
              description: Blocking task settings.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_BlockingTaskSettingsType'
            passwordPolicySettings:
              description: Password policy settings for the cloud provider administrator.
                These are also inherited by organizations, unless overridden at the
                organization level.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_SystemPasswordPolicySettingsType'
            kerberosSettings:
              description: Kerberos settings.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_KerberosSettingsType'
            lookupServiceSettings:
              description: vSphere lookup service settings.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_LookupServiceSettingsType'
            catalogSettings:
              description: Catalog settings.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_CatalogSettingsType'
            operationLimitsSettings:
              description: Global Tenant Throttling limits
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_OperationLimitsSettingsType'
          additionalProperties: false
    vcloud-ext_GeneralSettingsType:
      title: vcloud-ext_GeneralSettingsType
      description: General system settings.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            absoluteSessionTimeoutMinutes:
              description: Minutes after which a client session times out even when
                it is active.
              type: integer
              format: int32
            activityLogDisplayDays:
              description: Days of logged activities to be displayed to the users.
              type: integer
              format: int32
            activityLogKeepDays:
              description: Days of logged activities to keep in the system.
              type: integer
              format: int32
            allowOverlappingExtNets:
              description: True to allow creation of multiple external networks on
                the same LAN segment.
              type: boolean
            consoleProxyExternalAddress:
              description: "Use this address to access the console proxy from the\
                \ public side of a firewall or load\\-balancer.  \n Leave empty to\
                \ clear the address."
              type: string
            hostCheckDelayInSeconds:
              description: Interval between host status checks, in seconds.
              type: integer
              format: int32
            hostCheckTimeoutSeconds:
              description: Number of seconds to wait for a response from a host before
                marking it as hung or down.
              type: integer
              format: int32
            installationId:
              description: The vCloud Director installation Id. An integer in the
                range 0 \- 63.
              type: integer
              format: int32
            ipReservationTimeoutSeconds:
              description: Number of seconds to keep released IP addresses on hold
                before making them available for allocation again. This is typically
                set to 2 hours to allow old entries to expire from client ARP tables.
              type: integer
              format: int32
            syslogServerSettings:
              description: Default syslog server settings for networks. If logging
                is configured for firewall rules, the logs will be directed to these
                syslog servers. If you change these values, you must synchronize the
                syslog server settings for each vApp network or Edge Gateway in the
                system by running its syncSyslogServerSettings action.
              allOf:
                - $ref: '#/components/schemas/vcloud_SyslogServerSettingsType'
            loginNameOnly:
              deprecated: true
              description: System login policy setting (deprecated).
              type: boolean
            prePopDefaultName:
              description: Pre\-populate default configuration and virtual machine
                name.
              type: boolean
            quarantineEnabled:
              description: True if uploads should be quarantined.
              type: boolean
            quarantineResponseTimeoutSeconds:
              description: The length of time, in seconds, before a quarantined transfer
                is flagged as Timed Out.
              type: integer
              format: int32
            restApiBaseHttpUri:
              description: "Base REST API URL for HTTP connections from the public\
                \ side of a firewall, load\\-balancer, or proxy.  \n Leave empty to\
                \ clear the address."
              type: string
            restApiBaseUri:
              description: "Base REST API URL for HTTPS connections from the public\
                \ side of a firewall, load\\-balancer, or proxy.  \n Leave empty to\
                \ clear the address."
              type: string
            restApiBaseUriPublicCertChain:
              description: SSL public certificate chain for the RestApiBaseUri. If
                you specify an address in RestApiBaseUri, you must place the certificate
                chain for that address here. The certificate chain must consist of
                zero or more PEM\-encoded X.509 certificates.
              type: string
            sessionTimeoutMinutes:
              description: Number of minutes to timeout client session.
              type: integer
              format: int32
            showStackTraces:
              description: Boolean flag to turn on/off the display of exception stack
                traces.
              type: boolean
            syncStartDate:
              description: Number of minutes to timeout client session.
              type: string
              format: date-time
            syncIntervalInHours:
              description: LDAP sync repeats interval time in hours.
              type: integer
              format: int64
            systemExternalHttpAddress:
              description: "URL for VCD Web Console HTTP connections from the public\
                \ side of a firewall, load\\-balancer, or proxy.  \n Leave empty to\
                \ clear the address."
              type: string
            systemExternalAddress:
              description: "URL for VCD Web Console HTTPS connections from the public\
                \ side of a firewall, load\\-balancer, or proxy.  \n Leave empty to\
                \ clear the address."
              type: string
            systemExternalAddressPublicCertChain:
              description: SSL public certificate chain for SystemExternalAddress.
                If you specify an address in SystemExternalAddress, you must place
                the certificate chain for that address here. The certificate chain
                must consist of zero or more PEM\-encoded X.509 certificates.
              type: string
            tenantPortalExternalHttpAddress:
              description: "URL for TenantPortal HTTP connections from the public\
                \ side of a firewall, load\\-balancer, or proxy.  \n Leave empty to\
                \ clear the address."
              type: string
            tenantPortalExternalAddress:
              description: "URL for TenantPortal HTTPS connections from the public\
                \ side of a firewall, load\\-balancer, or proxy.  \n Leave empty to\
                \ clear the address."
              type: string
            tenantPortalPublicCertChain:
              description: SSL public certificate chain for TenantPortalExternalAddress.
                If you specify an address in TenantPortalExternalAddress, you must
                place the certificate chain for that address here. The certificate
                chain must consist of zero or more PEM\-encoded X.509 certificates.
              type: string
            transferSessionTimeoutSeconds:
              description: Transfer sessions time out in this number of seconds.
              type: integer
              format: int32
            verifyVcCertificates:
              description: Boolean flag to apply a strict trust check to vCenter certificates.
              type: boolean
            vcTruststorePassword:
              description: Password for the vCenter truststore, if used. If empty
                or no password is passed then no update is performed.
              type: string
            vcTruststoreContents:
              description: vCenter truststore bytes (if used).
              type: string
            vcTruststoreType:
              description: vCenter truststore type (JKS, JCEKS, PKCS12).
              type: string
            vmrcVersion:
              description: VMRC version.
              type: string
            verifyVsmCertificates:
              description: Boolean flag to apply a strict trust check to vShield Manager
                certificates.
              type: boolean
            elasticAllocationPool:
              description: Controls elasticity in Organization VDCs whose AllocationModel
                is AllocationPool. When set to true, Organization VDCs with this model
                can use resource pools from all clusters available to the backing
                Provider VDC. When set to false, these Organization VDCs are restricted
                to a single resource pool. By default, this flag is set to false restricting
                AllocationPool Organization VDCs to a single resource pool.
              type: boolean
            advancedNetworkingEnabled:
              description: True if Advanced Networking has been enabled for this system.
              type: boolean
            advancedNetworkingDfwApiUrl:
              description: REST API URL for Advanced Networking distributed firewall.
              type: string
            advancedNetworkingDfwUiUrl:
              description: Web interface URL for Advanced Networking distributed firewall.
              type: string
            advancedNetworkingGatewayApiUrl:
              description: REST API URL for Advanced Networking Edge Gateway.
              type: string
            advancedNetworkingGatewayUiUrl:
              description: Web interface URL for Advanced Networking Edge Gateway.
              type: string
            maxVdcQuota:
              description: Maximum number of VDCs allowed in this organization. A
                value of \-1 means there is no maximum. A value of 0 means this organization
                cannot create any VDCs. This value is used to initialize VdcQuota
                in the OrgGeneralSettings of a new organization.
              type: integer
              format: int32
            subInterfacesEnabled:
              description: A value of true enables use of subinterfaces when creating
                organization VDC networks in this organization.
              type: boolean
            vmDiscoveryEnabled:
              description: True if discovery of vCenter VMs is enabled for this installation.
              type: boolean
            allowFipsModeForEdgeGateways:
              description: True if it is ok to enable FIPS mode on edge gateways
              type: boolean
          required:
            - absoluteSessionTimeoutMinutes
            - activityLogDisplayDays
            - activityLogKeepDays
            - allowOverlappingExtNets
            - hostCheckDelayInSeconds
            - hostCheckTimeoutSeconds
            - ipReservationTimeoutSeconds
            - syslogServerSettings
            - loginNameOnly
            - prePopDefaultName
            - quarantineEnabled
            - quarantineResponseTimeoutSeconds
            - sessionTimeoutMinutes
            - showStackTraces
            - syncStartDate
            - syncIntervalInHours
            - transferSessionTimeoutSeconds
            - verifyVcCertificates
            - vcTruststoreType
          additionalProperties: false
    vcloud-ext_AmqpSettingsType:
      title: vcloud-ext_AmqpSettingsType
      description: Represents the settings for the AMQP broker.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            amqpHost:
              description: Hostname of the AMQP broker.
              type: string
            amqpPort:
              description: Port of the AMQP broker.
              type: integer
              format: int32
            amqpUsername:
              description: Username for the AMQP broker.
              type: string
            amqpPassword:
              description: Password for the AMQP broker.
              type: string
            amqpExchange:
              description: AMQP exchange for publishing.
              type: string
            amqpVHost:
              description: Virtual host for the AMQP broker.
              type: string
            amqpUseSSL:
              description: Use SSL for communication with the AMQP broker.
              type: boolean
            amqpSslAcceptAll:
              description: Accept all SSL certificates. Must be set to true in case
                of SSL enabled.
              type: boolean
            amqpPrefix:
              description: AMQP vcloud instance prefix.
              type: string
          required:
            - amqpHost
            - amqpPort
            - amqpUsername
            - amqpExchange
            - amqpVHost
            - amqpUseSSL
            - amqpSslAcceptAll
            - amqpPrefix
          additionalProperties: false
    vcloud-ext_AmqpSettingsTestType:
      title: vcloud-ext_AmqpSettingsTestType
      description: Represents the result from AMQP settings test.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            valid:
              description: Result from AMQP settings test. True, if settings are valid.
              type: boolean
            error:
              description: The error of an invalid AMQP settings test.
              allOf:
                - $ref: '#/components/schemas/vcloud_ErrorType'
          required:
            - valid
          additionalProperties: false
    vcloud-ext_NotificationsSettingsType:
      title: vcloud-ext_NotificationsSettingsType
      description: Represents the settings related to Notifications.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            enableNotifications:
              description: Boolean flag to turn on/off notification messages.
              type: boolean
          required:
            - enableNotifications
          additionalProperties: false
    vcloud-ext_BlockingTaskSettingsType:
      title: vcloud-ext_BlockingTaskSettingsType
      description: Represents the settings related to blocking tasks.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            timeoutAction:
              description: 'Action to be taken by the automatic timeout policy processing
                when it gets triggered due to timeout. One of: resume (The task will
                be resumed.), abort (The task will be aborted. Transient objects are
                cleaned up. Task status is set to ABORTED.), fail (The task will be
                failed. Transient object status and task status are set to ERROR.)'
              type: string
            blockingTaskOperations:
              description: Task operations which are enabled for blocking. If this
                element is empty or not supplied no operations will block.
              allOf:
                - $ref: '#/components/schemas/vcloud_TaskOperationListType'
            timeoutInMilliseconds:
              description: Value in milliseconds that defines how long to wait for
                a blocking task to be processed before triggering automatic timeout
                policy.
              type: integer
              format: int64
              minimum: 0
          required:
            - timeoutAction
            - blockingTaskOperations
            - timeoutInMilliseconds
          additionalProperties: false
    vcloud-ext_SystemPasswordPolicySettingsType:
      title: vcloud-ext_SystemPasswordPolicySettingsType
      description: Represents the settings related to Password Policy.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            accountLockoutEnabled:
              description: Boolean flag to turn on/off the account lockout feature.
              type: boolean
            adminAccountLockoutEnabled:
              description: Boolean flag to indicate whether system administrator accounts
                can lockout.
              type: boolean
            invalidLoginsBeforeLockout:
              description: Number of invalid login attempts that will trigger account
                lockout.
              type: integer
              format: int32
            accountLockoutIntervalMinutes:
              description: Number of minutes an account that is locked out will remain
                locked.
              type: integer
              format: int32
              minimum: 1
          required:
            - accountLockoutEnabled
            - adminAccountLockoutEnabled
            - invalidLoginsBeforeLockout
            - accountLockoutIntervalMinutes
          additionalProperties: false
    vcloud-ext_LdapSettingsType:
      title: vcloud-ext_LdapSettingsType
      description: Defines the hostname and connection details for system LDAP service.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            hostName:
              description: Hostname of the LDAP server.
              type: string
            port:
              description: Port at which to connect to the LDAP service.
              type: integer
              format: int32
            isSsl:
              description: True if the LDAP service requires an SSL connection.
              type: boolean
            isSslAcceptAll:
              description: True if the LDAP service accepts all SSL certificates.
              type: boolean
            realm:
              description: LDAP realm to use when looking up users.
              type: string
            pagedSearchDisabled:
              description: True if paged search is disabled.
              type: boolean
            pageSize:
              description: Size of the page.
              type: integer
              format: int32
            maxResults:
              description: Maximum results returned.
              type: integer
              format: int32
            maxUserGroups:
              description: Maximum results returned for user groups.
              type: integer
              format: int32
            searchBase:
              description: LDAP search base.
              type: string
            userName:
              description: 'Username to use when logging in to LDAP, specified using
                LDAP attribute=value pairs (for example: cn="ldap\-admin", c="example",
                dc="com").'
              type: string
            password:
              description: Password for the user identified by UserName. This value
                is never returned by GET. It is inspected on create and modify. On
                modify, the absence of this element indicates that the password should
                not be changed.
              type: string
            authenticationMechanism:
              description: Defines the authentication mechanism used by the LDAP service.
              type: string
            groupSearchBase:
              description: LDAP group search base.
              type: string
            isGroupSearchBaseEnabled:
              description: True if the group search base is enabled.
              type: boolean
            connectorType:
              description: Defines the type of the LDAP service.
              type: string
            userAttributes:
              description: Defines how LDAP attributes are used when importing a user.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_LdapUserAttributesType'
            groupAttributes:
              description: Defines how LDAP attributes are used when importing a group.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_LdapGroupAttributesType'
            useExternalKerberos:
              description: Set to true to use an external Kerberos service.
              type: boolean
          required:
            - port
            - isSsl
            - isSslAcceptAll
            - pagedSearchDisabled
            - authenticationMechanism
            - isGroupSearchBaseEnabled
            - connectorType
            - userAttributes
            - groupAttributes
          additionalProperties: false
    vcloud-ext_LdapGroupAttributesType:
      title: vcloud-ext_LdapGroupAttributesType
      description: Defines how a group is imported from LDAP.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            objectClass:
              description: LDAP objectClass of which imported groups are members.
                For example, group.
              type: string
            objectIdentifier:
              description: LDAP attribute to use as the unique identifier for a group.
                For example, objectGuid.
              type: string
            groupName:
              description: LDAP attribute to use for the group name. For example,
                cn.
              type: string
            membership:
              description: LDAP attribute to use when getting the members of a group.
                For example, member.
              type: string
            membershipIdentifier:
              description: LDAP attribute that identifies a group as a member of another
                group. For example, dn.
              type: string
            backLinkIdentifier:
              description: LDAP group attribute used to identify a group member.
              type: string
          required:
            - objectClass
            - objectIdentifier
            - groupName
            - membership
            - membershipIdentifier
          additionalProperties: false
    vcloud-ext_LdapUserAttributesType:
      title: vcloud-ext_LdapUserAttributesType
      description: Defines how LDAP attributes are used when importing a user.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            objectClass:
              description: LDAP objectClass of which imported users are members. For
                example, user or person
              type: string
            objectIdentifier:
              description: LDAP attribute to use as the unique identifier for a user.
                For example, objectGuid.
              type: string
            userName:
              description: LDAP attribute to use when looking up a user name to import.
                For example, userPrincipalName or samAccountName.
              type: string
            email:
              description: LDAP attribute to use for the user's email address. For
                example mail.
              type: string
            fullName:
              description: LDAP attribute to use for the user's full name. For example
                displayName.
              type: string
            givenName:
              description: LDAP attribute to use for the user's given name. For example,
                givenName.
              type: string
            surname:
              description: LDAP attribute to use for the user's surname. For example
                sn.
              type: string
            telephone:
              description: LDAP attribute to use for the user's telephone number.
                For example telephoneNumber.
              type: string
            groupMembershipIdentifier:
              description: LDAP attribute that identifies a user as a member of a
                group. For example, dn.
              type: string
            groupBackLinkIdentifier:
              description: LDAP attribute that returns the identifiers of all the
                groups of which the user is a member.
              type: string
          required:
            - objectClass
            - objectIdentifier
            - userName
            - email
            - fullName
            - givenName
            - surname
            - telephone
            - groupMembershipIdentifier
          additionalProperties: false
    vcloud-ext_BrandingSettingsType:
      title: vcloud-ext_BrandingSettingsType
      description: Information used to customize the vCloud Director Web console.
        Include provider\-specific text and values.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            companyName:
              description: Text to display in the vCloud Director Web console header
                and footer.
              type: string
            loginPageCustomizationTheme:
              description: Allows setting a login page custom theme. See the online
                help for more information.
              type: string
            previewCustomTheme:
              description: Allows setting a custom theme. See the online help for
                more information.
              type: string
            finalCustomTheme:
              description: The online help provides information on how you can customize
                the vCloud Director Web console theme.
              type: string
            aboutCompanyUrl:
              description: A URL to a site that provides additional information about
                your company.
              type: string
            supportUrl:
              description: A URL to a site that provides support information from
                your company. This URL will be used for the Support link in the the
                vCloud Director Web console Help menu.
              type: string
            signUpUrl:
              description: A URL to a site that allows a user to sign up for vCloud
                Director services provided by your company. This URL will be used
                for the Sign Up link on the vCloud Director Web console Login page.
              type: string
            forgotUserNameOrPasswordURL:
              description: A URL to a site that allows a user of your company's vCloud
                Director service to recover a forgotten user name or password. This
                URL will be used for the Forgot Password link on the vCloud Director
                Web console Login page.
              type: string
          required:
            - companyName
          additionalProperties: false
    vcloud-ext_LicenseType:
      title: vcloud-ext_LicenseType
      description: This is used by the API to update and retrieve site license specific
        information.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            serialNumber:
              description: The site wide serial number string.
              type: string
            licensedVMCount:
              description: The number of VMs this product is licensed for.
              type: integer
              format: int32
            expirationDate:
              description: The expiration date for this serial number. This is a read
                only field. for the API client. The license manager will set this
                field appropriately.
              type: string
              format: date-time
            validSerial:
              description: Flag indicating whether the provided serial is valid. This
                is a read only field for the API client. The license manager will
                set this flag appropriately.
              type: boolean
            expired:
              description: Flag indicating whether the provided serial number has
                expired. This is a read\-only field for the API. The license manager
                will set this flag appropriately.
              type: boolean
            persisted:
              description: Flag indicating whether this license element is persisted.
                Note that starting with vCloud 5.5 attempting to set an expired license
                key while the system is federated with component\-manager will not
                persist the key in the CIS Licensing sub system. Otherwise, for compatibility
                reason, if the key is expired and the system is not federated with
                component manager then this key gets persisted in the vCloud local
                licensing system.
              type: boolean
            publishingToRemoteSitesFeature:
              description: Flag indicating whether the provided serial number has
                feature 'publishing\-to\-remote\-sites'. This is a read\-only field
                for the API. The license manager will set this flag appropriately.
              type: boolean
            subscribingToRemoteSitesFeature:
              description: Flag indicating whether the provided serial number has
                feature 'subscribing\-to\-remote\-sites'. This is a read\-only field
                for the API. The license manager will set this flag appropriately.
              type: boolean
            licenseMetricsInfo:
              description: Report of License usage metrics.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_LicenseMetricsInfoType'
          required:
            - serialNumber
          additionalProperties: false
    vcloud-ext_LicenseMetricsInfoType:
      title: vcloud-ext_LicenseMetricsInfoType
      description: Report of License usage metrics.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vRAM:
              description: Virtual memory allocation.
              type: integer
              format: int64
            vCPU:
              description: Number of virtual processors used.
              type: integer
              format: int64
            runningVMs:
              description: Number of VMs.
              type: integer
              format: int64
            physicalMemoryUsed:
              description: Physical memory used during the observation period.
              type: integer
              format: int64
            physicalSocketCount:
              description: Network sockets use count.
              type: integer
              format: int32
            availablePhysicalMemory:
              description: Total physical memory used during the observation period.
              type: integer
              format: int64
            lastUpdate:
              description: Date that the report was collected.
              type: string
              format: date-time
            publishingToRemoteSites:
              description: Whether the content\-catalog feature to publish to external
                sites is used.
              type: boolean
            subscribingToRemoteSites:
              description: Whether the content\-catalog feature to subscribe to external
                sites is used.
              type: boolean
          additionalProperties: false
    vcloud-ext_EmailSettingsType:
      title: vcloud-ext_EmailSettingsType
      description: Represents system email settings.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            senderEmailAddress:
              description: Sender email address in an email notification or alert.
              type: string
            emailSubjectPrefix:
              description: The prefix used in the email subject line for all email
                notifications and alerts from the system.
              type: string
            alertEmailToAllAdmins:
              description: True if alert emails should be sent to to all system administrators.
              type: boolean
            alertEmailTo:
              description: A comma\-separated list of email addresses to send alert
                messages to.
              type: string
            smtpSettings:
              description: The SMTP server for email notifications and alerts.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_SmtpSettingsType'
          required:
            - alertEmailToAllAdmins
            - smtpSettings
          additionalProperties: false
    vcloud-ext_SmtpSettingsType:
      title: vcloud-ext_SmtpSettingsType
      description: The SMTP server for email notifications and alerts.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            useAuthentication:
              description: A flag to indicate if the SMTP requires login authentication.
                If this flag is set to true, caller must provide user name and password.
              type: boolean
            smtpServerName:
              description: SMTP server hostname.
              type: string
            smtpServerPort:
              description: SMTP server port.
              type: integer
              format: int32
            ssl:
              deprecated: true
              description: True if the SMTP server requires an SSL connection.
              type: boolean
            smtpSecureMode:
              description: "Security protocol to use when connecting to the SMTP server.\
                \ One of:  \n startTls \\-\\- Use the STARTTLS protocol  \n ssl \\\
                -\\- \\-Use the SSL/TLS protocol  \n none \\-\\- Do not use any security\
                \ protocol"
              allOf:
                - $ref: '#/components/schemas/vcloud_SmtpSecureModeType'
            sslTrustStore:
              description: Custom truststore to use to trust peer certificates when
                establishing a secure connection using SSL/STARTTLS (when enabled).
              type: string
            userName:
              description: SMTP admin user name. 128 characters or less.
              type: string
            password:
              description: SMTP admin password. 128 characters or less.
              type: string
          required:
            - useAuthentication
          additionalProperties: false
    vcloud-ext_KerberosSettingsType:
      title: vcloud-ext_KerberosSettingsType
      description: Global Kerberos settings.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            allowLowerCaseRealms:
              description: A value of true allows the use of lower\-case characters
                in realm names.
              type: boolean
            realm:
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_RealmType'
          required:
            - realm
          additionalProperties: false
    vcloud-ext_RealmType:
      title: vcloud-ext_RealmType
      description: Kerberos realm information.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            kdc:
              description: The KDC for the current realm.
              type: string
            name:
              description: The name of the realm. Must be all upper\-case characters
                unless AllowLowerCaseRealms is true.
              type: string
            domain:
              description: The list of all DNS suffixes associated with the realm.
              type: array
              items:
                type: string
          required:
            - kdc
            - name
            - domain
          additionalProperties: false
    vcloud-ext_LookupServiceSettingsType:
      title: vcloud-ext_LookupServiceSettingsType
      description: Information that allows vCloud Director to connect to a vSphere
        lookup service.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            lookupServiceUrl:
              description: The URL of the vSphere Lookup Service. If empty or missing
                on PUT, any registered lookup service is unregistered.
              type: string
          additionalProperties: false
    vcloud-ext_LookupServiceParamsType:
      title: vcloud-ext_LookupServiceParamsType
      description: Parameters for a register or unregister Lookup Service request.
        If LookupServiceUrl is present and not empty, the request registers a lookup
        service. If LookupServiceUrl is missing or empty, the request unregisters
        a lookup service.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_LookupServiceSettingsType'
        - type: object
          properties:
            userName:
              description: The vSphere SSO service user name of a user who has administrative
                privileges.
              type: string
            password:
              description: The vSphere SSO service password for the user named in
                userName.
              type: string
            vCDUrl:
              deprecated: true
              description: The vCloud Director public login URL. This element is deprecated
                and should be left empty when using API version 5.6 and later, which
                obtain this address from SystemSettings:GeneralSettings:SystemExternalAddress.
              type: string
          required:
            - userName
            - password
          additionalProperties: false
    vcloud-ext_VcTrustStoreUpdateParamsType:
      title: vcloud-ext_VcTrustStoreUpdateParamsType
      description: Parameters for updating the vCenter truststore.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadParamsType'
        - type: object
          properties:
            type:
              description: "Type of the trust store. One of:  \n JKS  \n JCEKS  \n\
                \ PKCS12"
              type: string
            password:
              description: Password for the vCenter trust store.
              type: string
          required:
            - type
          additionalProperties: false
    vcloud-ext_VcTrustStoreUploadSocketType:
      title: vcloud-ext_VcTrustStoreUploadSocketType
      description: Upload socket for vCenter trust store.
      allOf:
        - $ref: '#/components/schemas/vcloud_FileUploadSocketType'
        - type: object
          additionalProperties: false
    vcloud-ext_CatalogSettingsType:
      title: vcloud-ext_CatalogSettingsType
      description: Catalog settings for this cloud
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            isSyncEnabled:
              description: True to enable the synchronization of external catalogs.
              type: boolean
            syncStartDate:
              description: Date and Time at which the synchronization will start.
              type: string
              format: date-time
            syncStopDate:
              description: Date and Time at which the synchronization will stop.
              type: string
              format: date-time
            refreshInterval:
              description: Number of hours between attempts to synchronize with external
                catalogs. Default is 24 hours.
              type: integer
              format: int64
          required:
            - isSyncEnabled
          additionalProperties: false
    vcloud-ext_OperationLimitsSettingsType:
      title: vcloud-ext_OperationLimitsSettingsType
      description: Specifies default operation limits settings for all organizations
        in the system. An operation is defined as resource\-intensive if it returns
        a Task object. The default value for all operation limits settings is 0, which
        specifies no limit
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            runningPerUser:
              description: Maximum number of resource\-intensive operations requested
                by a user in any organization that can be simultaneously eligible
                to run when an orgnization specific limit is not set. When a user
                makes a request that causes this limit to exceed; the requested operation
                is queued but remains ineligible to run until enough of the user's
                eligible requests have been run.
              type: integer
              format: int32
            runningPerOrg:
              description: Maximum number of resource\-intensive operations owned
                by any organization that can be simultaneously eligible to run when
                an orgnization specific limit is not set. When an organization member
                makes a request that causes this limit to exceed, the requested operation
                is queued but remains ineligible to run until enough of the organization's
                eligible requests have been run.
              type: integer
              format: int32
            queuedOperationsPerUser:
              description: Maximum number of resource\-intensive operations that a
                user in any organization can queue when an orgnization specific limit
                is not set. When a user makes a request that causes this limit to
                exceed, the request fails and returns HTTP status 400.
              type: integer
              format: int32
            queuedOperationsPerOrg:
              description: Maximum number of queued resource\-intensive operations
                allowed for users in any organization when an orgnization specific
                limit is not set. When an organization member makes a request that
                causes this limit to exceed, the request fails and returns HTTP status
                400.
              type: integer
              format: int32
          additionalProperties: false
    vcloud-ext_BlockingTaskType:
      title: vcloud-ext_BlockingTaskType
      description: Describes a blocking task request. Contains references to objects
        involved in the task.
      allOf:
        - $ref: '#/components/schemas/vcloud_TaskRequestBaseType'
        - type: object
          properties:
            status:
              description: Status of the blocking task.
              type: string
          required:
            - status
          additionalProperties: false
    vcloud-ext_BlockingTaskOperationParamsType:
      title: vcloud-ext_BlockingTaskOperationParamsType
      description: Parameters to POST with a blocking task action.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            message:
              description: Message that will be associated with the action.
              type: string
          required:
            - message
          additionalProperties: false
    vcloud-ext_BlockingTaskUpdateProgressParamsType:
      title: vcloud-ext_BlockingTaskUpdateProgressParamsType
      description: Parameters to update a blocking task with a new timeout.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_BlockingTaskOperationParamsType'
        - type: object
          properties:
            timeoutValueInMilliseconds:
              description: The new timeout in milliseconds that will serve as an offset
                value to the current time. If this value is absent the timeout date
                for the blocking task will not be changed.
              type: integer
              format: int64
          additionalProperties: false
    vcloud-ext_VMWExtensionType:
      title: vcloud-ext_VMWExtensionType
      description: List links to extension operations and entities.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          additionalProperties: false
    vcloud-ext_ResourcePoolType:
      title: vcloud-ext_ResourcePoolType
      description: vSphere resource pool information.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            moRef:
              description: The vSphere managed object reference of the resource pool.
              type: string
            vimObjectType:
              description: The vCenter server that provides the resources in this
                pool.
              type: string
            dataStoreRefs:
              description: vSphere datastores accessible from this resource pool.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
          required:
            - moRef
            - vimObjectType
          additionalProperties: false
    vcloud-ext_PrepareHostParamsType:
      title: vcloud-ext_PrepareHostParamsType
      description: Parameters for preparing an ESX/ESXi host.
      type: object
      properties:
        username:
          description: The user name to use for host preparation login.
          type: string
        password:
          description: The cleartext password to use for host preparation login.
          type: string
      required:
        - username
        - password
      additionalProperties: false
    vcloud-ext_ServerType:
      title: vcloud-ext_ServerType
      description: Information needed to connect to a vSphere or a vShield manager
        server.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            username:
              description: User name to connect to the server.
              type: string
            password:
              description: Cleartext password to connect to the server.
              type: string
            url:
              description: URL of the server.
              type: string
              format: uri
          required:
            - username
            - url
          additionalProperties: false
    vcloud-ext_RegisterVimServerParamsType:
      title: vcloud-ext_RegisterVimServerParamsType
      description: Represents parameters to register a vCenter server.
      type: object
      properties:
        vimServer:
          description: vCenter administrator credentials. Required for register, modify.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_VimServerType'
        shieldManager:
          description: vShield manager administrator credentials. Required for register,
            modify.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_ShieldManagerType'
      required:
        - vimServer
        - shieldManager
      additionalProperties: false
    vcloud-ext_VimServerType:
      title: vcloud-ext_VimServerType
      description: Represents vCenter server information.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_ServerType'
        - type: object
          properties:
            isEnabled:
              description: True if the vCenter server is enabled for use with vCloud
                Director.
              type: boolean
            isConnected:
              description: True if the vCenter server is connected.
              type: boolean
            shieldManagerHost:
              description: vShield manager IP address or fully qualified domain name.
              type: string
              format: uri
            shieldManagerUserName:
              description: vShield manager user name.
              type: string
            uuid:
              description: The instance UUID property of the vCenter server.
              type: string
            vcProxy:
              description: The name of the cell used as a proxy for the VIM server.
              type: string
            vcVersion:
              description: The version of the VIM server.
              type: string
            useVsphereService:
              description: If true, use the vSphere Lookup Service to get the vSphere
                web client server URL. Otherwise use the value of VsphereWebClienServerUrl.
              type: boolean
            vsphereWebClientServerUrl:
              description: The URL of VSphere web client server.
              type: string
          required:
            - isEnabled
          additionalProperties: false
    vcloud-ext_VMWVimServerReferencesType:
      title: vcloud-ext_VMWVimServerReferencesType
      description: List of references to vCenter servers registered to vCloud Director.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vimServerReference:
              description: Reference to a vCenter server.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_ShieldManagerType:
      title: vcloud-ext_ShieldManagerType
      description: Represents credentials to a vShield Manager server.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_ServerType'
        - type: object
          properties:
            associatedVimServer:
              description: Reference to the vCenter server for this vShield manager.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            controlVmResourcePoolName:
              description: Name of the resource pool to use for creating DLR virtual
                appliance.
              type: string
            controlVmDatastoreName:
              description: Name of the Datastore to use for creating DLR virtual appliance.
              type: string
            controlVmManagementInterfaceName:
              description: Name of the management interface to use for creating DLR
                virtual appliance.
              type: string
          additionalProperties: false
    vcloud-ext_VmObjectRefsListType:
      title: vcloud-ext_VmObjectRefsListType
      description: A list of references to virtual machines in vCenter inventory.
      type: object
      properties:
        numberOfPages:
          description: The total number of pages in the response.
          type: integer
          format: int32
        page:
          description: The current page number. The first page is page number 1.
          type: integer
          format: int32
        vmObjectRef:
          description: A reference to a virtual machine in vCenter inventory.
          type: array
          items:
            $ref: '#/components/schemas/vcloud-ext_VmObjectRefType'
      additionalProperties: false
    vcloud-ext_VmObjectRefType:
      title: vcloud-ext_VmObjectRefType
      description: A reference to a virtual machine in vCenter inventory.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
        - type: object
          properties:
            name:
              description: The name of the virtual machine.
              type: string
          additionalProperties: false
    vcloud-ext_DiskDatastoreType:
      title: vcloud-ext_DiskDatastoreType
      description: A pair of VM disk's instance ID and the datastore where the disk
        is located.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
        - type: object
          properties:
            instanceId:
              description: InstanceId of the disk located on this datastore.
              type: string
          additionalProperties: false
    vcloud-ext_ImportedDiskType:
      title: vcloud-ext_ImportedDiskType
      description: Represents a virtual disk of the VM.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            instanceId:
              description: The instance ID of the disk as specified in the VM's settings
                in Virtual Center Server, or the VM's configuration file.
              type: string
            iops:
              description: IOPS request for the imported disk
              type: integer
              format: int64
            vdcStorageProfile:
              description: Reference to a vDC storage profile to associate with this
                virtual disk.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - instanceId
            - vdcStorageProfile
          additionalProperties: false
    vcloud-ext_ImportVmParamsType:
      title: vcloud-ext_ImportVmParamsType
      description: Parameters to import a virtual machine.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            sourceMove:
              description: Set to true to delete the source object after the import
                is complete.
              type: boolean
            vmName:
              description: Name to be used for imported VM.
              type: string
            vAppScopedLocalId:
              description: vApp scoped local id to be used for imported VM.
              type: string
            computerName:
              description: Computer name to be used for imported VM.
              type: string
            vmMoRef:
              description: Managed object reference of VM to import.
              type: string
            vdcStorageProfile:
              description: Reference to a vDC storage profile for imported VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            vdc:
              description: Target vDC for imported VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            importedDisk:
              description: Represents a disk of the VM in order to specify per\-disk
                Storage Profile.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_ImportedDiskType'
          required:
            - vmMoRef
            - vdc
          additionalProperties: false
    vcloud-ext_ImportVmAsVAppParamsType:
      title: vcloud-ext_ImportVmAsVAppParamsType
      description: Parameters to import a virtual machine as a vApp.
      allOf:
        - $ref: '#/components/schemas/vcloud_VAppCreationParamsType'
        - type: object
          properties:
            sourceMove:
              description: Set to true to delete the source object after the import
                is complete.
              type: boolean
            vmName:
              description: Name to be used for imported VM.
              type: string
            vAppScopedLocalId:
              description: vApp scoped local id to be used for imported VM.
              type: string
            computerName:
              description: Computer name to be used for imported VM.
              type: string
            vmMoRef:
              description: Managed object reference of VM to import.
              type: string
            vdcStorageProfile:
              description: Reference to a vDC storage profile for imported VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            vdc:
              description: Target vDC for imported VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            importedDisk:
              description: Represents a disk of the VM in order to specify per\-disk
                Storage Profile.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_ImportedDiskType'
          required:
            - vmMoRef
            - vdc
          additionalProperties: false
    vcloud-ext_ImportVmIntoExistingVAppParamsType:
      title: vcloud-ext_ImportVmIntoExistingVAppParamsType
      description: Parameters to import a virtual machine into an existing VApp.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            sourceMove:
              description: Set to true to delete the source object after the import
                is complete.
              type: boolean
            vmName:
              description: Name to be used for imported VM.
              type: string
            vmDescription:
              description: Description to be used for imported VM.
              type: string
            vAppScopedLocalId:
              description: vApp scoped local id to be used for imported VM.
              type: string
            computerName:
              description: Computer name to be used for imported VM.
              type: string
            vmMoRef:
              description: Managed object reference of VM to import.
              type: string
            vdcStorageProfile:
              description: Reference to a vDC storage profile for imported VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            vApp:
              description: vApp to hold imported VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            importedDisk:
              description: Represents a disk of the VM in order to specify per\-disk
                Storage Profile.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_ImportedDiskType'
          required:
            - vmName
            - vmMoRef
            - vApp
          additionalProperties: false
    vcloud-ext_ImportVmAsVAppTemplateParamsType:
      title: vcloud-ext_ImportVmAsVAppTemplateParamsType
      description: Parameters to import a virtual machine as a vApp template.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            sourceMove:
              description: Set to true to delete the source object after the import
                is complete.
              type: boolean
            goldMaster:
              description: Attribute to specify if template is gold master, the default
                is false.
              type: boolean
            vmName:
              description: Name to be used for imported VM.
              type: string
            vAppScopedLocalId:
              description: vApp scoped local id to be used for imported VM.
              type: string
            computerName:
              description: Computer name to be used for imported VM.
              type: string
            vmMoRef:
              description: Managed object reference of VM to import.
              type: string
            vdc:
              description: Target vDC for imported vApp template.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            vdcStorageProfile:
              description: Storage profile to be specified in the vApp template created
                by this import.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            catalog:
              description: Catalog in which the imported vApp template will be listed.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - vmMoRef
            - vdc
          additionalProperties: false
    vcloud-ext_ImportMediaParamsType:
      title: vcloud-ext_ImportMediaParamsType
      description: Represents parameters to import media from vSphere.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            sourceMove:
              description: Set to true to delete the source object after the import
                is complete.
              type: boolean
            datastoreMoRef:
              description: Managed object reference of the datastore from which media
                file will be imported.
              type: string
            sourcePath:
              description: A full path to media file on the datastore.
              type: string
            vdc:
              description: The vDC into which the media will be imported.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            catalog:
              description: The catalog in which the imported media will be listed.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            vdcStorageProfile:
              description: Storage profile
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - datastoreMoRef
            - sourcePath
            - vdc
          additionalProperties: false
    vcloud-ext_HostType:
      title: vcloud-ext_HostType
      description: Read only representation of one host in a vSphere server.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            ready:
              description: Indicates whether the host is ready for use.
              type: boolean
            available:
              description: Indicates whether the host is available.
              type: boolean
            enabled:
              description: Indicated whether the host is enabled for use.
              type: boolean
            busy:
              description: Indicates whether the host is busy.
              type: boolean
            enableHostForHostSpanning:
              description: Indicates whether the host is enabled for host spanning.
              type: boolean
            cpuType:
              description: The CPU type of the host.
              type: string
            numOfCpusPackages:
              description: How many hardware CPUs the host has.
              type: integer
              format: int32
            numOfCpusLogical:
              description: How many logical CPUs the host has.
              type: integer
              format: int32
            cpuTotal:
              description: The total CPU power measured in MHz.
              type: integer
              format: int64
            memUsed:
              description: The used memory in the host.
              type: number
              format: double
            memTotal:
              description: The total memory in the host.
              type: number
              format: double
            hostOsName:
              description: OS name of the host.
              type: string
            hostOsVersion:
              description: OS version of the host.
              type: string
            systemMessages:
              description: System messages of the host.
              type: string
            vimPropertyPageUrl:
              description: URL to the VIM property page of the host.
              type: string
            vmMoRef:
              description: The host moref.
              type: string
          required:
            - ready
            - available
            - enabled
            - busy
            - enableHostForHostSpanning
            - numOfCpusPackages
            - numOfCpusLogical
            - cpuTotal
            - memUsed
            - memTotal
            - vmMoRef
          additionalProperties: false
    vcloud-ext_VimObjectRefType:
      title: vcloud-ext_VimObjectRefType
      description: Represents the moref and the type of a vSphere object.
      type: object
      properties:
        vimServerRef:
          description: The vCenter server reference.
          allOf:
            - $ref: '#/components/schemas/vcloud_ReferenceType'
        moRef:
          description: Managed object reference of the object.
          type: string
        vimObjectType:
          description: 'The vSphere type of the object. One of: CLUSTER\_COMPUTE\_RESOURCE
            (The object is a vSphere cluster compute resource.), RESOURCE\_POOL (The
            object is a vSphere resource pool.), DATASTORE (The object is a vSphere
            datastore.), HOST (The object is an ESX/ESXi host.), VIRTUAL\_MACHINE
            (The object is a vSphere VM.), VIRTUAL\_APP (The object is a vSphere vApp.),
            NETWORK (The object is a vSphere network.), DV\_PORTGROUP (The object
            is a vSphere distributed virtual portgroup.), DV\_SWITCH (The object is
            a vSphere distributed virtual switch.), DATASTORE\_CLUSTER (The object
            is a vSphere storage pod.)'
          type: string
      required:
        - vimServerRef
        - moRef
        - vimObjectType
      additionalProperties: false
    vcloud-ext_VimObjectRefsType:
      title: vcloud-ext_VimObjectRefsType
      description: List of VimObjectRef elements.
      type: object
      properties:
        vimObjectRef:
          description: A reference to a vSphere object.
          type: array
          items:
            $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
      additionalProperties: false
    vcloud-ext_VMWProviderVdcType:
      title: vcloud-ext_VMWProviderVdcType
      description: Extension representation of provider vDC type.
      allOf:
        - $ref: '#/components/schemas/vcloud_ProviderVdcType'
        - type: object
          properties:
            dataStoreRefs:
              description: vSphere datastores backing this provider vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
            resourcePoolRefs:
              description: Resource pools backing this provider vDC. On create, you
                must specify a resource pool that is not used by (and is not the child
                of a resource pool used by) any other provider vDC. On modify, this
                element is required for schema validation, but its contents cannot
                be changed.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
            vimServer:
              description: The vCenter server that provides the resource pools and
                datastores. A valid reference is required on create. On modify, this
                element is required for schema validation, but its contents cannot
                be changed.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
            hostReferences:
              description: Shows all hosts which are connected to VC server.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VMWHostReferencesType'
            highestSupportedHardwareVersion:
              description: The highest virtual hardware version supported by this
                Provider vDC. If empty or omitted on creation, the system sets it
                to the highest virtual hardware version suported by all hosts in the
                primary resource pool. You can modify it when you add more resource
                pools.
              type: string
          required:
            - dataStoreRefs
            - resourcePoolRefs
          additionalProperties: false
    vcloud-ext_VMWProviderVdcParamsType:
      title: vcloud-ext_VMWProviderVdcParamsType
      description: Parameters to create or update a Provider vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            resourcePoolRefs:
              description: Resource pools backing this provider vDC. You must specify
                a resource pool that is not used by (and is not the child of a resource
                pool used by) any other provider vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
            vimServer:
              description: The vCenter server that provides the resource pools and
                datastores. A valid reference is required on create. On modify, this
                element is required for schema validation, but its contents cannot
                be changed.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
            vxlanNetworkPool:
              description: Reference to a VXLAN Network Pool to be assigned to this
                Provider VDC. Leave empty to have the system create the VXLAN pool
                and assign it to the Provider VDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            highestSupportedHardwareVersion:
              description: The highest virtual hardware version supported by this
                Provider vDC. If empty or omitted on creation, the system sets it
                to the highest virtual hardware version suported by all hosts in the
                primary resource pool. You can modify it when you add more resource
                pools.
              type: string
            isEnabled:
              description: Flag to show the enabled status of provider VDC.
              type: boolean
            storageProfile:
              description: Names of the storage profiles to add to this provider vDC.
              type: array
              items:
                type: string
            hostRefs:
              description: List of host which will be prepared.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_HostObjectRefsType'
            defaultPassword:
              description: The default password which will be used for preparing hosts.
              type: string
            defaultUsername:
              description: The default username which will be used for preparing hosts.
              type: string
          required:
            - resourcePoolRefs
            - vimServer
            - storageProfile
          additionalProperties: false
    vcloud-ext_VMWProviderVdcReferencesType:
      title: vcloud-ext_VMWProviderVdcReferencesType
      description: Represents a list of available provider vDCs.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            providerVdcReference:
              description: Reference to a provider vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_VMWProviderVdcStorageProfileType:
      title: vcloud-ext_VMWProviderVdcStorageProfileType
      description: Extension representation of provider vDC storage profile type.
      allOf:
        - $ref: '#/components/schemas/vcloud_ProviderVdcStorageProfileType'
        - type: object
          properties:
            vimStorageProfile:
              description: VIM object reference to storage profile.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
          required:
            - vimStorageProfile
          additionalProperties: false
    vcloud-ext_VMWExternalNetworkType:
      title: vcloud-ext_VMWExternalNetworkType
      description: External network type.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkType'
        - type: object
          properties:
            vimPortGroupRef:
              description: The portgroup that backs this network. A valid reference
                to an existing network or dvportgroup in a vCenter server is required
                on create. On modify, this element is required for schema validation,
                but its contents cannot be changed.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
            vimPortGroupRefs:
              description: A list of DV\_PORTGROUP or NETWORK objects that back this
                network. Each referenced DV\_PORTGROUP or NETWORK must exist on a
                vCenter server registered with the system. You cannot reference more
                than one DV\_PORTGROUP or NETWORK from a single vCenter server. You
                cannot combine DV\_PORTGROUP and NETWORK objects in this list.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
          additionalProperties: false
    vcloud-ext_VMWExternalNetworkReferencesType:
      title: vcloud-ext_VMWExternalNetworkReferencesType
      description: Represents a list of available external networks.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            externalNetworkReference:
              description: Reference to an external network.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_VMWNetworkPoolReferencesType:
      title: vcloud-ext_VMWNetworkPoolReferencesType
      description: Represents a list of available network pools.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            networkPoolReference:
              description: Reference to a network pool.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_VMWNetworkPoolType:
      title: vcloud-ext_VMWNetworkPoolType
      description: Base extension network pool type.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkPoolType'
        - type: object
          additionalProperties: false
    vcloud-ext_PortGroupPoolType:
      title: vcloud-ext_PortGroupPoolType
      description: Represents a network pool backed by one or more vSphere port groups.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VMWNetworkPoolType'
        - type: object
          properties:
            portGroupRefs:
              description: References to the vSphere port groups that support this
                network pool. Required at least one port group moref, for modify and
                create.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
            vimServer:
              description: Reference to the vSphere which hosts the port groups. Required
                VC server on which the port groups exist, for modify and create.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            usedNetworksCount:
              description: This is a read\-only indication of how many networks in
                this pool are in use.
              type: integer
              format: int32
          required:
            - portGroupRefs
            - vimServer
          additionalProperties: false
    vcloud-ext_VlanPoolType:
      title: vcloud-ext_VlanPoolType
      description: Represents a network pool backed by one or more vSphere VLANs.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VMWNetworkPoolType'
        - type: object
          properties:
            vlanRange:
              description: VLAN range used for this pool.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_NumericRangeType'
            vimSwitchRef:
              description: Reference to the vSphere switch which is used for this
                pool.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
            usedNetworksCount:
              description: This is a read\-only indication of how many networks in
                this pool are in use.
              type: integer
              format: int32
            promiscuousMode:
              description: Internal use only.
              type: boolean
          required:
            - vlanRange
          additionalProperties: false
    vcloud-ext_FencePoolType:
      deprecated: true
      title: vcloud-ext_FencePoolType
      description: Represents a network pool backed by one or more vSphere isolated
        networks.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VMWNetworkPoolType'
        - type: object
          properties:
            fenceIdCount:
              description: Number of fence IDs in this pool.
              type: integer
              format: int32
            vlanId:
              description: VLAN ID to be used for this pool or 0 for no VLAN.
              type: integer
              format: int32
            vimSwitchRef:
              description: Reference to the vSphere switch that supports this VLAN.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
            usedNetworksCount:
              description: This is a read\-only indication of how many networks in
                this pool are in use.
              type: integer
              format: int32
            promiscuousMode:
              description: Internal use only.
              type: boolean
            mtu:
              description: Maximum transmission unit of the underlying VMware vNetwork
                Distributed Switch.
              type: integer
              format: int32
          required:
            - fenceIdCount
            - vlanId
            - vimSwitchRef
          additionalProperties: false
    vcloud-ext_VxlanPoolType:
      title: vcloud-ext_VxlanPoolType
      description: Represents a network pool using VXLAN technology. Backed by resource
        pools of a PVDC that can be backed by multiple VDSes.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VMWNetworkPoolType'
        - type: object
          properties:
            vimSwitchRef:
              description: Reference to the vSphere switch that supports the VXLAN
                networks
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
            transportZoneRef:
              description: Transport Zone ID of VXLAN Network Pool.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
            usedNetworksCount:
              description: This is a read\-only indication of how many networks in
                this pool are in use.
              type: integer
              format: int32
            promiscuousMode:
              description: Internal use only.
              type: boolean
            vdsContexts:
              description: The VDS Contexts (VDS id, VLAN ID tuples) that make up
                a VXLAN network pool
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VdsContextType'
          additionalProperties: false
    vcloud-ext_VdsContextType:
      title: vcloud-ext_VdsContextType
      description: Represents the collection of VDS Contexts.
      type: object
      properties:
        vdsContext:
          description: A VimObjectRef that represents a {vC ID, VDS ID, VLAN ID} tuple
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
      additionalProperties: false
    vcloud-ext_NumericRangeType:
      title: vcloud-ext_NumericRangeType
      description: Range of integers.
      type: object
      properties:
        start:
          description: Start integer number of the range.
          type: integer
          format: int32
        end:
          description: End integer number of the range.
          type: integer
          format: int32
      required:
        - start
        - end
      additionalProperties: false
    vcloud-ext_VMWHostReferencesType:
      title: vcloud-ext_VMWHostReferencesType
      description: Represents a list of available hosts.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            hostReference:
              description: Reference to a host.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_ResourcePoolListType:
      title: vcloud-ext_ResourcePoolListType
      description: Represents a list of available resource pools that have not been
        assigned to any vDCs (provider or org).
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            resourcePool:
              description: Free resource pool information.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_ResourcePoolType'
          additionalProperties: false
    vcloud-ext_LicensingReportType:
      deprecated: true
      title: vcloud-ext_LicensingReportType
      description: Represents a read\-only licensing metric report. This type is deprecated
        since version 5.5 because of scalability issues. The new typed queries 'licensingReportQueryList',
        'licensingReportSampleQueryList', 'licensingManagedServerQueryList' and 'licensingVirtualMachineQueryList',
        when combined, replaces this.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            productSerialNumber:
              description: Product serial number.
              type: string
            reportDate:
              description: End of the period for which the report is generated.
              type: string
              format: date-time
            signature:
              description: Cryptographic signature of the report.
              type: string
            sample:
              description: One licensing metric sample captured in the report.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_LicensingReportSampleType'
          required:
            - productSerialNumber
            - reportDate
          additionalProperties: false
    vcloud-ext_LicensingReportSampleType:
      deprecated: true
      title: vcloud-ext_LicensingReportSampleType
      description: Represents a single licensing data collection point.
      type: object
      properties:
        observationDate:
          description: The date when the metrics were observed.
          type: string
          format: date-time
      required:
        - observationDate
      additionalProperties: false
    vcloud-ext_LicensingManagedServerType:
      deprecated: true
      title: vcloud-ext_LicensingManagedServerType
      description: Captures a single set of metrics for a managed server for a given
        sample.
      type: object
      properties:
        cpu:
          description: Number of CPUs in the server.
          type: integer
          format: int32
        memoryInstalled:
          description: Installed memory, in MB, in the server.
          type: integer
          format: int32
        vimObjectRef:
          description: Managed object reference of the server.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
      required:
        - cpu
        - memoryInstalled
        - vimObjectRef
      additionalProperties: false
    vcloud-ext_LicensingVirtualMachineType:
      deprecated: true
      title: vcloud-ext_LicensingVirtualMachineType
      description: Represents a single set of virtual machine metrics.
      type: object
      properties:
        cpu:
          description: Virtual machine CPUs use.
          type: integer
          format: int32
        memory:
          description: Virtual machine memory use.
          type: integer
          format: int32
        vimObjectRef:
          description: Managed object reference of the virtual machine.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
      required:
        - cpu
        - memory
        - vimObjectRef
      additionalProperties: false
    vcloud-ext_LicensingReportListType:
      deprecated: true
      title: vcloud-ext_LicensingReportListType
      description: Represents a list of licensing reports.
      type: object
      properties:
        report:
          description: Link to a licensing report.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_LinkType'
      additionalProperties: false
    vcloud-ext_DatastoreType:
      title: vcloud-ext_DatastoreType
      description: Represents datastore object.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            vimObjectRef:
              description: The VIM object reference to this datastore.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
            enabled:
              description: Indicates whether the datastore is enabled.
              type: boolean
            busy:
              description: Indicates whether the datastore is busy.
              type: boolean
            vAAIForFpEnabled:
              description: Indicates whether the VAAI native snapshots for Fast Provisioning
                is enabled.
              type: boolean
            thresholdYellowGb:
              description: Minimum free space, in GB, to trigger a yellow status for
                the datastore.
              type: integer
              format: int32
              minimum: 0
            thresholdRedGb:
              description: Minimum free space, in GB, to trigger a red status for
                the datastore.
              type: integer
              format: int32
              minimum: 0
            systemMessages:
              description: System messages for the datastore.
              type: string
            datastoreFsType:
              description: Filesystem type of the datastore.
              type: string
            vcDisplayName:
              description: vCenter display name of the datastore.
              type: string
            mountHost:
              description: Datastore mount host.
              type: string
            mountDirectory:
              description: Datastore mountpoint.
              type: string
            totalCapacityMb:
              description: Total capacity, in MB, of the datastore.
              type: number
              format: double
            totalCapacityGb:
              description: Total capacity, in GB, of the datastore.
              type: number
              format: double
            usedCapacityMb:
              description: Used capacity, in MB, of the datastore.
              type: number
              format: double
            usedCapacityGb:
              description: Used capacity, in GB, of the datastore.
              type: number
              format: double
            usedCapacityPercent:
              description: Used capacity of the datastore, as a percentage.
              type: number
              format: double
            provisionedSpaceMb:
              description: Provisioned capacity, in MB, of the datastore.
              type: number
              format: double
            provisionedSpaceGb:
              description: Provisioned capacity, in GB, of the datastore.
              type: number
              format: double
            requestedStorageMb:
              description: Requested storage, in MB, for all the vCloud Director VMs
                on the datastore.
              type: number
              format: double
            requestedStorageGb:
              description: Requested storage, in GB, for all the vCloud Director VMs
                on the datastore.
              type: number
              format: double
            vimPropertyPageUrl:
              description: URL to the VIM property page of the datastore host.
              type: string
            members:
              description: Member datastores of a datastore cluster. Standalone datastore
                has empty collection.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
          required:
            - thresholdYellowGb
            - thresholdRedGb
          additionalProperties: false
    vcloud-ext_VMWStorageProfileType:
      title: vcloud-ext_VMWStorageProfileType
      description: Represents a vCenter storage profile.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: The name of the storage profile.
              type: string
            moRef:
              description: The vSphere managed object reference of the storage profile.
              type: string
            vimObjectType:
              description: The vSphere type of the object.
              type: string
            freeStorageMb:
              description: Free storage in MB of this storage profile.
              type: number
              format: double
            totalStorageMb:
              description: Total storage in MB of this storage profile.
              type: number
              format: double
            dataStoreRefs:
              description: vSphere datastores that support this storage profile.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
          required:
            - name
          additionalProperties: false
    vcloud-ext_VMWStorageProfilesType:
      title: vcloud-ext_VMWStorageProfilesType
      description: Represents a group of vCenter storage profiles.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vMWStorageProfile:
              description: A vCenter storage profile.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VMWStorageProfileType'
          additionalProperties: false
    vcloud-ext_VimObjectRefListType:
      title: vcloud-ext_VimObjectRefListType
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vimObjectRefs:
              description: A list of VimServerObjRef objects.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefsType'
          required:
            - vimObjectRefs
          additionalProperties: false
    vcloud-ext_VMWProviderVdcResourcePoolSetType:
      title: vcloud-ext_VMWProviderVdcResourcePoolSetType
      description: Represents backing resource pool set
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vMWProviderVdcResourcePool:
              description: The backing resource pool set
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VMWProviderVdcResourcePoolType'
          additionalProperties: false
    vcloud-ext_VMWProviderVdcResourcePoolType:
      title: vcloud-ext_VMWProviderVdcResourcePoolType
      description: Represents backing resource pool for provider vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            primary:
              deprecated: true
              description: True if this is primary resource pool for this provider
                vDC. This attribute has been deprecated since version 29.0.
              type: boolean
            resourcePoolVimObjectRef:
              description: Vim object reference to resource pool
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
            resourcePoolRef:
              description: Reference to resource pool
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            enabled:
              description: Resource pool enabled status
              type: boolean
          required:
            - resourcePoolVimObjectRef
            - resourcePoolRef
            - enabled
          additionalProperties: false
    vcloud-ext_VMWDiscoveredResourcePoolsType:
      title: vcloud-ext_VMWDiscoveredResourcePoolsType
      description: A list of vCenter Resource Pools that are valid for adoption by
        VDCs.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vMWDiscoveredResourcePool:
              description: A reference to a vCenter Resource Pool valid for adoption
                by a VDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VMWDiscoveredResourcePoolType'
          additionalProperties: false
    vcloud-ext_VMWDiscoveredResourcePoolType:
      title: vcloud-ext_VMWDiscoveredResourcePoolType
      description: Represents a Resource Pool that is a candidate for adoption by
        a VDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            name:
              description: The name of the vCenter Resource Pool.
              type: string
            validCandidate:
              description: Whether this resource satisfies the vCD rules that makes
                it a valid candidate to back an Organization VDC.
              type: boolean
            resourcePoolVimObjectRef:
              description: Vim object reference to resource pool
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
          required:
            - name
            - validCandidate
            - resourcePoolVimObjectRef
          additionalProperties: false
    vcloud-ext_UpdateResourcePoolSetParamsType:
      title: vcloud-ext_UpdateResourcePoolSetParamsType
      description: Parameters for updating resource pools backing a Provider vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            addItem:
              description: Reference to a secondary resource pool to add to the Provider
                vDC resource pool set.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
            deleteItem:
              description: Reference to a secondary resource pool to delete from the
                Provider vDC resource pool set.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_OrganizationResourcePoolSetType:
      title: vcloud-ext_OrganizationResourcePoolSetType
      description: Represents a set of resource pools that back an organization vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            resourcePoolVimObjectRef:
              description: Vim object reference to an organization resource pool.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
          additionalProperties: false
    vcloud-ext_VmVimInfoType:
      title: vcloud-ext_VmVimInfoType
      description: Represents a vSphere VM information.
      type: object
      properties:
        vmVimObjectRef:
          description: Reference to a vim vm object.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
        datastoreVimObjectRef:
          description: The datastore where the VM's configuration files are stored.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
        vmDiskDatastores:
          description: The datastore where the VM disk's files are stored.
          type: array
          items:
            $ref: '#/components/schemas/vcloud-ext_DiskDatastoreType'
        hostVimObjectRef:
          description: The host for this VM.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
        virtualDisksMaxChainLength:
          description: The maximum chain length of the VM's virtual disks.
          type: integer
          format: int32
      required:
        - vmVimObjectRef
        - datastoreVimObjectRef
        - vmDiskDatastores
        - hostVimObjectRef
        - virtualDisksMaxChainLength
      additionalProperties: false
    vcloud-ext_StrandedItemVimObjectType:
      title: vcloud-ext_StrandedItemVimObjectType
      description: Represents a stranded item for VIM object.
      type: object
      properties:
        name:
          description: Contains the name of the VIM object.
          type: string
        errorMessage:
          description: The reason for why the item failed on deletion.
          type: string
        vimObjectRef:
          description: Vim object reference to a resource pool to which the virtual
            machine will be migrated. This parameter is optional. If it is not provided,
            the system will automatically choose a target resource pool and migrate
            the VMs to it.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
      required:
        - name
        - vimObjectRef
      additionalProperties: false
    vcloud-ext_StrandedItemVimObjectsType:
      title: vcloud-ext_StrandedItemVimObjectsType
      description: Represents a collection of StrandedItemVimObject.
      type: object
      properties:
        strandedItemVimObject:
          description: A stranded item VimObject.
          type: array
          items:
            $ref: '#/components/schemas/vcloud-ext_StrandedItemVimObjectType'
      additionalProperties: false
    vcloud-ext_StrandedItemType:
      title: vcloud-ext_StrandedItemType
      description: Represents the stranded item.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            entityType:
              description: The type of the stranded item.
              type: string
            deletionDate:
              description: Date when the object was deleted from vCD.
              type: string
              format: date-time
            errorMessage:
              description: The reason why the deletion failed.
              type: string
            parent:
              description: A reference to the parent stranded item.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            strandedItemVimObjects:
              description: A collection of stranded item VimObjects.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_StrandedItemVimObjectsType'
          additionalProperties: false
    vcloud-ext_UpdateProviderVdcStorageProfilesParamsType:
      title: vcloud-ext_UpdateProviderVdcStorageProfilesParamsType
      description: Parameters for request to add or remove Provider vDC storage profiles.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            addStorageProfile:
              description: Name of the storage profile to add to the Provider vDC.
              type: array
              items:
                type: string
            removeStorageProfile:
              description: A reference to the Provider vDC storage profile to remove
                from the Provider vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_ProviderVdcMergeParamsType:
      title: vcloud-ext_ProviderVdcMergeParamsType
      description: A list of Provider vDCs to merge with the target Provider vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            providerVdcReference:
              description: Reference to a Provider vDC to be merged with the target
                Provider vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - providerVdcReference
          additionalProperties: false
    vcloud-ext_VSphereWebClientUrlType:
      title: vcloud-ext_VSphereWebClientUrlType
      description: Represents the vSphere Web Client URL of a VIM object.
      type: object
      properties:
        uRL:
          description: URL to open the VIM object in vSphere Web Client.
          type: string
      required:
        - uRL
      additionalProperties: false
    vcloud-ext_HostObjectRefType:
      title: vcloud-ext_HostObjectRefType
      description: A reference to a host in vCenter inventory.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
        - type: object
          properties:
            username:
              description: Username of the ESX/ESXi host Administrator.
              type: string
            password:
              description: Password of the ESX/ESXi host Administrator, in cleartext.
              type: string
          required:
            - username
            - password
          additionalProperties: false
    vcloud-ext_HostObjectRefsType:
      title: vcloud-ext_HostObjectRefsType
      description: List of HostObjectRefType elements.
      type: object
      properties:
        hostObjectRef:
          description: A reference to an ESX/ESXi host.
          type: array
          items:
            $ref: '#/components/schemas/vcloud-ext_HostObjectRefType'
      additionalProperties: false
    vcloud-ext_RightsType:
      title: vcloud-ext_RightsType
      description: Collection of rights.
      type: object
      properties:
        right:
          description: Right that is part of this collection.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_RightType'
      additionalProperties: false
    vcloud-ext_UpdateRightsParamsType:
      title: vcloud-ext_UpdateRightsParamsType
      description: Parameters for updating right collection.
      type: object
      properties:
        addRight:
          description: If right with the same name does not exist it will be added.
            If not the right will be simply updated.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_RightType'
        removeRight:
          description: Right name to delete if it exists.
          type: array
          items:
            type: string
      additionalProperties: false
    vcloud-ext_RightRefsType:
      title: vcloud-ext_RightRefsType
      description: Container for ReferenceType elements that reference the predefined
        RightType objects.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            right:
              description: ReferenceType element that references a predefined RightType
                object.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_EntityReferencesType:
      title: vcloud-ext_EntityReferencesType
      description: Container for references to entities.
      type: object
      additionalProperties: false
    vcloud-ext_EntityRightsType:
      title: vcloud-ext_EntityRightsType
      description: Container for an entity and its list of rights.
      type: object
      properties:
        rights:
          description: References to entity rights.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_RightRefsType'
      required:
        - rights
      additionalProperties: false
    vcloud-ext_UserEntityRightsType:
      title: vcloud-ext_UserEntityRightsType
      description: Container for EntityRights elements. Each element contains a reference
        to an entity and a list of user rights that the entity supports.
      type: object
      properties:
        entityRights:
          description: Single EntityRightsType
          type: array
          items:
            $ref: '#/components/schemas/vcloud-ext_EntityRightsType'
      additionalProperties: false
    vcloud-ext_MigrateParamsType:
      title: vcloud-ext_MigrateParamsType
      description: Parameters that control virtual machine migration.
      type: object
      properties:
        vmRef:
          description: Entity object reference to a virtual machine which will be
            migrated. At least one Vm should be provided for migrating to the target
            resource pool.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_ReferenceType'
        resourcePoolRef:
          description: Vim object reference to a resource pool to which the virtual
            machine will be migrated. This parameter is optional. If it is not provided,
            the system will automatically choose a target resource pool and migrate
            the VMs to it.
          allOf:
            - $ref: '#/components/schemas/vcloud-ext_VimObjectRefType'
      required:
        - vmRef
        - resourcePoolRef
      additionalProperties: false
    vcloud-ext_VMWVdcTemplateSpecificationType:
      title: vcloud-ext_VMWVdcTemplateSpecificationType
      allOf:
        - $ref: '#/components/schemas/vcloud_VdcSpecificationGroup'
        - type: object
          properties:
            thinProvision:
              description: Boolean to request thin provisioning. Request will be honored
                only if the underlying datastore supports it. Thin provisioning saves
                storage space by committing it on demand. This allows over\-allocation
                of storage.
              type: boolean
            fastProvisioningEnabled:
              description: Boolean to request fast provisioning. Request will be honored
                only if the underlying datastore supports it. Fast provisioning can
                reduce the time it takes to create virtual machines by using vSphere
                linked clones. If you disable fast provisioning, all provisioning
                operations will result in full clones.
              type: boolean
          additionalProperties: false
    vcloud-ext_AutomaticNetworkPoolReferenceType:
      title: vcloud-ext_AutomaticNetworkPoolReferenceType
      type: object
      additionalProperties: false
    vcloud-ext_VMWAllocationPoolVdcTemplateSpecificationType:
      title: vcloud-ext_VMWAllocationPoolVdcTemplateSpecificationType
      description: Specification for a VDC template using the AllocationPool allocation
        model.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateSpecificationType'
        - $ref: '#/components/schemas/vcloud_AllocationPoolVdcSpecificationGroup'
        - type: object
          additionalProperties: false
    vcloud-ext_VMWAllocationVappVdcTemplateSpecificationType:
      title: vcloud-ext_VMWAllocationVappVdcTemplateSpecificationType
      description: Specification for a VDC template using the AllocationVApp allocation
        model.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateSpecificationType'
        - $ref: '#/components/schemas/vcloud_AllocationVAppVdcSpecificationGroup'
        - type: object
          additionalProperties: false
    vcloud-ext_VMWReservationPoolVdcTemplateSpecificationType:
      title: vcloud-ext_VMWReservationPoolVdcTemplateSpecificationType
      description: Specification for a VDC template using the ReservationPool allocation
        model.
      allOf:
        - $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateSpecificationType'
        - $ref: '#/components/schemas/vcloud_ReservationPoolVdcSpecificationGroup'
        - type: object
          additionalProperties: false
    vcloud-ext_VMWVdcTemplateType:
      title: vcloud-ext_VMWVdcTemplateType
      description: A reference to a VDC template.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            tenantName:
              description: Display name of the VDC template.
              type: string
            tenantDescription:
              description: Description of the VDC template.
              type: string
            providerVdcReference:
              description: A reference to a Provider VDC from which this organization
                VDC can be provisioned.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateProviderVdcSpecificationType'
            vdcTemplateSpecification:
              description: A reference to the specification for a VDC template object.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateSpecificationType'
          required:
            - tenantName
            - tenantDescription
            - providerVdcReference
            - vdcTemplateSpecification
          additionalProperties: false
    vcloud-ext_VMWVdcTemplateProviderVdcSpecificationType:
      title: vcloud-ext_VMWVdcTemplateProviderVdcSpecificationType
      description: A reference to a Provider VDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_ReferenceType'
        - type: object
          properties:
            binding:
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateBindingType'
          additionalProperties: false
    vcloud-ext_VMWVdcTemplateBindingType:
      title: vcloud-ext_VMWVdcTemplateBindingType
      description: A Binding pairs a Name element that contains a user\-specified
        identifier in URN format with a Value element that contains a reference to
        an object. The Name can then be used anywhere in the request where a reference
        to that type of object is allowed. For example, when specifying multiple Provider
        VDCs in a VMWVdcTemplate, create a Binding where the Value is a reference
        to an external network in a candidate Provider VDC, then use the Name from
        that binding in place of the href attribute required by the Network element
        in the GatewayConfiguration of the VdcTemplateSpecification. When the template
        is instantiated, the Name is replaced by the network reference in the Value
        part of the Binding associated with the Provider VDC that the system selects
        during instantiation.
      type: object
      properties:
        name:
          type: string
          format: uri
        value:
          allOf:
            - $ref: '#/components/schemas/vcloud_ReferenceType'
      additionalProperties: false
    vcloud-ext_VMWVdcTemplatesType:
      title: vcloud-ext_VMWVdcTemplatesType
      description: Container for VMWVdcTemplateType
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vMWVdcTemplate:
              description: A reference to a VDC template object.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VMWVdcTemplateType'
          additionalProperties: false
    vcloud-ext_VMWVdcTemplateListType:
      title: vcloud-ext_VMWVdcTemplateListType
      description: Represents a list of VDC templates.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vMWVdcTemplate:
              description: Reference to a VDC template.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_VMWHostGroupType:
      title: vcloud-ext_VMWHostGroupType
      description: HostGroup identifies a list of references to hosts in this resource
        pool to which VM\-Host affinity rules can apply. VM\-Host affinity rules determine
        placement of virtual machines on hosts in a cluster.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            hosts:
              description: List of hosts in this host group
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VMWHostReferencesType'
          required:
            - hosts
          additionalProperties: false
    vcloud-ext_VMWHostGroupsType:
      title: vcloud-ext_VMWHostGroupsType
      description: List of host groups in this resource pool.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            hostGroup:
              description: List of host groups in this resource pool.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VMWHostGroupType'
          required:
            - hostGroup
          additionalProperties: false
    vcloud-ext_VMWVmHostAffinityRuleType:
      title: vcloud-ext_VMWVmHostAffinityRuleType
      description: A VM\-Host affinity rule controls the placement of VMs on hosts.
      allOf:
        - $ref: '#/components/schemas/vcloud_AffinityRuleType'
        - type: object
          properties:
            hostGroupName:
              description: The name of Host group on which virtual machines defined
                in VmGroupName may or may not be placed.
              type: string
            vmGroupName:
              description: The name of the Virtual Machine group to which this rule
                applies.
              type: string
          required:
            - hostGroupName
            - vmGroupName
          additionalProperties: false
    vcloud-ext_VMWVmHostAffinityRulesType:
      title: vcloud-ext_VMWVmHostAffinityRulesType
      description: VmHostAffinityRules in this resource pool.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vmHostAffinityRule:
              description: A VM\-Host affinity rule controls the placement of VMs
                on hosts.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VMWVmHostAffinityRuleType'
          required:
            - vmHostAffinityRule
          additionalProperties: false
    vcloud-ext_VMWNamedVmGroupType:
      title: vcloud-ext_VMWNamedVmGroupType
      description: Container for references to VM Groups in the system that have identical
        names. Affinity between a VM Group and a host is based on the group name,
        so all VM groups with identical names are subject to the same set of affinity
        rules.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vMWVmGroupReferences:
              description: References to VM Groups that have identical names.
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_VMWVmGroupReferencesType'
          required:
            - vMWVmGroupReferences
          additionalProperties: false
    vcloud-ext_VMWVmGroupReferencesType:
      title: vcloud-ext_VMWVmGroupReferencesType
      description: References to VM Groups that have identical names.
      type: object
      properties:
        vmGroupReference:
          description: Reference to a VM group.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_ReferenceType'
      additionalProperties: false
    vcloud-ext_VMWVmGroupType:
      title: vcloud-ext_VMWVmGroupType
      description: VmGroup identifies a group of VMs in this resource pool to which
        VM\-Host affinity rules can be applied. VM\-Host affinity rules control placement
        of virtual machines on hosts in a resource pool.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            vmCount:
              description: Number of VMs in this VM group
              type: integer
              format: int32
          required:
            - vmCount
          additionalProperties: false
    vcloud-ext_VMWVmGroupsType:
      title: vcloud-ext_VMWVmGroupsType
      description: List of VM groups in this resource pool.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vmGroup:
              description: List of vm groups in this resource pool.
              type: array
              items:
                $ref: '#/components/schemas/vcloud-ext_VMWVmGroupType'
          required:
            - vmGroup
          additionalProperties: false
    vcloud-ext_DatastoresType:
      title: vcloud-ext_DatastoresType
      description: Represents a list of datastores.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            datastore:
              description: Reference to a datastore.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud-ext_TenantMigrationParamsType:
      title: vcloud-ext_TenantMigrationParamsType
      description: Represents parameters for moving tenant entities.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            orgs:
              description: List of organizations to be migrated in this operation
              allOf:
                - $ref: '#/components/schemas/vcloud_OrgsType'
            sourceDatastores:
              description: List of datastores from which organization storage resources
                should be migrated
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_DatastoresType'
            targetDatastores:
              description: List of datastores to which organization storage resources
                should be migrated
              allOf:
                - $ref: '#/components/schemas/vcloud-ext_DatastoresType'
          additionalProperties: false
    vcloud_CatalogType:
      title: vcloud_CatalogType
      description: Represents the user view of a Catalog object.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            owner:
              description: Catalog owner.
              allOf:
                - $ref: '#/components/schemas/vcloud_OwnerType'
            catalogItems:
              description: Container for CatalogItem elements.
              allOf:
                - $ref: '#/components/schemas/vcloud_CatalogItemsType'
            isPublished:
              description: True if the catalog is shared with all other organizations
                in the system. This value is read\-only in the user view. To modify
                it, an administrator must use the publish link in the admin view of
                the catalog.
              type: boolean
            dateCreated:
              description: Creation date and time of the catalog.
              type: string
              format: date-time
            versionNumber:
              description: Represents the current version number of the catalog.
              type: integer
              format: int64
          additionalProperties: false
    vcloud_CopyOrMoveCatalogItemParamsType:
      title: vcloud_CopyOrMoveCatalogItemParamsType
      description: Parameters for a copyCatalogItem or moveCatalogItem request.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            source:
              description: Reference to the source catalog item to copy or move from.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - source
          additionalProperties: false
    vcloud_PublishCatalogParamsType:
      title: vcloud_PublishCatalogParamsType
      description: Parameters required when sharing a catalog with other organizations.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isPublished:
              description: A value of true makes this catalog available to the administrators
                in all other organizations in the system. A value of false revokes
                that availability. To share this catalog in your own organization,
                use controlAccess.
              type: boolean
          required:
            - isPublished
          additionalProperties: false
    vcloud_CatalogItemType:
      title: vcloud_CatalogItemType
      description: Contains a reference to a VappTemplate or Media object and related
        metadata.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            size:
              description: Size of the catalog item, in bytes. It is optional for
                a vApp template.
              type: integer
              format: int64
            entity:
              description: A reference to a VAppTemplate or Media object.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            dateCreated:
              description: Creation date and time of the catalog item.
              type: string
              format: date-time
            versionNumber:
              description: Represents the current version number of the catalog item
              type: integer
              format: int64
          required:
            - entity
          additionalProperties: false
    vcloud_CatalogItemsType:
      title: vcloud_CatalogItemsType
      description: Container for references to catalog items.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            catalogItem:
              description: Reference to a catalog item.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_PropertyType:
      title: vcloud_PropertyType
      description: Contains key/value pair as property.
      type: object
      properties:
        key:
          description: The key of the property.
          type: string
        value:
          type: string
      required:
        - key
        - value
      additionalProperties: false
    vcloud_VCloudExtensionType:
      title: vcloud_VCloudExtensionType
      description: General purpose extension element. Not related to extension services.
      type: object
      properties:
        required:
          description: True if the request should fail when the server does not understand
            the extension.
          type: boolean
      additionalProperties: false
    vcloud_VCloudExtensibleType:
      title: vcloud_VCloudExtensibleType
      description: A base abstract type for all complex types that support extensions.
      type: object
      properties:
        vCloudExtension:
          description: An optional extension element that can contain an arbitrary
            number of elements and attributes. Not related to extension services.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_VCloudExtensionType'
      additionalProperties: false
    vcloud_CommonErrorAttributes:
      title: vcloud_CommonErrorAttributes
      type: object
      properties:
        message:
          description: An one line, human\-readable message describing the error that
            occurred.
          type: string
        majorErrorCode:
          description: The class of the error. Matches the HTTP status code.
          type: integer
          format: int32
        minorErrorCode:
          description: Resource\-specific error code.
          type: string
        vendorSpecificErrorCode:
          description: A vendor\- or implementation\-specific error code that can
            reference specific modules or source lines for diagnostic purposes.
          type: string
      required:
        - message
        - majorErrorCode
        - minorErrorCode
      additionalProperties: false
    vcloud_ErrorType:
      title: vcloud_ErrorType
      description: The standard error message type used in the vCloud REST API.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - $ref: '#/components/schemas/vcloud_CommonErrorAttributes'
        - type: object
          properties:
            stackTrace:
              description: The stack trace of the exception.
              type: string
            tenantError:
              description: The tenant view of the error, when the containing error
                is an administrator view of the error.
              allOf:
                - $ref: '#/components/schemas/vcloud_TenantErrorType'
          additionalProperties: false
    vcloud_TenantErrorType:
      title: vcloud_TenantErrorType
      description: The tenant view of the error, when the containing error is an administrator
        view of the error.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - $ref: '#/components/schemas/vcloud_CommonErrorAttributes'
        - type: object
          additionalProperties: false
    vcloud_ResultType:
      title: vcloud_ResultType
      description: The result of operations.
      type: object
      properties:
        resultContent:
          description: An optional element that can be used to hold the result of
            operations.
          type: string
      additionalProperties: false
    vcloud_LinkType:
      title: vcloud_LinkType
      description: Extends reference type by adding relation attribute. Defines a
        hyper\-link with a relationship, hyper\-link reference, and an optional MIME
        type.
      allOf:
        - $ref: '#/components/schemas/vcloud_ReferenceType'
        - type: object
          properties:
            rel:
              description: Defines the relationship of the link to the object that
                contains it. A relationship can be the name of an operation on the
                object, a reference to a contained or containing object, or a reference
                to an alternate representation of the object. The relationship value
                implies the HTTP verb to use when you use the link's href as a request
                URL. See the vCloud API Programming Guide for a list of links and
                link relations.
              type: string
          required:
            - rel
          additionalProperties: false
    vcloud_ResourceType:
      title: vcloud_ResourceType
      description: The base type for all objects in the vCloud model. Has an optional
        list of links and href and type attributes.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            href:
              description: The URI of the entity.
              type: string
              format: uri
            type:
              description: The MIME type of the entity.
              type: string
            link:
              description: A reference to an entity or operation associated with this
                object.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LinkType'
          additionalProperties: false
    vcloud_IdentifiableResourceType:
      title: vcloud_IdentifiableResourceType
      description: The base type for all resource types which contain an id attribute.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            id:
              description: The entity identifier, expressed in URN format. The value
                of this attribute uniquely identifies the entity, persists for the
                life of the entity, and is never reused.
              type: string
            operationKey:
              description: Optional unique identifier to support idempotent semantics
                for create and delete operations.
              type: string
          additionalProperties: false
    vcloud_ParamsType:
      title: vcloud_ParamsType
      description: A basic type used to specify request parameters.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: Typically used to name or identify the subject of the request.
                For example, the name of the object being created or modified.
              type: string
            description:
              description: Optional description.
              type: string
          additionalProperties: false
    vcloud_ReferenceType:
      title: vcloud_ReferenceType
      description: A reference to a resource. Contains an href attribute and optional
        name and type attributes.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            href:
              description: Contains the URI to the entity.
              type: string
              format: uri
            id:
              description: The resource identifier, expressed in URN format. The value
                of this attribute uniquely identifies the resource, persists for the
                life of the resource, and is never reused.
              type: string
            type:
              description: Contains the type of the the entity.
              type: string
            name:
              description: Contains the name of the the entity.
              type: string
          required:
            - href
          additionalProperties: false
    vcloud_ResourceReferenceType:
      title: vcloud_ResourceReferenceType
      description: Represents a reference to a resource. Contains an href attribute,
        a resource status attribute, and optional name and type attributes.
      allOf:
        - $ref: '#/components/schemas/vcloud_ReferenceType'
        - type: object
          properties:
            status:
              description: Status of a resource.
              type: integer
              format: int32
          additionalProperties: false
    vcloud_ContainerType:
      title: vcloud_ContainerType
      description: Container for query result sets.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            name:
              description: Query name that generated this result set.
              type: string
            page:
              description: Page of the result set that this container holds. The first
                page is page number 1.
              type: integer
              format: int32
            pageSize:
              description: Page size, as a number of records or references.
              type: integer
              format: int32
            total:
              description: Total number of records or references in the container.
              type: integer
              format: int64
            record:
              type: array
              items:
                $ref: '#/components/schemas/QueryResultRecordType'
            reference:
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_CapacityType:
      title: vcloud_CapacityType
      description: Represents the capacity of a given resource.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            units:
              description: "Units in which capacity is allocated. For CPU capacity,\
                \ one of:  \n MHz  \n GHz  \n For memory capacity, one of:  \n MB\
                \  \n GB"
              type: string
            allocated:
              description: Capacity that is committed to be available.
              type: integer
              format: int64
            limit:
              description: Capacity limit relative to the value specified for Allocation.
                It must not be less than that value. If it is greater than that value,
                it implies overprovisioning.
              type: integer
              format: int64
          required:
            - units
            - limit
          additionalProperties: false
    vcloud_CapacityWithUsageType:
      title: vcloud_CapacityWithUsageType
      description: Represents a capacity and usage of a given resource.
      allOf:
        - $ref: '#/components/schemas/vcloud_CapacityType'
        - type: object
          properties:
            reserved:
              description: Capacity reserved.
              type: integer
              format: int64
            used:
              description: Capacity used. If the VDC AllocationModel is ReservationPool,
                this number represents the percentage of the reservation that is in
                use. For all other allocation models, it represents the percentage
                of the allocation that is in use.
              type: integer
              format: int64
          additionalProperties: false
    vcloud_AccessSettingType:
      title: vcloud_AccessSettingType
      description: Controls access to the resource.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            accessLevel:
              description: "The access level for the subject. One of:  \n FullControl\
                \  \n Change  \n ReadOnly  \n Deny (only for a VDC resource)"
              type: string
          required:
            - accessLevel
          additionalProperties: false
    vcloud_ExternalSubjectType:
      title: vcloud_ExternalSubjectType
      description: A reference to a user or group managed by an identity provider
        configured for use in this organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            subjectId:
              description: The primary key that your identity provider uses to uniquely
                identify the user or group referenced in SubjectId.
              type: string
            isUser:
              description: If true, SubjectID is a reference to a user defined by
                this organization's identity provider. If false or empty, SubjectID
                is a reference to a group defined by this organization's identity
                provider.
              type: boolean
            idpType:
              description: 'The type of identity provider for example: OAUTH, SAML,
                LDAP etc for this SubjectID.'
              type: string
          required:
            - subjectId
            - isUser
            - idpType
          additionalProperties: false
    vcloud_AccessSettingsType:
      title: vcloud_AccessSettingsType
      description: A list of access settings for a resource.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            accessSetting:
              description: Access setting for a resource.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_AccessSettingType'
          required:
            - accessSetting
          additionalProperties: false
    vcloud_ControlAccessParamsType:
      title: vcloud_ControlAccessParamsType
      description: Specifies access controls for a resource.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isSharedToEveryone:
              description: If true, the resource is shared with everyone in the organization.
                Defaults to false.
              type: boolean
            everyoneAccessLevel:
              description: "If IsSharedToEveryone is true, this element must be present\
                \ to specify the access level. for all members of the organization.\
                \ One of:  \n FullControl  \n Change  \n ReadOnly"
              type: string
            accessSettings:
              description: The access settings to be applied if IsSharedToEveryone
                is false. Required on create and modify if IsSharedToEveryone is false.
              allOf:
                - $ref: '#/components/schemas/vcloud_AccessSettingsType'
          required:
            - isSharedToEveryone
          additionalProperties: false
    vcloud_OwnerType:
      title: vcloud_OwnerType
      description: Represents the owner of this entity.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            user:
              description: Reference to the user who is the owner of this entity.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - user
          additionalProperties: false
    vcloud_ReferencesType:
      title: vcloud_ReferencesType
      description: Container for query results returned in references format.
      allOf:
        - $ref: '#/components/schemas/vcloud_ContainerType'
        - type: object
          additionalProperties: false
    vcloud_QueryListType:
      title: vcloud_QueryListType
      description: Container for the list of typed queries available to the requesting
        user.
      allOf:
        - $ref: '#/components/schemas/vcloud_ContainerType'
        - type: object
          additionalProperties: false
    vcloud_MetadataDomainTagType:
      title: vcloud_MetadataDomainTagType
      description: A value of SYSTEM places this MetadataEntry in the SYSTEM domain.
        Omit or leave empty to place this MetadataEntry in the GENERAL domain.
      type: object
      properties:
        visibility:
          description: "One of:  \n PRIVATE  \n READONLY"
          type: string
        value:
          type: string
      required:
        - visibility
        - value
      additionalProperties: false
    vcloud_MetadataEntryType:
      title: vcloud_MetadataEntryType
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            domain:
              description: A value of SYSTEM places this MetadataEntry in the SYSTEM
                domain. Omit or leave empty to place this MetadataEntry in the GENERAL
                domain.
              allOf:
                - $ref: '#/components/schemas/vcloud_MetadataDomainTagType'
            key:
              description: An arbitrary key name. Length cannot exceed 256 UTF\-8
                characters.
              type: string
            typedValue:
              description: "One of:  \n MetadataStringValue  \n MetadataNumberValue\
                \  \n MetadataBooleanValue  \n MetadataDateTimeValue"
              allOf:
                - $ref: '#/components/schemas/MetadataTypedValue'
          required:
            - domain
            - key
            - typedValue
          additionalProperties: false
    vcloud_MetadataTypedValue:
      title: vcloud_MetadataTypedValue
      description: "One of:  \n MetadataStringValue  \n MetadataNumberValue  \n MetadataBooleanValue\
        \  \n MetadataDateTimeValue"
      type: object
      properties:
        _type:
          type: string
          enum:
            - MetadataStringValue
            - MetadataNumberValue
            - MetadataBooleanValue
            - MetadataDateTimeValue
      required:
        - _type
      additionalProperties: false
    vcloud_MetadataStringValue:
      title: vcloud_MetadataStringValue
      description: UTF\-8 character set. Strings longer than 1000 characters cannot
        be searched for in a query.
      allOf:
        - $ref: '#/components/schemas/vcloud_MetadataTypedValue'
        - type: object
          properties:
            value:
              type: string
          required:
            - value
          additionalProperties: false
    vcloud_MetadataNumberValue:
      title: vcloud_MetadataNumberValue
      description: A signed 8\-byte integer.
      allOf:
        - $ref: '#/components/schemas/vcloud_MetadataTypedValue'
        - type: object
          properties:
            value:
              type: integer
              format: int64
          required:
            - value
          additionalProperties: false
    vcloud_MetadataBooleanValue:
      title: vcloud_MetadataBooleanValue
      description: 'One of: 1, 0, true, false'
      allOf:
        - $ref: '#/components/schemas/vcloud_MetadataTypedValue'
        - type: object
          properties:
            value:
              type: boolean
          required:
            - value
          additionalProperties: false
    vcloud_MetadataDateTimeValue:
      title: vcloud_MetadataDateTimeValue
      description: UTC format. For example 2012\-06\-18T12:00:00\-05:00
      allOf:
        - $ref: '#/components/schemas/vcloud_MetadataTypedValue'
        - type: object
          properties:
            value:
              type: string
              format: date-time
          required:
            - value
          additionalProperties: false
    vcloud_MetadataType:
      title: vcloud_MetadataType
      description: User\-defined metadata associated with with an object.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            metadataEntry:
              description: A single metadata entry, including access domain and visibility
                controls.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_MetadataEntryType'
          additionalProperties: false
    vcloud_MetadataValueType:
      title: vcloud_MetadataValueType
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            domain:
              description: "One of:  \n GENERAL  \n SYSTEM"
              allOf:
                - $ref: '#/components/schemas/vcloud_MetadataDomainTagType'
            typedValue:
              allOf:
                - $ref: '#/components/schemas/MetadataTypedValue'
          required:
            - typedValue
          additionalProperties: false
    vcloud_FileUploadParamsType:
      title: vcloud_FileUploadParamsType
      description: Parameters for initializing file upload session.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            fileSize:
              description: Size in bytes of the file which will be uploaded.
              type: integer
              format: int64
          required:
            - fileSize
          additionalProperties: false
    vcloud_FileUploadSocketType:
      title: vcloud_FileUploadSocketType
      description: Parameters for initiating file upload.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            uploadLocation:
              description: URL where the file must be uploaded.
              type: string
            task:
              description: A task representing progress of the upload.
              allOf:
                - $ref: '#/components/schemas/vcloud_TaskType'
          additionalProperties: false
    vcloud_SmtpSecureModeType:
      title: vcloud_SmtpSecureModeType
      description: "Security protocol to use when connecting to the SMTP server. One\
        \ of:  \n startTls \\-\\- Use the STARTTLS protocol  \n ssl \\-\\- \\-Use\
        \ the SSL/TLS protocol  \n none \\-\\- Do not use any security protocol"
      type: string
      enum:
        - none
        - startTls
        - ssl
    vcloud_DiskType:
      title: vcloud_DiskType
      description: Represents an independent disk.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceEntityType'
        - type: object
          properties:
            size:
              description: "Size of the disk in bytes.  \n\n You must supply this\
                \ attribute in an update request, but you cannot change its value\
                \ after the object has been created."
              type: integer
              format: int64
            iops:
              description: IOPS request for the created disk
              type: integer
              format: int64
            busType:
              description: "Disk bus type expressed as a number. One of:  \n**5**\
                \ IDE bus  \n**6** SCSI bus (default)  \n**20** SATA bus  \n\n You\
                \ must supply this attribute in an update request, but you cannot\
                \ change its value after the object has been created."
              type: string
            busSubType:
              description: "Disk bus subtype expressed as a string. One of:  \n \"\
                \" (null) IDE, requires busType 5  \n**buslogic** BusLogic Parallel\
                \ SCSI controller, requires busType 6  \n**lsilogic** LSI Logic Parallel\
                \ SCSI controller, requires busType 6  \n**lsilogicsas** LSI Logic\
                \ SAS SCSI controller, requires busType 6  \n**VirtualSCSI** Paravirtual\
                \ SCSI controller, requires busType 6  \n**vmware.sata.ahci** SATA\
                \ controller, requires busType 20  \n\n You must supply this attribute\
                \ in an update request, but you cannot change its value after the\
                \ object has been created."
              type: string
            storageProfile:
              description: Storage profile of the disk.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            owner:
              description: The owner of the disk.
              allOf:
                - $ref: '#/components/schemas/vcloud_OwnerType'
          required:
            - size
          additionalProperties: false
    vcloud_DiskCreateParamsType:
      title: vcloud_DiskCreateParamsType
      description: Parameters for creating or updating an independent disk.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            disk:
              description: Parameters for creating or updating an independent disk.
              allOf:
                - $ref: '#/components/schemas/vcloud_DiskType'
            locality:
              description: If you supply a reference to a virtual machine, the system
                will use that information to attempt to optimize access to this disk
                from that virtual machine. See [KB 2105352](http://kb.vmware.com/kb/2105352).
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - disk
          additionalProperties: false
    vcloud_DiskAttachOrDetachParamsType:
      title: vcloud_DiskAttachOrDetachParamsType
      description: Parameters for attaching or detaching an independent disk.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            disk:
              description: A reference to the disk to attach or detach.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            busNumber:
              description: Bus number on which to place the disk controller. If empty
                or missing, the system assigns a bus number and a unit number on that
                bus.
              type: integer
              format: int32
            unitNumber:
              description: Unit number (slot) on the bus specified by BusNumber. Ignored
                if BusNumber is empty or missing.
              type: integer
              format: int32
          required:
            - disk
          additionalProperties: false
    vcloud_EntityType:
      title: vcloud_EntityType
      description: Basic entity type in the vCloud object model. Includes a name,
        an optional description, and an optional list of links.
      allOf:
        - $ref: '#/components/schemas/vcloud_IdentifiableResourceType'
        - type: object
          properties:
            name:
              description: The name of the entity.
              type: string
            description:
              description: Optional description.
              type: string
            tasks:
              description: A list of queued, running, or recently completed tasks
                associated with this entity.
              allOf:
                - $ref: '#/components/schemas/vcloud_TasksInProgressType'
          required:
            - name
          additionalProperties: false
    vcloud_EntityReferenceType:
      title: vcloud_EntityReferenceType
      description: A reference to a vCloud entity.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            id:
              description: The object identifier, expressed in URN format. The value
                of this attribute uniquely identifies the object, persists for the
                life of the object, and is never reused. This context\-free identifier
                can apply to any object in any system.
              type: string
            type:
              description: The type of the the referenced object.
              type: string
            name:
              description: The name of the referenced object.
              type: string
          required:
            - id
          additionalProperties: false
    vcloud_EntityLinkType:
      title: vcloud_EntityLinkType
      description: Extends EntityReference type by adding relation attribute.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityReferenceType'
        - type: object
          properties:
            rel:
              description: Defines the relationship of the link to the object that
                contains it. A relationship can be the name of an operation on the
                object, a reference to a contained or containing object, or a reference
                to an alternate representation of the object. The relationship value
                implies the HTTP verb to use when you use the link's href value as
                a request URL.
              type: string
          required:
            - rel
          additionalProperties: false
    vcloud_TasksInProgressType:
      title: vcloud_TasksInProgressType
      description: A list of queued, running, or recently completed tasks.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            task:
              description: A task.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_TaskType'
          additionalProperties: false
    vcloud_FileType:
      title: vcloud_FileType
      description: Represents a file to be transferred (uploaded or downloaded).
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            size:
              description: File size in bytes.
              type: integer
              format: int64
            bytesTransferred:
              description: Bytes that have been transferred.
              type: integer
              format: int64
            checksum:
              description: The checksum of the file.
              type: string
          additionalProperties: false
    vcloud_HybridOrgType:
      title: vcloud_HybridOrgType
      description: Lists links to hybrid operations and entities in the context of
        an Org.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          additionalProperties: false
    vcloud_ToCloudTunnelCreateParamsType:
      title: vcloud_ToCloudTunnelCreateParamsType
      description: Parameters for creating to\-the\-cloud tunnel
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            trafficType:
              description: Opaque string indicating the type of traffic (for example,
                "HBR")
              type: string
            destinationId:
              description: Opaque string identifying the destination server in the
                cloud
              type: string
            sourceId:
              description: A UUID identifying the vCTA on\-premise
              type: string
          required:
            - trafficType
            - destinationId
          additionalProperties: false
    vcloud_ToCloudTunnelType:
      title: vcloud_ToCloudTunnelType
      description: Describes to\-the\-cloud tunnel
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            trafficType:
              description: Opaque string indicating the type of traffic (for example,
                "HBR")
              type: string
            destinationId:
              description: Opaque string identifying the destination server in the
                cloud
              type: string
            sourceId:
              description: A UUID identifying the vCTA on\-premise
              type: string
          required:
            - trafficType
            - destinationId
          additionalProperties: false
    vcloud_AdminToCloudTunnelType:
      title: vcloud_AdminToCloudTunnelType
      description: Describes the administrator view of a to\-the\-cloud tunnel
      allOf:
        - $ref: '#/components/schemas/vcloud_ToCloudTunnelType'
        - type: object
          properties:
            destinationIpAddress:
              description: The IP address of the destination server in the cloud
              type: string
            destinationPort:
              description: The port number of the destination server in the cloud
              type: integer
              format: int32
            useSsl:
              description: Whether SSL protocol is used by the destination server
                in the cloud
              type: boolean
          required:
            - destinationIpAddress
            - destinationPort
            - useSsl
          additionalProperties: false
    vcloud_FromCloudTunnelCreateParamsType:
      title: vcloud_FromCloudTunnelCreateParamsType
      description: Parameters for creating from\-the\-cloud tunnel
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            trafficType:
              description: Opaque string indicating the type of traffic (for example,
                "HBR")
              type: string
            destinationId:
              description: Opaque string identifying the destination server on tenant
                premises
              type: string
            endpointTag:
              description: Opaque string identifying if a tunnel can have a shared
                port. If this value is not set, then the tunnel will be assigned an
                unique port
              type: string
            sourceId:
              description: A UUID identifying the vCTA on\-premise
              type: string
          required:
            - trafficType
            - destinationId
          additionalProperties: false
    vcloud_FromCloudTunnelType:
      title: vcloud_FromCloudTunnelType
      description: Describes from\-the\-cloud tunnel
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            trafficType:
              description: Opaque string indicating the type of traffic (for example,
                "HBR")
              type: string
            destinationId:
              description: Opaque string identifying the destination server on tenant
                premises
              type: string
            endpointTag:
              description: Opaque string identifying if a tunnel can have a shared
                port. If this value is not set, then the tunnel will be assigned an
                unique port
              type: string
            sourceId:
              description: A UUID identifying the vCTA on\-premise
              type: string
          required:
            - trafficType
            - destinationId
          additionalProperties: false
    vcloud_AdminFromCloudTunnelType:
      title: vcloud_AdminFromCloudTunnelType
      description: Describes the administrator view of a from\-the\-cloud tunnel
      allOf:
        - $ref: '#/components/schemas/vcloud_FromCloudTunnelType'
        - type: object
          properties:
            tunnelEndPoint:
              description: IP address and port to access the tunnel in the form of
                [ip\-address]:[port].
              type: string
          required:
            - tunnelEndPoint
          additionalProperties: false
    vcloud_FromCloudTunnelListenerProperties:
      title: vcloud_FromCloudTunnelListenerProperties
      type: object
      properties:
        port:
          description: The port number of the from\-the\-cloud tunnel listener
          type: integer
          format: int32
        trafficType:
          description: An opaque string indicating the type of traffic (for example,
            HBR)
          type: string
        endpointTag:
          description: Optional opaque string used in identifying a shared port for
            the tunnel. A shared port is associated with a (traffic type, endpoint
            tag) tuple.
          type: string
      required:
        - port
        - trafficType
      additionalProperties: false
    vcloud_FromCloudTunnelListenerCreateParamsType:
      title: vcloud_FromCloudTunnelListenerCreateParamsType
      description: Parameters for creating from\-the\-cloud tunnel listener
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - $ref: '#/components/schemas/vcloud_FromCloudTunnelListenerProperties'
        - type: object
          additionalProperties: false
    vcloud_FromCloudTunnelListenerType:
      title: vcloud_FromCloudTunnelListenerType
      description: Properties of a from\-the\-cloud tunnel listener. A from\-the\-cloud
        listener associates a port with a particular (traffic type, endpoint tag)
        tuple. Ports are unique and (traffic type, endpoint tag) tuples are unique.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - $ref: '#/components/schemas/vcloud_FromCloudTunnelListenerProperties'
        - type: object
          additionalProperties: false
    vcloud_FromCloudTunnelListenerListType:
      title: vcloud_FromCloudTunnelListenerListType
      description: A list of the existing from\-the\-cloud tunnel listeners.
      allOf:
        - $ref: '#/components/schemas/vcloud_ContainerType'
        - type: object
          properties:
            fromCloudTunnelListener:
              description: From\-the\-cloud tunnel listener
              type: array
              items:
                $ref: '#/components/schemas/vcloud_FromCloudTunnelListenerType'
          additionalProperties: false
    vcloud_HybridTicketType:
      title: vcloud_HybridTicketType
      description: Ticket for establishing a connection to Cloud Proxy.
      type: object
      properties:
        value:
          type: string
      required:
        - value
      additionalProperties: false
    vcloud_TunnelingApplicationRegisterParamsType:
      title: vcloud_TunnelingApplicationRegisterParamsType
      description: Parameters for registering cloud part of the tunneling application.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            trafficType:
              description: Opaque string identifying the type of traffic supported
                by the tunneling application
              type: string
            routingKey:
              description: AMQP routing key for this tunneling application
              type: string
            exchange:
              description: AMQP exchange that messages for this tunneling application
                are published to
              type: string
          required:
            - trafficType
            - routingKey
            - exchange
          additionalProperties: false
    vcloud_TunnelingApplicationType:
      title: vcloud_TunnelingApplicationType
      description: Describes cloud part of a tunneling application registered with
        VCD.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            trafficType:
              description: Opaque string identifying the type of traffic supported
                by the tunneling application
              type: string
            routingKey:
              description: AMQP routing key for this tunneling application
              type: string
            exchange:
              description: AMQP exchange that messages for this tunneling application
                are published to
              type: string
          required:
            - trafficType
            - routingKey
            - exchange
          additionalProperties: false
    vcloud_TunnelingApplicationListType:
      title: vcloud_TunnelingApplicationListType
      description: A list of registered tunneling applications.
      allOf:
        - $ref: '#/components/schemas/vcloud_ContainerType'
        - type: object
          properties:
            tunnelingApplication:
              description: Tunneling application
              type: array
              items:
                $ref: '#/components/schemas/vcloud_TunnelingApplicationType'
          additionalProperties: false
    vcloud_HybridSettingsType:
      title: vcloud_HybridSettingsType
      description: Public URL and certificate of the Cloud Proxy end point.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            cloudProxyBaseUri:
              description: Effective base URI for Cloud Proxy (wss) endpoint. By default
                this value is the same as the base URI for API endpoint. This value
                can be overridden by specifying CloudProxyBaseUriOverride.
              type: string
            cloudProxyBaseUriPublicCertChain:
              description: Effective SSL public certificate chain for the effective
                base URI for Cloud Proxy (wss) endpoint. The certificate chain is
                PEM encoded X.509 certificates. By default this value is the same
                as the public certificate chain for the API endpoint. This value can
                be overridden by specifying CloudProxyBaseUriPublicCertChainOverride.
                This value will be empty if URI is overridden but certificate is not.
              type: string
            cloudProxyBaseUriOverride:
              description: Base URI for Cloud Proxy (wss) endpoint. Leave empty to
                use the default.
              type: string
            cloudProxyBaseUriPublicCertChainOverride:
              description: SSL public certificate chain for the base URI for Cloud
                Proxy (wss) endpoint. The certificate chain must be PEM encoded X.509
                certificates. A Base URI override must be specified if this value
                is included in a request.
              type: string
            cloudProxyFromCloudTunnelHost:
              description: IP address or hostname of the effective host used for from\-the\-cloud
                tunnels.
              type: string
            cloudProxyFromCloudTunnelHostOverride:
              description: IP address or hostname of the host used for from\-the\-cloud
                tunnels. Leave empty to use default.
              type: string
          additionalProperties: false
    vcloud_MediaType:
      title: vcloud_MediaType
      description: Represents a Media object.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceEntityType'
        - type: object
          properties:
            imageType:
              description: 'Media image type. One of: iso, floppy'
              type: string
            size:
              description: Size of the media file, in bytes.
              type: integer
              format: int64
            owner:
              description: Media owner.
              allOf:
                - $ref: '#/components/schemas/vcloud_OwnerType'
            vdcStorageProfile:
              description: A reference to a storage profile to be used for this object.
                The specified storage profile must exist in the organization vDC that
                contains the object. If not specified, the default storage profile
                for the vDC is used.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - imageType
            - size
          additionalProperties: false
    vcloud_CloneMediaParamsType:
      title: vcloud_CloneMediaParamsType
      description: Parameters required by a cloneMedia request.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            source:
              description: Reference to a media object to copy.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            isSourceDelete:
              description: A value of true deletes the Source object after successful
                completion of the copy operation. Defaults to false if empty or missing.
              type: boolean
            vdcStorageProfile:
              description: A reference to a storage profile to be used for this object.
                The specified storage profile must exist in the organization vDC that
                contains the object. If not specified, the default storage profile
                for the vDC is used.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - source
          additionalProperties: false
    vcloud_TimeUnitType:
      title: vcloud_TimeUnitType
      description: An enumeration of time units that can be used to define a relative
        time
      type: string
      enum:
        - second
        - minute
        - hour
        - day
        - week
    vcloud_TimeType:
      title: vcloud_TimeType
      type: object
      additionalProperties: false
    vcloud_RelativeTimeType:
      title: vcloud_RelativeTimeType
      description: Specifies an earlier time relative to the current time
      allOf:
        - $ref: '#/components/schemas/vcloud_TimeType'
        - type: object
          properties:
            interval:
              description: numeric portion of time specification
              type: integer
            unit:
              description: time unit enumeration value
              allOf:
                - $ref: '#/components/schemas/vcloud_TimeUnitType'
          required:
            - interval
            - unit
          additionalProperties: false
    vcloud_AbsoluteTimeType:
      title: vcloud_AbsoluteTimeType
      description: Specifies an absolute time in UTC
      allOf:
        - $ref: '#/components/schemas/vcloud_TimeType'
        - type: object
          properties:
            time:
              description: absolute UTC time value
              type: string
              format: date-time
          required:
            - time
          additionalProperties: false
    vcloud_SimpleMetricType:
      title: vcloud_SimpleMetricType
      description: A simple scalar metric value
      type: object
      properties:
        name:
          description: name of metric
          type: string
        unit:
          description: Unit of measure for this metric
          type: string
        value:
          description: metric value
          type: string
      required:
        - name
        - unit
        - value
      additionalProperties: false
    vcloud_SampleType:
      title: vcloud_SampleType
      description: Represents a data point in a metric series
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        value:
          type: string
      additionalProperties: false
    vcloud_TimeSeriesMetricType:
      title: vcloud_TimeSeriesMetricType
      description: A sequence of metric values measured at specified times
      type: object
      properties:
        name:
          description: name of metric
          type: string
        unit:
          description: Unit of measure for this metric
          type: string
        expectedInterval:
          description: Integer number of seconds between samples.
          type: integer
          format: int32
        sample:
          type: array
          items:
            $ref: '#/components/schemas/vcloud_SampleType'
      required:
        - name
        - unit
        - expectedInterval
      additionalProperties: false
    vcloud_CurrentUsageSpecType:
      title: vcloud_CurrentUsageSpecType
      description: Specifies which current usage metrics to retrieve
      type: object
      properties:
        metricPattern:
          description: A metric name pattern. Asterisk matches any character or group
            of characters in a metric name.
          type: array
          items:
            type: string
      additionalProperties: false
    vcloud_CurrentUsageType:
      title: vcloud_CurrentUsageType
      description: A collection of simple metrics representing real time usage statistics
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            metric:
              type: array
              items:
                $ref: '#/components/schemas/vcloud_SimpleMetricType'
          additionalProperties: false
    vcloud_HistoricUsageSpecType:
      title: vcloud_HistoricUsageSpecType
      description: Specifies which historic usage metrics to retrieve
      type: object
      properties:
        metricPattern:
          description: A metric name pattern. Asterisk matches any character or group
            of characters in a metric name.
          type: array
          items:
            type: string
      additionalProperties: false
    vcloud_HistoricUsageType:
      title: vcloud_HistoricUsageType
      description: A collection of time\-based metrics representing historic usage
        statistics
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            metricSeries:
              type: array
              items:
                $ref: '#/components/schemas/vcloud_TimeSeriesMetricType'
          additionalProperties: false
    vcloud_MksTicketType:
      title: vcloud_MksTicketType
      description: A ticket and connection information for accessing the console of
        a VM.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            host:
              description: host (or proxy) through which the console connection is
                made
              type: string
            vmx:
              description: a reference to the VMX file of the VM for which this ticket
                was issued
              type: string
            ticket:
              description: screen ticket to use to authenticate the client
              type: string
            port:
              description: host port to be used for console access
              type: integer
              format: int32
          required:
            - host
            - vmx
            - ticket
            - port
          additionalProperties: false
    vcloud_MultisiteType:
      title: vcloud_MultisiteType
      description: site vCloud configuration.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            restEndpoint:
              description: The URI of the REST API end\-point for the site.
              type: string
              format: uri
            baseUiEndpoint:
              deprecated: true
              description: The base URI of the UI end\-point for the site.
              type: string
              format: uri
            tenantUiEndpoint:
              deprecated: true
              description: The URI of the Tenant UI end\-point for the site.
              type: string
              format: uri
            restEndpointCertificate:
              description: Optional PEM\-encoded certificate to use when connecting
                to the REST API end\-point.
              type: string
          required:
            - restEndpoint
            - baseUiEndpoint
            - tenantUiEndpoint
          additionalProperties: false
    vcloud_SiteType:
      title: vcloud_SiteType
      description: Represents a single site in a multi\-site vCloud configuration.
      allOf:
        - $ref: '#/components/schemas/vcloud_MultisiteType'
        - type: object
          properties:
            multiSiteUrl:
              description: The URL that represents the entire multisite setup.
              type: string
              format: uri
            siteAssociations:
              description: List of sites associated with this site.
              allOf:
                - $ref: '#/components/schemas/vcloud_SiteAssociationsType'
          required:
            - multiSiteUrl
          additionalProperties: false
    vcloud_SiteAssociationsType:
      title: vcloud_SiteAssociationsType
      description: Container for SiteAssociationType
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            siteAssociationMember:
              description: A reference to a SiteAssociationType object.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_SiteAssociationType'
          additionalProperties: false
    vcloud_SiteAssociationType:
      title: vcloud_SiteAssociationType
      description: A reference to another associated site
      allOf:
        - $ref: '#/components/schemas/vcloud_MultisiteType'
        - type: object
          properties:
            siteId:
              description: The URN of the remote site
              type: string
            siteName:
              description: The name of the remote site
              type: string
            publicKey:
              description: PEM\-encoded public key for the remote site.
              type: string
            status:
              description: "Current status of this association. One of:  \n**ACTIVE**\
                \ (The association has been established by both members, and communication\
                \ with the remote party succeeded.)  \n**ASYMMETRIC** (The association\
                \ has been established at the local site, but the remote party has\
                \ not yet reciprocated.)  \n**UNREACHABLE** (The association has been\
                \ established by both members, but the remote member is currently\
                \ unreachable.)"
              type: string
          required:
            - siteId
            - siteName
          additionalProperties: false
    vcloud_SiteStatusType:
      title: vcloud_SiteStatusType
      description: Represents the status of a single site.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            siteId:
              description: ID of the site this status represents.
              type: string
            siteName:
              description: Name of the site this status represents.
              type: string
          additionalProperties: false
    vcloud_OrgAssociationsType:
      title: vcloud_OrgAssociationsType
      description: Container for OrgAssociationType
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            orgAssociationMember:
              description: A reference to an organization object.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_OrgAssociationType'
          additionalProperties: false
    vcloud_OrgAssociationType:
      title: vcloud_OrgAssociationType
      description: A reference to another organization
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            siteId:
              description: The URN of the site that this organization occupies.
              type: string
            orgId:
              description: The URN of the organization with which to associate.
              type: string
            siteName:
              description: The name of the site that the organization occupies.
              type: string
            orgName:
              description: The name of the organization with which to associate.
              type: string
            orgPublicKey:
              description: PEM\-encoded public key for this organization.
              type: string
            status:
              description: "Current status of this association. One of:  \n**ACTIVE**\
                \ (The association has been established by both members, and communication\
                \ with the remote party succeeded.)  \n**ASYMMETRIC** (The association\
                \ has been established at the local site, but the remote party has\
                \ not yet reciprocated.)  \n**UNREACHABLE** (The association has been\
                \ established by both members, but the remote member is currently\
                \ unreachable.)"
              type: string
          required:
            - siteId
            - orgId
            - orgName
            - orgPublicKey
          additionalProperties: false
    vcloud_AuthorizedLocationType:
      title: vcloud_AuthorizedLocationType
      description: Represents a vCloud Director server group that this session is
        authorized to access.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            locationId:
              description: 'The id of the location. format: orgId@siteId'
              type: string
            locationName:
              deprecated: true
              description: The name of the location.
              type: string
            siteName:
              description: The name of the site.
              type: string
            orgName:
              description: The name of the organization.
              type: string
            restApiEndpoint:
              description: The vCloud API endpoint (RestApiBaseUri) for the location.
              type: string
              format: uri
            uIEndpoint:
              description: The vCloud Director Web Console (SystemExternalHttpAddress)
                endpoint for the location.
              type: string
              format: uri
            useMultisiteToken:
              deprecated: true
              description: True if the location accepts multisite x\-vcloud\-authorization
                token for this user.
              type: boolean
            authContext:
              description: The auth context for this org
              type: string
          required:
            - restApiEndpoint
          additionalProperties: false
    vcloud_AuthorizedLocationsType:
      title: vcloud_AuthorizedLocationsType
      description: Container for AuthorizedLocationType
      type: object
      properties:
        location:
          description: Authorized location for the user in this session.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_AuthorizedLocationType'
      additionalProperties: false
    vcloud_MultisiteSessionUserInfoType:
      title: vcloud_MultisiteSessionUserInfoType
      description: Container for MultisiteSessionUserInfoType
      type: object
      properties:
        username:
          description: Username of the session's user
          type: string
        fullName:
          description: Full name of the session's user
          type: string
        email:
          description: Email address for the session's user
          type: string
        memberProviderType:
          description: Provider type of the user
          type: string
        idpRecommendedRoles:
          description: Role recommended by the IDP
          allOf:
            - $ref: '#/components/schemas/vcloud_IdpRecommendedRolesType'
        idpGroups:
          description: Groups obtained from the IDP
          allOf:
            - $ref: '#/components/schemas/vcloud_IdpGroupsType'
      required:
        - username
        - fullName
        - email
        - memberProviderType
        - idpRecommendedRoles
        - idpGroups
      additionalProperties: false
    vcloud_IdpRecommendedRolesType:
      title: vcloud_IdpRecommendedRolesType
      description: Container for Idp Recommended Roles
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            idpRecommendedRoles:
              description: An idp recommended role.
              type: array
              items:
                type: string
          additionalProperties: false
    vcloud_IdpGroupsType:
      title: vcloud_IdpGroupsType
      description: Container for Idp Groups
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            idpGroups:
              description: An idp group
              type: array
              items:
                type: string
          additionalProperties: false
    vcloud_NetworkType:
      title: vcloud_NetworkType
      description: Represents a Network in the vCloud model.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            configuration:
              description: Network configuration.
              allOf:
                - $ref: '#/components/schemas/vcloud_NetworkConfigurationType'
          additionalProperties: false
    vcloud_OrgNetworkType:
      title: vcloud_OrgNetworkType
      description: Represents an organization network in the vCloud model.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkType'
        - type: object
          properties:
            networkPool:
              description: Network Pool from which this organization network is created.
                Not present if it is bridged to an external network.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            allowedExternalIpAddresses:
              description: Optional set of IP addresses that this organization network
                is limited to using for purposes of NAT.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressesType'
          additionalProperties: false
    vcloud_VAppNetworkType:
      title: vcloud_VAppNetworkType
      description: Represents a vApp network.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkType'
        - type: object
          properties:
            deployed:
              description: True if the network is deployed.
              type: boolean
          additionalProperties: false
    vcloud_NetworkServiceType:
      title: vcloud_NetworkServiceType
      description: This is the root of the substitution group for network services.
        Replace it with any of NatService, LoadBalancerService IpsecVpnService/GatewayIpsecVpnService,
        DhcpService/GatewayDhcpService, FirewallService, or StaticRoutingService.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isEnabled:
              description: Enable or disable the service using this flag
              type: boolean
          additionalProperties: false
    vcloud_NetworkFeaturesType:
      title: vcloud_NetworkFeaturesType
      description: Represents features of a network.
      type: object
      additionalProperties: false
    vcloud_RouterInfoType:
      title: vcloud_RouterInfoType
      type: object
      properties:
        externalIp:
          description: Specifies the external IP of the router. Applicable for NAT
            Routed / Fenced networks only.
          allOf:
            - $ref: '#/components/schemas/vcloud_IpAddressType'
      required:
        - externalIp
      additionalProperties: false
    vcloud_DhcpServiceType:
      title: vcloud_DhcpServiceType
      description: Represents a DHCP network service.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkServiceType'
        - type: object
          properties:
            defaultLeaseTime:
              description: Default lease in seconds for DHCP addresses.
              type: integer
              format: int32
            maxLeaseTime:
              description: Max lease in seconds for DHCP addresses.
              type: integer
              format: int32
            ipRange:
              description: IP range for DHCP addresses.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpRangeType'
            routerIp:
              description: Router IP.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            subMask:
              description: The subnet mask.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            primaryNameServer:
              description: The primary name server.
              type: string
            secondaryNameServer:
              description: The secondary name server.
              type: string
            domainName:
              description: The domain name.
              type: string
          required:
            - maxLeaseTime
            - ipRange
          additionalProperties: false
    vcloud_NatServiceType:
      title: vcloud_NatServiceType
      description: Represents a NAT network service.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkServiceType'
        - type: object
          properties:
            natType:
              description: 'One of: ipTranslation (use IP translation), portForwarding
                (use port forwarding)'
              type: string
            policy:
              description: 'One of: allowTraffic (Allow all traffic), allowTrafficIn
                (Allow inbound traffic only)'
              type: string
            natRule:
              description: A NAT rule.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_NatRuleType'
            externalIp:
              description: External IP address for rule.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
          additionalProperties: false
    vcloud_NatRuleType:
      title: vcloud_NatRuleType
      description: Represents a NAT rule.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            description:
              description: Description of NAT rule.
              type: string
            ruleType:
              description: 'Type of NAT rule. One of: SNAT (source NAT), DNAT (destination
                NAT)'
              type: string
            isEnabled:
              description: Used to enabled or disable NAT rule.
              type: boolean
            id:
              description: Id of the rule. Can be used to track syslog messages.
              type: integer
              format: int32
          additionalProperties: false
    vcloud_GatewayNatRuleType:
      title: vcloud_GatewayNatRuleType
      description: Represents the SNAT and DNAT rules.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            interface:
              description: Interface to which rule is applied.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            originalIp:
              description: Original IP for rule.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            originalPort:
              description: Original port for rule.
              type: string
            translatedIp:
              description: Translated IP for rule.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            translatedPort:
              description: Translated port for rule.
              type: string
            protocol:
              description: Protocol for rule.
              type: string
            icmpSubType:
              description: 'ICMP subtype. One of: address\-mask\-request, address\-mask\-reply,
                destination\-unreachable, echo\-request, echo\-reply, parameter\-problem,
                redirect, router\-advertisement, router\-solicitation, source\-quench,
                time\-exceeded, timestamp\-request, timestamp\-reply, any.'
              type: string
          required:
            - originalIp
            - translatedIp
          additionalProperties: false
    vcloud_NatOneToOneBasicRuleType:
      title: vcloud_NatOneToOneBasicRuleType
      description: Represents the NAT basic rule for one to one mapping of internal
        and external IP addresses from a network.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            mappingMode:
              description: 'One of: automatic (map IP addresses automatically), manual
                (map IP addresses manually using ExternalIpAddress and InternalIpAddress)'
              type: string
            externalIpAddress:
              description: External IP address to map.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            internalIpAddress:
              description: Internal IP address to map.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
          required:
            - mappingMode
            - externalIpAddress
            - internalIpAddress
          additionalProperties: false
    vcloud_NatOneToOneVmRuleType:
      title: vcloud_NatOneToOneVmRuleType
      description: Represents the NAT rule for one to one mapping of VM NIC and external
        IP addresses from a network.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            mappingMode:
              description: Mapping mode.
              type: string
            externalIpAddress:
              description: External IP address to map to VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            vAppScopedVmId:
              description: VAppScopedVmId of the VM to which this rule applies.
              type: string
            vmNicId:
              description: VM NIC ID to which this rule applies.
              type: integer
              format: int32
          required:
            - mappingMode
            - vAppScopedVmId
            - vmNicId
          additionalProperties: false
    vcloud_NatPortForwardingRuleType:
      title: vcloud_NatPortForwardingRuleType
      description: Represents the NAT rule for port forwarding between internal IP/port
        and external IP/port.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            externalIpAddress:
              description: External IP address to forward to.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            externalPort:
              description: External port to forward to.
              type: integer
              format: int32
            internalIpAddress:
              description: Internal IP address to forward to.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            internalPort:
              description: Internal port to forward to.
              type: integer
              format: int32
            protocol:
              description: 'Protocol to forward. One of: TCP (forward TCP packets),
                UDP (forward UDP packets), TCP\_UDP (forward TCP and UDP packets).'
              type: string
          required:
            - externalIpAddress
            - externalPort
            - internalIpAddress
            - internalPort
            - protocol
          additionalProperties: false
    vcloud_NatVmRuleType:
      title: vcloud_NatVmRuleType
      description: Represents the NAT rule for port forwarding between VM NIC/port
        and external IP/port.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            externalIpAddress:
              description: External IP address to forward to.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            externalPort:
              description: External port to forward to.
              type: integer
              format: int32
            vAppScopedVmId:
              description: VAppScopedVmId of VM to which this rule applies.
              type: string
            vmNicId:
              description: VM NIC ID to which this rule applies.
              type: integer
              format: int32
            internalPort:
              description: Internal port to forward.
              type: integer
              format: int32
            protocol:
              description: 'Protocol to forward. One of: TCP (forward TCP packets),
                UDP (forward UDP packets), TCP\_UDP (forward TCP and UDP packets).'
              type: string
          required:
            - externalPort
            - vAppScopedVmId
            - vmNicId
            - internalPort
            - protocol
          additionalProperties: false
    vcloud_FirewallServiceType:
      title: vcloud_FirewallServiceType
      description: Represents a network firewall service.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkServiceType'
        - type: object
          properties:
            defaultAction:
              description: 'Default action of the firewall. One of: drop (Default.
                Drop packets that match the rule.), allow (Allow packets that match
                the rule to pass through the firewall)'
              type: string
            logDefaultAction:
              description: Flag to enable logging for default action. Default value
                is false.
              type: boolean
            firewallRule:
              description: A firewall rule.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_FirewallRuleType'
          additionalProperties: false
    vcloud_VmSelectionType:
      title: vcloud_VmSelectionType
      description: Represents details of an vm\+nic\+iptype selection.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            vAppScopedVmId:
              description: VAppScopedVmId of VM to which this rule applies.
              type: string
            vmNicId:
              description: VM NIC ID to which this rule applies.
              type: integer
              format: int32
            ipType:
              description: 'The value can be one of:\- assigned: assigned internal
                IP be automatically choosen. NAT: NATed external IP will be automatically
                choosen.'
              type: string
          additionalProperties: false
    vcloud_FirewallRuleType:
      title: vcloud_FirewallRuleType
      description: Represents a firewall rule.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            id:
              description: Firewall rule identifier.
              type: string
            isEnabled:
              description: Used to enable or disable the firewall rule. Default value
                is true.
              type: boolean
            description:
              description: A description of the rule.
              type: string
            policy:
              description: 'One of: drop (drop packets that match the rule), allow
                (allow packets that match the rule to pass through the firewall)'
              type: string
            icmpSubType:
              description: 'ICMP subtype. One of: address\-mask\-request, address\-mask\-reply,
                destination\-unreachable, echo\-request, echo\-reply, parameter\-problem,
                redirect, router\-advertisement, router\-solicitation, source\-quench,
                time\-exceeded, timestamp\-request, timestamp\-reply, any.'
              type: string
            destinationPortRange:
              description: Destination port range to which this rule applies.
              type: string
            sourcePortRange:
              description: Source port range to which this rule applies.
              type: string
            enableLogging:
              description: Used to enable or disable firewall rule logging. Default
                value is false.
              type: boolean
          additionalProperties: false
    vcloud_IpsecVpnServiceType:
      title: vcloud_IpsecVpnServiceType
      description: Represents an IPSec\-VPN network service.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkServiceType'
        - type: object
          properties:
            externalIpAddress:
              description: IP address of external enterface of the Edge.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            publicIpAddress:
              description: Public IP address of the Edge.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            ipsecVpnTunnel:
              description: Details of an IPSec\-VPN tunnel.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_IpsecVpnTunnelType'
          additionalProperties: false
    vcloud_IpsecVpnTunnelType:
      title: vcloud_IpsecVpnTunnelType
      description: Represents details of an IPSec\-VPN tunnel.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: A name for the tunnel.
              type: string
            description:
              description: A description of the tunnel.
              type: string
            peerIpAddress:
              description: IP address of the peer Edge device.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            peerNetworkAddress:
              description: Address of the peer network.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            peerNetworkMask:
              description: Netmask of the peer network.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            sharedSecret:
              description: Shared secret used for authentication.
              type: string
            encryptionProtocol:
              description: 'Encryption protocol to be used. One of: AES, AES256, TRIPLEDES'
              type: string
            mtu:
              description: MTU for the tunnel.
              type: integer
              format: int32
            isEnabled:
              description: Specifies if the IPSec\-VPN Tunnel should be enabled.
              type: boolean
            isOperational:
              description: Specifies if the IPSec\-VPN Tunnel is operational.
              type: boolean
            errorDetails:
              description: Details, in case the tunnel state is set to error.
              type: string
          required:
            - name
            - peerIpAddress
            - peerNetworkAddress
            - peerNetworkMask
            - sharedSecret
            - encryptionProtocol
            - mtu
            - isEnabled
          additionalProperties: false
    vcloud_IpsecVpnPeerType:
      title: vcloud_IpsecVpnPeerType
      description: Gives more details of peer end point.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          additionalProperties: false
    vcloud_IpsecVpnManagedPeerType:
      title: vcloud_IpsecVpnManagedPeerType
      description: Gives more details of peer end point.
      allOf:
        - $ref: '#/components/schemas/vcloud_IpsecVpnPeerType'
        - type: object
          properties:
            id:
              description: ID of peer network.
              type: string
            name:
              description: Name of the peer network.
              type: string
          required:
            - id
            - name
          additionalProperties: false
    vcloud_IpsecVpnLocalPeerType:
      title: vcloud_IpsecVpnLocalPeerType
      description: Gives more details of local peer end point.
      allOf:
        - $ref: '#/components/schemas/vcloud_IpsecVpnManagedPeerType'
        - type: object
          additionalProperties: false
    vcloud_IpsecVpnRemotePeerType:
      title: vcloud_IpsecVpnRemotePeerType
      description: Gives more details of remote peer end point.
      allOf:
        - $ref: '#/components/schemas/vcloud_IpsecVpnManagedPeerType'
        - type: object
          properties:
            vcdUrl:
              description: REST API URL of the peer cloud.
              type: string
            vcdOrganization:
              description: Organization which contains the peer network.
              type: string
            vcdUsername:
              description: Username to be used to log in to peer cloud.
              type: string
          required:
            - vcdUrl
            - vcdOrganization
            - vcdUsername
          additionalProperties: false
    vcloud_IpsecVpnUnmanagedPeerType:
      title: vcloud_IpsecVpnUnmanagedPeerType
      description: Gives more details of peer end point not managed by vCloud Director.
      allOf:
        - $ref: '#/components/schemas/vcloud_IpsecVpnPeerType'
        - type: object
          additionalProperties: false
    vcloud_IpsecVpnThirdPartyPeerType:
      title: vcloud_IpsecVpnThirdPartyPeerType
      description: Gives more details of third party peer end point.
      allOf:
        - $ref: '#/components/schemas/vcloud_IpsecVpnUnmanagedPeerType'
        - type: object
          properties:
            peerId:
              description: Peer ID of the remote endpoint.
              type: string
          required:
            - peerId
          additionalProperties: false
    vcloud_StaticRoutingServiceType:
      title: vcloud_StaticRoutingServiceType
      description: Represents Static Routing network service.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkServiceType'
        - type: object
          properties:
            staticRoute:
              description: Details of each Static Route.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_StaticRouteType'
          additionalProperties: false
    vcloud_StaticRouteType:
      title: vcloud_StaticRouteType
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: Name for the static route.
              type: string
            network:
              description: Network specification in CIDR.
              type: string
            nextHopIp:
              description: IP Address of Next Hop router/gateway.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            interface:
              description: Interface to use for static routing. Internal and External
                are the supported values.
              type: string
            gatewayInterface:
              description: Gateway interface to which static route is bound.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - name
            - network
            - nextHopIp
          additionalProperties: false
    vcloud_GatewayDhcpServiceType:
      title: vcloud_GatewayDhcpServiceType
      description: Represents Gateway DHCP service.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkServiceType'
        - type: object
          properties:
            pool:
              description: A DHCP pool.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_DhcpPoolServiceType'
          additionalProperties: false
    vcloud_DhcpPoolServiceType:
      title: vcloud_DhcpPoolServiceType
      description: Represents DHCP pool service.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isEnabled:
              description: True if this DHCP Pool is enabled.
              type: boolean
            network:
              description: Org vDC network to which the DHCP range is applicable.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            defaultLeaseTime:
              description: Default lease period for DHCP range.
              type: integer
              format: int32
            maxLeaseTime:
              description: Maximum lease period for DHCP range.
              type: integer
              format: int32
            lowIpAddress:
              description: Low IP address in DHCP range.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            highIpAddress:
              description: High IP address in DHCP range.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
          required:
            - network
            - maxLeaseTime
            - lowIpAddress
            - highIpAddress
          additionalProperties: false
    vcloud_LoadBalancerServiceType:
      title: vcloud_LoadBalancerServiceType
      description: Represents gateway load balancer service.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkServiceType'
        - type: object
          properties:
            pool:
              description: List of load balancer pools.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LoadBalancerPoolType'
            virtualServer:
              description: List of load balancer virtual servers.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LoadBalancerVirtualServerType'
          additionalProperties: false
    vcloud_LoadBalancerPoolType:
      title: vcloud_LoadBalancerPoolType
      description: Represents a load balancer pool.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            id:
              description: Load balancer pool id.
              type: string
            name:
              description: Load balancer pool name.
              type: string
            description:
              description: Load balancer pool description.
              type: string
            servicePort:
              description: Load balancer pool service port.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LBPoolServicePortType'
            member:
              description: Load balancer pool member.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LBPoolMemberType'
            operational:
              description: True if the load balancer pool is operational.
              type: boolean
            errorDetails:
              description: Error details for this pool.
              type: string
          required:
            - name
            - servicePort
            - member
          additionalProperties: false
    vcloud_LoadBalancerVirtualServerType:
      title: vcloud_LoadBalancerVirtualServerType
      description: Represents a load balancer virtual server.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isEnabled:
              description: True if this virtual server is enabled.
              type: boolean
            name:
              description: Load balancer virtual server name.
              type: string
            description:
              description: Load balancer virtual server description.
              type: string
            interface:
              description: Gateway Interface to which Load Balancer Virtual Server
                is bound.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            ipAddress:
              description: Load balancer virtual server Ip Address.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            serviceProfile:
              description: Load balancer virtual server service profiles.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LBVirtualServerServiceProfileType'
            logging:
              description: Enable logging for this virtual server.
              type: boolean
            pool:
              description: Name of Load balancer pool associated with this virtual
                server.
              type: string
            loadBalancerTemplates:
              description: Service template related attributes.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VendorTemplateType'
          required:
            - name
            - interface
            - ipAddress
            - serviceProfile
            - pool
          additionalProperties: false
    vcloud_LBPoolServicePortType:
      title: vcloud_LBPoolServicePortType
      description: Represents a service port in a load balancer pool.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isEnabled:
              description: True if this service port is enabled.
              type: boolean
            protocol:
              description: 'Load balancer protocol type. One of: HTTP, HTTPS, TCP.'
              type: string
            algorithm:
              description: 'Load Balancer algorithm type. One of: IP\_HASH, ROUND\_ROBIN,
                URI, LEAST\_CONN.'
              type: string
            port:
              description: Port for this service profile.
              type: string
            healthCheckPort:
              description: Health check port for this profile.
              type: string
            healthCheck:
              description: Health check list.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LBPoolHealthCheckType'
          required:
            - protocol
            - algorithm
            - port
          additionalProperties: false
    vcloud_LBVirtualServerServiceProfileType:
      title: vcloud_LBVirtualServerServiceProfileType
      description: Represents service profile for a load balancing virtual server.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isEnabled:
              description: True if this service profile is enabled.
              type: boolean
            protocol:
              description: 'Load balancer Protocol type. One of: HTTP, HTTPS, TCP.'
              type: string
            port:
              description: Port for this service profile.
              type: string
            persistence:
              description: Persistence type for service profile.
              allOf:
                - $ref: '#/components/schemas/vcloud_LBPersistenceType'
          required:
            - protocol
            - port
          additionalProperties: false
    vcloud_LBPersistenceType:
      title: vcloud_LBPersistenceType
      description: Represents persistence type for a load balancer service profile.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            method:
              description: 'Persistence method. One of: COOKIE, SSL\_SESSION\_ID.'
              type: string
            cookieName:
              description: Cookie name when persistence method is COOKIE.
              type: string
            cookieMode:
              description: 'Cookie Mode. One of: INSERT, PREFIX, APP.'
              type: string
          required:
            - method
          additionalProperties: false
    vcloud_LBPoolMemberType:
      title: vcloud_LBPoolMemberType
      description: Represents a member in a load balancer pool.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            ipAddress:
              description: Ip Address for load balancer member.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            condition:
              description: Condition for this member. Can be enabled or disabled.
              type: string
            weight:
              description: Weight of this member.
              type: string
            servicePort:
              description: Load balancer member service port.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LBPoolServicePortType'
          required:
            - ipAddress
            - condition
            - weight
          additionalProperties: false
    vcloud_LBPoolHealthCheckType:
      title: vcloud_LBPoolHealthCheckType
      description: Represents a service port health check list.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            mode:
              description: 'Load balancer service port health check mode. One of:
                TCP, HTTP, SSL.'
              type: string
            uri:
              description: Load balancer service port health check URI.
              type: string
            healthThreshold:
              description: Health threshold for this service port.
              type: string
            unhealthThreshold:
              description: Unhealth check port for this profile.
              type: string
            interval:
              description: Interval between health checks.
              type: string
            timeout:
              description: Health check timeout.
              type: string
          required:
            - mode
          additionalProperties: false
    vcloud_GatewayIpsecVpnServiceType:
      title: vcloud_GatewayIpsecVpnServiceType
      description: Represents gateway IPsec VPN service.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkServiceType'
        - type: object
          properties:
            endpoint:
              description: List of IPSec VPN Service Endpoints.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_GatewayIpsecVpnEndpointType'
            tunnel:
              description: List of IPSec VPN tunnels.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_GatewayIpsecVpnTunnelType'
          required:
            - tunnel
          additionalProperties: false
    vcloud_GatewayIpsecVpnEndpointType:
      title: vcloud_GatewayIpsecVpnEndpointType
      description: Represents an IPSec VPN endpoint.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            network:
              description: External network reference.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            publicIp:
              description: Public IP for IPSec endpoint.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
          required:
            - network
          additionalProperties: false
    vcloud_GatewayIpsecVpnTunnelType:
      title: vcloud_GatewayIpsecVpnTunnelType
      description: Represents an IPSec VPN tunnel.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: The name of the tunnel.
              type: string
            description:
              description: A description of the tunnel.
              type: string
            peerIpAddress:
              description: IP address of the peer endpoint.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            peerId:
              description: Id for the peer end point
              type: string
            localIpAddress:
              description: Address of the local network.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            localId:
              description: Id for local end point
              type: string
            localSubnet:
              description: List of local subnets in the tunnel.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_IpsecVpnSubnetType'
            peerSubnet:
              description: List of peer subnets in the tunnel.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_IpsecVpnSubnetType'
            sharedSecret:
              description: Shared secret used for authentication.
              type: string
            sharedSecretEncrypted:
              description: True if shared secret is encrypted.
              type: boolean
            encryptionProtocol:
              description: 'Encryption protocol to be used. One of: AES, AES256, TRIPLEDES'
              type: string
            mtu:
              description: MTU for the tunnel.
              type: integer
              format: int32
            isEnabled:
              description: True if the tunnel is enabled.
              type: boolean
            isOperational:
              description: True if the tunnel is operational.
              type: boolean
            errorDetails:
              description: Error details of the tunnel.
              type: string
          required:
            - name
            - peerIpAddress
            - peerId
            - localIpAddress
            - localId
            - localSubnet
            - peerSubnet
            - sharedSecret
            - encryptionProtocol
            - mtu
          additionalProperties: false
    vcloud_IpsecVpnSubnetType:
      title: vcloud_IpsecVpnSubnetType
      description: Represents subnet details.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: Gateway Name.
              type: string
            gateway:
              description: Subnet Gateway.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            netmask:
              description: Subnet Netmask.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
          required:
            - name
            - gateway
            - netmask
          additionalProperties: false
    vcloud_NetworkConfigurationType:
      title: vcloud_NetworkConfigurationType
      description: The configurations applied to a network. This is an abstract base
        type. The concrete types include those for vApp and Organization wide networks.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            backwardCompatibilityMode:
              description: Compatibility mode. Default is false. If set to true, will
                allow users to write firewall rules in the old 1.5 format. The new
                format does not require to use direction in firewall rules. Also,
                for firewall rules to allow NAT traffic the filter is applied on the
                original IP addresses. Once set to true cannot be reverted back to
                false.
              type: boolean
            ipScopes:
              description: A list of IP scopes for the network.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpScopesType'
            parentNetwork:
              description: Contains reference to parent network.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            fenceMode:
              description: 'Isolation type of the network. If ParentNetwork is specified,
                this property controls connectivity to the parent. One of: bridged
                (connected directly to the ParentNetwork), isolated (not connected
                to any other network), natRouted (connected to the ParentNetwork via
                a NAT service)'
              type: string
            retainNetInfoAcrossDeployments:
              description: Specifies whether the network resources such as IP/MAC
                of router will be retained across deployments. Default is false.
              type: boolean
            features:
              description: Network features like DHCP, firewall and NAT rules.
              allOf:
                - $ref: '#/components/schemas/vcloud_NetworkFeaturesType'
            syslogServerSettings:
              description: Syslog server settings for the network.
              allOf:
                - $ref: '#/components/schemas/vcloud_SyslogServerSettingsType'
            routerInfo:
              description: Specifies router information.
              allOf:
                - $ref: '#/components/schemas/vcloud_RouterInfoType'
            advancedNetworkingEnabled:
              description: True if Advanced Networking has been enabled.
              type: boolean
            subInterface:
              description: True if Network is connected to an Edge Gateway subinterface.
              type: boolean
            distributedInterface:
              description: True if Network is connected to a distributed logical router.
              type: boolean
            guestVlanAllowed:
              description: True if Network allows guest VLAN tagging.
              type: boolean
          required:
            - fenceMode
          additionalProperties: false
    vcloud_IpAddressType:
      title: vcloud_IpAddressType
      description: A valid IPv4 address or "Any".
      type: string
    vcloud_FirewallIpAddressType:
      title: vcloud_FirewallIpAddressType
      description: A valid IPv4 address or "Any".
      type: string
    vcloud_IpAddressesType:
      title: vcloud_IpAddressesType
      description: A list of IP addresses.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            ipAddress:
              description: An IP address.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_IpAddressType'
          additionalProperties: false
    vcloud_AllocatedIpAddressType:
      title: vcloud_AllocatedIpAddressType
      description: Represents an information for allocated IP address
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            isDeployed:
              description: True if vApp is deployed.
              type: boolean
            allocationType:
              description: 'One of: vmAllocated (IP is allocated by VM), natRouted
                (IP is NAT routed) vsmAllocated (IP is allocated for vShieldManager)'
              type: string
            ipAddress:
              description: Allocated IP address.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
          additionalProperties: false
    vcloud_AllocatedIpAddressesType:
      title: vcloud_AllocatedIpAddressesType
      description: A list of information for allocated IP addresses.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            ipAddress:
              description: IP Allocation info.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_AllocatedIpAddressType'
          additionalProperties: false
    vcloud_SubAllocationsType:
      title: vcloud_SubAllocationsType
      description: A list of IP addresses that are sub allocated to edge gateways.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            subAllocation:
              description: IP Range sub allocated to a edge gateway.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_SubAllocationType'
          additionalProperties: false
    vcloud_SubAllocationType:
      title: vcloud_SubAllocationType
      description: IP range sub allocated to an edge gateway.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            edgeGateway:
              description: Edge gateway that uses this sub allocation.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            ipRanges:
              description: IP range sub allocated to the edge gateway.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpRangesType'
          additionalProperties: false
    vcloud_IpRangeType:
      title: vcloud_IpRangeType
      description: Represents a range of IP addresses, start and end inclusive.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            startAddress:
              description: Start address of the IP range.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            endAddress:
              description: End address of the IP range.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
          required:
            - startAddress
            - endAddress
          additionalProperties: false
    vcloud_IpRangesType:
      title: vcloud_IpRangesType
      description: Represents a list of IP ranges.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            ipRange:
              description: IP range.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_IpRangeType'
          additionalProperties: false
    vcloud_IpScopeType:
      title: vcloud_IpScopeType
      description: Specify network settings like gateway, network mask, DNS servers,
        IP ranges, etc.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            isInherited:
              description: True if the IP scope is inherit from parent network.
              type: boolean
            gateway:
              description: Gateway of the network.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            netmask:
              description: Network mask.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            dns1:
              description: Primary DNS server.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            dns2:
              description: Secondary DNS server.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            dnsSuffix:
              description: DNS suffix.
              type: string
            isEnabled:
              description: Indicates if subnet is enabled or not. Default value is
                True.
              type: boolean
            ipRanges:
              description: IP ranges used for static pool allocation in the network.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpRangesType'
            allocatedIpAddresses:
              description: Read\-only list of allocated IP addresses in the network.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressesType'
            subAllocations:
              description: Read\-only list of IP addresses that are sub allocated
                to edge gateways.
              allOf:
                - $ref: '#/components/schemas/vcloud_SubAllocationsType'
          required:
            - isInherited
          additionalProperties: false
    vcloud_IpScopesType:
      title: vcloud_IpScopesType
      description: Represents a list of IP scopes.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            ipScope:
              description: IP scope.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_IpScopeType'
          required:
            - ipScope
          additionalProperties: false
    vcloud_SyslogServerSettingsType:
      title: vcloud_SyslogServerSettingsType
      description: Syslog server settings. If logging is configured for firewall rules,
        the logs will be directed to these syslog servers.
      type: object
      properties:
        syslogServerIp1:
          description: Primary syslog server.
          allOf:
            - $ref: '#/components/schemas/vcloud_IpAddressType'
        syslogServerIp2:
          description: Secondary syslog server.
          allOf:
            - $ref: '#/components/schemas/vcloud_IpAddressType'
      additionalProperties: false
    vcloud_TenantSyslogServerSettingsType:
      title: vcloud_TenantSyslogServerSettingsType
      description: Tenant syslog server settings. If logging is configured for firewall
        rules, the logs will be directed to these syslog servers along with the provider
        syslog servers. Only one tenant syslog server ip can be configured.
      type: object
      properties:
        syslogServerIp:
          description: syslog server ip address.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_IpAddressType'
      additionalProperties: false
    vcloud_OrgVdcNetworkType:
      title: vcloud_OrgVdcNetworkType
      description: Represents an Org vDC network in the vCloud model.
      allOf:
        - $ref: '#/components/schemas/vcloud_NetworkType'
        - type: object
          properties:
            status:
              description: "Creation status of the org vDC network. One of:  \n 0\
                \ (The org vDC network is not completely created)  \n 1 (The org vDC\
                \ network is ready)"
              type: integer
              format: int32
            providerInfo:
              description: provider Info for the network
              type: string
            edgeGateway:
              description: EdgeGateway that connects this Org vDC network. Applicable
                only for routed networks.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            serviceConfig:
              description: Specifies the service configuration for an isolated Org
                vDC networks.
              allOf:
                - $ref: '#/components/schemas/vcloud_GatewayFeaturesType'
            isShared:
              description: True if this network is shared to multiple Org vDCs.
              type: boolean
            vimPortGroupRef:
              description: A reference to a VIRTUAL\_WIRE object that exists on a
                vCenter server registered with the system. Required on Create when
                AdvancedNetworkingEnabled has a value of true. Ignored on update,
                or when AdvancedNetworkingEnabled has a value of false.
              allOf:
                - $ref: '#/components/schemas/vcloud_VimObjectRefType'
          required:
            - providerInfo
            - vimPortGroupRef
          additionalProperties: false
    vcloud_VimObjectRefType:
      title: vcloud_VimObjectRefType
      description: Represents the moref and the type of a vSphere object.
      type: object
      properties:
        vimServerRef:
          description: The vCenter server reference.
          allOf:
            - $ref: '#/components/schemas/vcloud_ReferenceType'
        moRef:
          description: Managed object reference of the object.
          type: string
        vimObjectType:
          description: 'The vSphere type of the object. One of: CLUSTER\_COMPUTE\_RESOURCE
            (The object is a vSphere cluster compute resource.), RESOURCE\_POOL (The
            object is a vSphere resource pool.), DATASTORE (The object is a vSphere
            datastore.), HOST (The object is an ESX/ESXi host.), VIRTUAL\_MACHINE
            (The object is a vSphere VM.), VIRTUAL\_APP (The object is a vSphere vApp.),
            NETWORK (The object is a vSphere network.), DV\_PORTGROUP (The object
            is a vSphere distributed virtual portgroup.), DV\_SWITCH (The object is
            a vSphere distributed virtual switch.), DATASTORE\_CLUSTER (The object
            is a vSphere storage pod.)'
          type: string
      required:
        - vimServerRef
        - moRef
        - vimObjectType
      additionalProperties: false
    vcloud_GatewayType:
      title: vcloud_GatewayType
      description: Represents a gateway.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            status:
              description: "Creation status of the gateway. One of:  \n 0 (The gateway\
                \ is still being created)  \n 1 (The gateway is ready)  \n \\-1 (There\
                \ was an error while creating the gateway)."
              type: integer
              format: int32
            gatewayBackingRef:
              description: Provides information to access edge gateway via VC
              allOf:
                - $ref: '#/components/schemas/vcloud_GatewayBackingRefType'
            configuration:
              description: Gateway configuration.
              allOf:
                - $ref: '#/components/schemas/vcloud_GatewayConfigurationType'
          required:
            - configuration
          additionalProperties: false
    vcloud_GatewayBackingRefType:
      title: vcloud_GatewayBackingRefType
      description: Provides information to access edge gateway via VC
      type: object
      properties:
        gatewayId:
          description: Gateway id in VSM (vSheildManager).
          type: string
        vCRef:
          description: Entity ref for Vcenter
          allOf:
            - $ref: '#/components/schemas/vcloud_EntityReferenceType'
      additionalProperties: false
    vcloud_GatewayConfigurationType:
      title: vcloud_GatewayConfigurationType
      description: Gateway Configuration.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            backwardCompatibilityMode:
              description: Compatibility mode. Default is false. If set to true, will
                allow users to write firewall rules in the old 1.5 format. The new
                format does not require to use direction in firewall rules. Also,
                for firewall rules to allow NAT traffic the filter is applied on the
                original IP addresses. Once set to true cannot be reverted back to
                false.
              type: boolean
            gatewayBackingConfig:
              description: 'Configuration of the vShield edge VM for this gateway.
                One of: compact, full.'
              type: string
            gatewayInterfaces:
              description: List of Gateway interfaces.
              allOf:
                - $ref: '#/components/schemas/vcloud_GatewayInterfacesType'
            edgeGatewayServiceConfiguration:
              description: Represents Gateway Features.
              allOf:
                - $ref: '#/components/schemas/vcloud_GatewayFeaturesType'
            haEnabled:
              description: True if this gateway is highly available. (Requires two
                vShield edge VMs.)
              type: boolean
            useDefaultRouteForDnsRelay:
              description: True if the default gateway on the external network selected
                for default route should be used as the DNS relay.
              type: boolean
            syslogServerSettings:
              description: Syslog server addresses for gateway
              allOf:
                - $ref: '#/components/schemas/vcloud_SyslogServerType'
            advancedNetworkingEnabled:
              description: True if the gateway uses advanced networking
              type: boolean
            distributedRoutingEnabled:
              description: True if gateway is attached to a Distributed Logical Router
              type: boolean
            fipsModeEnabled:
              description: True if FIPS mode is enabled for this gateway
              type: boolean
          required:
            - gatewayBackingConfig
            - gatewayInterfaces
          additionalProperties: false
    vcloud_GatewayInterfacesType:
      title: vcloud_GatewayInterfacesType
      description: A list of Gateway Interfaces.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            gatewayInterface:
              description: Gateway Interface.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_GatewayInterfaceType'
          required:
            - gatewayInterface
          additionalProperties: false
    vcloud_GatewayInterfaceType:
      title: vcloud_GatewayInterfaceType
      description: Gateway Interface configuration.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: Internally generated name for the Gateway Interface.
              type: string
            displayName:
              description: Gateway Interface display name.
              type: string
            network:
              description: A reference to the network connected to the gateway interface.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            interfaceType:
              description: 'The type of interface: One of: Uplink, Internal'
              type: string
            subnetParticipation:
              description: IP allocation per subnet.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_SubnetParticipationType'
            applyRateLimit:
              description: True if rate limiting is applied on this interface.
              type: boolean
            inRateLimit:
              description: Incoming rate limit expressed as Gbps.
              type: number
              format: double
            outRateLimit:
              description: Outgoing rate limit expressed as Gbps.
              type: number
              format: double
            useForDefaultRoute:
              description: True if this network is default route for the gateway.
              type: boolean
          required:
            - network
            - interfaceType
          additionalProperties: false
    vcloud_SyslogServerType:
      title: vcloud_SyslogServerType
      description: Allows a user to configure syslog server settings for the gateway
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            tenantSyslogServerSettings:
              description: Tenant syslog server settings
              allOf:
                - $ref: '#/components/schemas/vcloud_TenantSyslogServerSettingsType'
          additionalProperties: false
    vcloud_EdgeGatewayFormFactorType:
      title: vcloud_EdgeGatewayFormFactorType
      description: Allows a user to change the size of the gateway
      type: object
      properties:
        gatewayType:
          description: 'Configuration of the vShield edge VM for this gateway. One
            of: compact, full, full4.'
          type: string
      required:
        - gatewayType
      additionalProperties: false
    vcloud_GatewayFeaturesType:
      title: vcloud_GatewayFeaturesType
      description: Represents edge gateway services.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          additionalProperties: false
    vcloud_SubnetParticipationType:
      title: vcloud_SubnetParticipationType
      description: Allows to chose which subnets a gateway can be part of
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            gateway:
              description: Gateway for subnet
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            netmask:
              description: Nestmask for the subnet
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            ipAddress:
              description: Ip Address to be assigned. Keep empty or omit element for
                auto assignment
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            ipRanges:
              description: Range of IP addresses available for external interfaces.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpRangesType'
            useForDefaultRoute:
              description: True if this subnet is default route for the gateway. Defaults
                to True if this is the only subnet for this gateway. Otherwise defaults
                to False if omitted or empty.
              type: boolean
          required:
            - gateway
            - netmask
          additionalProperties: false
    vcloud_OrgType:
      title: vcloud_OrgType
      description: Represents the user view of a vCloud Director organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            fullName:
              description: Full name of the organization.
              type: string
            isEnabled:
              description: True if this organization is enabled (allows login and
                all other operations). Read\-only in the user view. Modifiable in
                the admin view (AdminOrg element).
              type: boolean
          required:
            - fullName
          additionalProperties: false
    vcloud_OrgListType:
      title: vcloud_OrgListType
      description: Represents a list of organizations.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            org:
              description: Reference to an organization.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_ProductSectionListType:
      title: vcloud_ProductSectionListType
      description: Container for all ProductSection elements in a VAppTemplate, VApp,
        or Vm object.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          additionalProperties: false
    vcloud_QueryResultType:
      title: vcloud_QueryResultType
      description: Container type for query results in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            name:
              description: The name of the query that generated this result set.
              type: string
            pageSize:
              description: The size of the pages into which the full result list is
                split.
              type: integer
            page:
              description: The presented page of the full result list.
              type: integer
          additionalProperties: false
    vcloud_QueryResultRecordsType:
      title: vcloud_QueryResultRecordsType
      description: Container for query results in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_ContainerType'
        - type: object
          additionalProperties: false
    vcloud_QueryResultRecordType:
      title: vcloud_QueryResultRecordType
      description: Base type for a single record from query result in records format.
        Subtypes define more specific elements.
      type: object
      properties:
        href:
          description: Contains the URI to the resource.
          type: string
          format: uri
        id:
          description: The resource identifier, expressed in URN format. The value
            of this attribute uniquely identifies the resource, persists for the life
            of the resource, and is never reused.
          type: string
        type:
          description: Contains the type of the resource.
          type: string
        link:
          description: Contains a link to an operation associated with a specific
            relation type.
          type: array
          items:
            $ref: '#/components/schemas/vcloud_LinkType'
        metadata:
          allOf:
            - $ref: '#/components/schemas/vcloud_MetadataType'
        _type:
          type: string
          enum:
            - QueryResultOrgRecordType
            - QueryResultOrgVdcRecordType
            - QueryResultMediaRecordType
            - QueryResultVAppTemplateRecordType
            - QueryResultVAppRecordType
            - QueryResultVMRecordType
            - QueryResultOrgNetworkRecordType
            - QueryResultAdminOrgNetworkRecordType
            - QueryResultVAppNetworkRecordType
            - QueryResultCatalogRecordType
            - QueryResultAdminVdcRecordType
            - QueryResultVMWProviderVdcRecordType
            - QueryResultNetworkRecordType
            - QueryResultGroupRecordType
            - QueryResultUserRecordType
            - QueryResultStrandedUserRecordType
            - QueryResultRoleRecordType
            - QueryResultAllocatedExternalAddressRecordType
            - QueryResultEventRecordType
            - QueryResultResourcePoolRecordType
            - QueryResultDatastoreRecordType
            - QueryResultNetworkPoolRecordType
            - QueryResultPortgroupRecordType
            - QueryResultDvSwitchRecordType
            - QueryResultCellRecordType
            - QueryResultVirtualCenterRecordType
            - QueryResultHostRecordType
            - QueryResultAdminVAppRecordType
            - QueryResultRightRecordType
            - QueryResultAdminVMRecordType
            - QueryResultAdminAllocatedExternalAddressRecordType
            - QueryResultVAppOrgNetworkRelationRecordType
            - QueryResultOrgVdcResourcePoolRelationRecordType
            - QueryResultProviderVdcResourcePoolRelationRecordType
            - QueryResultDatastoreProviderVdcRelationRecordType
            - QueryResultAdminUserRecordType
            - QueryResultAdminGroupRecordType
            - QueryResultAdminVAppNetworkRecordType
            - QueryResultAdminCatalogRecordType
            - QueryResultAdminCatalogItemRecordType
            - QueryResultCatalogItemRecordType
            - QueryResultAdminMediaRecordType
            - QueryResultAdminVAppTemplateRecordType
            - QueryResultAdminShadowVMRecordType
            - QueryResultTaskRecordType
            - QueryResultAdminTaskRecordType
            - QueryResultBlockingTaskRecordType
            - QueryResultDiskRecordType
            - QueryResultVmDiskRelationRecordType
            - QueryResultAdminDiskRecordType
            - QueryResultAdminVmDiskRelationRecordType
            - QueryResultConditionRecordType
            - QueryResultAdminEventRecordType
            - QueryResultStrandedItemRecordType
            - QueryResultAdminServiceRecordType
            - QueryResultServiceRecordType
            - QueryResultServiceLinkRecordType
            - QueryResultOrgVdcStorageProfileRecordType
            - QueryResultAdminOrgVdcStorageProfileRecordType
            - QueryResultProviderVdcStorageProfileRecordType
            - QueryResultApiFilterRecordType
            - QueryResultAdminApiDefinitionRecordType
            - QueryResultApiDefinitionRecordType
            - QueryResultAdminFileDescriptorRecordType
            - QueryResultFileDescriptorRecordType
            - QueryResultResourceClassActionRecordType
            - QueryResultAclRuleRecordType
            - QueryResultResourceClassRecordType
            - QueryResultServiceResourceRecordType
            - QueryResultEdgeGatewayRecordType
            - QueryResultOrgVdcNetworkRecordType
            - QueryResultVAppOrgVdcNetworkRelationRecordType
            - QueryResultExternalLocalizationRecordType
            - QueryResultResourcePoolVMRecordType
            - QueryResultVmGroupVmsRecordType
            - QueryResultVmGroupsRecordType
            - QueryResultAdminRoleRecordType
      additionalProperties: false
    vcloud_QueryResultOrgRecordType:
      title: vcloud_QueryResultOrgRecordType
      description: Type for a single organization query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: Organization name
              type: string
            isReadOnly:
              description: True if this organization is read only
              type: boolean
            isEnabled:
              description: True if this organization is enabled
              type: boolean
            deployedVMQuota:
              description: Running VMs Quota
              type: integer
              format: int32
            storedVMQuota:
              description: Stored VM Quota
              type: integer
              format: int32
            displayName:
              description: Display name
              type: string
            canPublishCatalogs:
              description: True if users from the organization can publish catalogs
              type: boolean
            numberOfCatalogs:
              description: Number of catalogs
              type: integer
              format: int32
            numberOfVdcs:
              description: Number of VDCs
              type: integer
              format: int32
            numberOfVApps:
              description: Number of vApps
              type: integer
              format: int32
            numberOfGroups:
              description: Number of groups
              type: integer
              format: int32
            numberOfDisks:
              description: Number of disks
              type: integer
              format: int32
          additionalProperties: false
    vcloud_QueryResultOrgVdcRecordType:
      title: vcloud_QueryResultOrgVdcRecordType
      description: Type for a single orgVdc query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: VDC name
              type: string
            description:
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            cpuAllocationMhz:
              description: CPU allocation in Mhz
              type: integer
              format: int64
            cpuLimitMhz:
              description: CPU limit in Mhz
              type: integer
              format: int64
            cpuUsedMhz:
              description: CPU used in Mhz
              type: integer
              format: int64
            cpuReservedMhz:
              description: CPU reserved in Mhz
              type: integer
              format: int64
            memoryAllocationMB:
              description: Memory allocation in MB
              type: integer
              format: int64
            memoryLimitMB:
              description: Memory limit in MB
              type: integer
              format: int64
            memoryUsedMB:
              description: Memory used in MB
              type: integer
              format: int64
            memoryReservedMB:
              description: Memory reserved in MB
              type: integer
              format: int64
            storageAllocationMB:
              description: Storage allocation in MB
              type: integer
              format: int64
            storageLimitMB:
              description: Storage limit in MB
              type: integer
              format: int64
            storageUsedMB:
              description: Storage used in MB
              type: integer
              format: int64
            providerVdcName:
              description: Provider VDC name
              type: string
            providerVdc:
              description: Provider VDC reference or id
              type: string
            orgName:
              description: Organization name
              type: string
            numberOfVApps:
              description: Number of vApps
              type: integer
              format: int32
            numberOfMedia:
              description: Number of media
              type: integer
              format: int32
            numberOfDisks:
              description: Number of disks
              type: integer
              format: int32
            numberOfVAppTemplates:
              deprecated: true
              description: Number of vApp templates
              type: integer
              format: int32
            isSystemVdc:
              description: True if this VDC is used exclusively to support vShield
                Edge devices.
              type: boolean
            isBusy:
              description: True if this entity is busy
              type: boolean
            status:
              description: VDC status
              type: string
            numberOfDatastores:
              description: Number of datastores
              type: integer
              format: int32
            numberOfStorageProfiles:
              description: Number of storage profiles
              type: integer
              format: int32
            numberOfVMs:
              description: Number of VMs
              type: integer
              format: int32
            numberOfRunningVMs:
              description: Number of Running VMs
              type: integer
              format: int32
            networkPoolUniversalId:
              description: Associated universal network pool
              type: string
            numberOfDeployedVApps:
              description: Number of Deployed vApps
              type: integer
              format: int32
          additionalProperties: false
    vcloud_QueryResultMediaRecordType:
      title: vcloud_QueryResultMediaRecordType
      description: Type for a single media query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            ownerName:
              description: Owner name
              type: string
            catalogName:
              description: Catalog name
              type: string
            isPublished:
              description: True if this media file is in a published catalog.
              type: boolean
            name:
              description: Media name
              type: string
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            org:
              description: Organization reference or id
              type: string
            creationDate:
              description: Creation date
              type: string
              format: date-time
            isBusy:
              description: True if this entity is busy
              type: boolean
            storageB:
              description: Media storage in Bytes
              type: integer
              format: int64
            owner:
              description: Owner reference or id
              type: string
            catalog:
              description: Catalog reference or id
              type: string
            catalogItem:
              description: Catalog item reference or id
              type: string
            status:
              description: Media status
              type: string
            storageProfileName:
              description: Storage profile name
              type: string
            version:
              description: Version
              type: integer
              format: int64
            lastSuccessfulSync:
              description: Date of last successful sync
              type: string
              format: date-time
          additionalProperties: false
    vcloud_QueryResultVAppTemplateRecordType:
      title: vcloud_QueryResultVAppTemplateRecordType
      description: Type for a single vAppTemplate query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            ownerName:
              description: Owner name
              type: string
            catalogName:
              description: Catalog name
              type: string
            isPublished:
              description: True if this template is in a published catalog.
              type: boolean
            name:
              description: Vapp template name
              type: string
            description:
              description: User oriented textual description of the template.
              type: string
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            org:
              description: Organization reference or id
              type: string
            creationDate:
              description: Creation date
              type: string
              format: date-time
            isBusy:
              description: True if this entity is busy
              type: boolean
            isGoldMaster:
              description: True if this vApp template is a gold master.
              type: boolean
            isEnabled:
              description: True if the containing VDC is enabled
              type: boolean
            status:
              description: Vapp template status
              type: string
            isDeployed:
              description: True if this vApp template is deployed
              type: boolean
            isExpired:
              description: True if this vApp template is expired.
              type: boolean
            storageProfileName:
              description: Storage profile name
              type: string
            version:
              description: Version
              type: integer
              format: int64
            lastSuccessfulSync:
              description: Date of last successful sync
              type: string
              format: date-time
          additionalProperties: false
    vcloud_QueryResultVAppRecordType:
      title: vcloud_QueryResultVAppRecordType
      description: Type for a single vApp query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: vApp name
              type: string
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            isPublic:
              description: True if this entity is public
              type: boolean
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            isBusy:
              description: True if this entity is busy
              type: boolean
            creationDate:
              description: Creation date
              type: string
              format: date-time
            status:
              description: Status
              type: string
            ownerName:
              description: Owner name
              type: string
            isDeployed:
              description: True if this entity is deployed
              type: boolean
            isInMaintenanceMode:
              description: True if this entity is in maintenance mode
              type: boolean
            isAutoNature:
              description: True if the parent vApp is a managed vApp
              type: boolean
            isExpired:
              description: True if this vApp is expired.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultVMRecordType:
      title: vcloud_QueryResultVMRecordType
      description: Type for a single vm query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of the VM.
              type: string
            containerName:
              description: The name of the vApp or vApp template that contains this
                VM.
              type: string
            container:
              description: The ID of the vApp or vApp template that contains this
                VM.
              type: string
            ownerName:
              description: The owner of the vApp or vApp template that contains this
                VM.
              type: string
            owner:
              description: The ID of the owner of the vApp or vApp template that contains
                this VM.
              type: string
            vdc:
              description: VDC reference or id
              type: string
            isVAppTemplate:
              description: True if the VM belongs to a vApp template.
              type: boolean
            isDeleted:
              description: True if this entity is deleted
              type: boolean
            guestOs:
              description: Guest operating system
              type: string
            numberOfCpus:
              description: Number of CPUs
              type: integer
              format: int32
            memoryMB:
              description: Memory in MB
              type: integer
              format: int32
            status:
              description: Status
              type: string
            networkName:
              description: If configured, the name of the primary network, otherwise
                empty.
              type: string
            network:
              description: If configured, the HRef of the primary network, otherwise
                empty.
              type: string
            ipAddress:
              description: If configured, the IP Address of the VM on the primary
                network, otherwise empty.
              type: string
            isBusy:
              description: True if this entity is busy
              type: boolean
            isDeployed:
              description: True if this entity is deployed
              type: boolean
            isPublished:
              description: True if this entity is in a published catalog
              type: boolean
            catalogName:
              description: Catalog name
              type: string
            hardwareVersion:
              description: Hardware version
              type: integer
              format: int32
            vmToolsStatus:
              type: string
            isInMaintenanceMode:
              description: True if this entity is in maintenance mode
              type: boolean
            isAutoNature:
              description: True if the parent vApp is a managed vApp
              type: boolean
            storageProfileName:
              description: Storage profile name
              type: string
            gcStatus:
              description: GC status of this VM.
              type: string
            autoUndeployDate:
              description: autoUndeployDate
              type: string
              format: date-time
            autoDeleteDate:
              description: autoDeleteDate
              type: string
              format: date-time
            isAutoUndeployNotified:
              type: boolean
            isAutoDeleteNotified:
              type: boolean
          additionalProperties: false
    vcloud_QueryResultOrgNetworkRecordType:
      title: vcloud_QueryResultOrgNetworkRecordType
      description: Type for a single orgNetwork query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this network.
              type: string
            networkPool:
              description: Network pool reference or id
              type: string
            networkPoolName:
              description: Network pool name
              type: string
            org:
              description: Organization reference or id
              type: string
            ipScopeId:
              description: IP scope object
              type: string
            isIpScopeInherited:
              description: True if this network's IP scope is inherited.
              type: boolean
            gateway:
              description: Gateway
              type: string
            netmask:
              description: Netmask
              type: string
            dns1:
              description: Primary DNS
              type: string
            dns2:
              description: Secondary DNS
              type: string
            dnsSuffix:
              description: DNS suffix
              type: string
            isBusy:
              description: True if this entity is busy
              type: boolean
          additionalProperties: false
    vcloud_QueryResultAdminOrgNetworkRecordType:
      title: vcloud_QueryResultAdminOrgNetworkRecordType
      description: Type for a single adminOrgNetwork query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this network.
              type: string
            orgName:
              description: Organization name
              type: string
            networkPool:
              description: Network pool reference or id
              type: string
            networkPoolName:
              description: Network pool name
              type: string
            org:
              description: Organization reference or id
              type: string
            ipScopeId:
              description: IP scope object
              type: string
            isIpScopeInherited:
              description: True if this network's IP scope is inherited.
              type: boolean
            gateway:
              description: Gateway
              type: string
            netmask:
              description: Netmask
              type: string
            dns1:
              description: Primary DNS
              type: string
            dns2:
              description: Secondary DNS
              type: string
            isBusy:
              description: True if this entity is busy
              type: boolean
          additionalProperties: false
    vcloud_QueryResultVAppNetworkRecordType:
      title: vcloud_QueryResultVAppNetworkRecordType
      description: Type for a single vAppNetwork query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this network.
              type: string
            ipScopeId:
              description: IP scope object
              type: string
            isIpScopeInherited:
              description: True if this network's IP scope is inherited.
              type: boolean
            gateway:
              description: Gateway
              type: string
            netmask:
              description: Netmask
              type: string
            dns1:
              description: Primary DNS
              type: string
            dns2:
              description: Secondary DNS
              type: string
            dnsSuffix:
              description: DNS suffix
              type: string
            vApp:
              description: VApp reference or id
              type: string
            vAppName:
              description: Vapp name
              type: string
            isBusy:
              description: True if this entity is busy
              type: boolean
          additionalProperties: false
    vcloud_QueryResultCatalogRecordType:
      title: vcloud_QueryResultCatalogRecordType
      description: Type for a single catalog query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this catalog.
              type: string
            description:
              description: Catalog description
              type: string
            isPublished:
              description: True if this catalog is shared to all organizations.
              type: boolean
            isShared:
              description: True if this catalog is shared.
              type: boolean
            creationDate:
              description: Creation date
              type: string
              format: date-time
            orgName:
              description: Organization name
              type: string
            ownerName:
              description: Owner name
              type: string
            numberOfVAppTemplates:
              description: Number of vApp templates
              type: integer
              format: int32
            numberOfMedia:
              description: Number of media
              type: integer
              format: int32
            owner:
              description: Owner reference or id
              type: string
            publishSubscriptionType:
              description: PUBLISHED if published externally, SUBSCRIBED if subscribed
                to an external catalog, UNPUBLISHED otherwise.
              type: string
            version:
              description: Version
              type: integer
              format: int64
            status:
              description: Status
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminVdcRecordType:
      title: vcloud_QueryResultAdminVdcRecordType
      description: Type for a single adminOrgVdc query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this VDC.
              type: string
            description:
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            cpuAllocationMhz:
              description: CPU allocation in Mhz
              type: integer
              format: int64
            cpuLimitMhz:
              description: CPU limit in Mhz
              type: integer
              format: int64
            cpuUsedMhz:
              description: CPU used in Mhz
              type: integer
              format: int64
            memoryAllocationMB:
              description: Memory allocation in MB
              type: integer
              format: int64
            memoryLimitMB:
              description: Memory limit in MB
              type: integer
              format: int64
            memoryUsedMB:
              description: Memory used in MB
              type: integer
              format: int64
            storageAllocationMB:
              description: Storage allocation in MB
              type: integer
              format: int64
            storageLimitMB:
              description: Storage limit in MB
              type: integer
              format: int64
            storageUsedMB:
              description: Storage used in MB
              type: integer
              format: int64
            providerVdcName:
              description: Provider VDC name
              type: string
            providerVdc:
              description: Provider VDC reference or id
              type: string
            orgName:
              description: Organization name
              type: string
            org:
              description: Organization reference or id
              type: string
            numberOfVApps:
              description: Number of vApps
              type: integer
              format: int32
            numberOfMedia:
              description: Number of media
              type: integer
              format: int32
            numberOfDisks:
              description: Number of disks
              type: integer
              format: int32
            numberOfVAppTemplates:
              deprecated: true
              description: Number of vApp templates
              type: integer
              format: int32
            isSystemVdc:
              description: True if this VDC is used exclusively to support vShield
                Edge devices.
              type: boolean
            isBusy:
              description: True if this entity is busy
              type: boolean
            status:
              description: Status
              type: string
            networkPool:
              description: Network pool reference or id
              type: string
            numberOfStorageProfiles:
              description: Number of storage profiles
              type: integer
              format: int32
            numberOfVMs:
              description: Number of VMs
              type: integer
              format: int32
            networkPoolUniversalId:
              description: Associated universal network pool
              type: string
            numberOfRunningVMs:
              description: Number of Running VMs
              type: integer
              format: int32
            numberOfDeployedVApps:
              description: Number of Deployed vApps
              type: integer
              format: int32
          additionalProperties: false
    vcloud_QueryResultVMWProviderVdcRecordType:
      title: vcloud_QueryResultVMWProviderVdcRecordType
      description: Type for a single providerVdc query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this Provider VDC.
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            isDeleted:
              description: True if this entity is deleted
              type: boolean
            vcpuRatingMhz:
              deprecated: true
              description: vCpu rating in Mhz
              type: integer
              format: int32
            cpuUsedMhz:
              description: CPU used in Mhz
              type: integer
              format: int64
            cpuLimitMhz:
              description: CPU limit in Mhz
              type: integer
              format: int64
            cpuAllocationMhz:
              description: CPU allocation in Mhz
              type: integer
              format: int64
            memoryUsedMB:
              description: Memory used in MB
              type: integer
              format: int64
            memoryLimitMB:
              description: Memory limit in MB
              type: integer
              format: int64
            memoryAllocationMB:
              description: Memory allocation in MB
              type: integer
              format: int64
            storageUsedMB:
              description: Storage used in MB
              type: integer
              format: int64
            storageLimitMB:
              description: Storage limit in MB
              type: integer
              format: int64
            storageAllocationMB:
              description: Storage allocation in MB
              type: integer
              format: int64
            numberOfDatastores:
              description: Number of datastores
              type: integer
              format: int32
            numberOfVdcs:
              description: Number of vDCs
              type: integer
              format: int32
            isBusy:
              description: True if this entity is busy
              type: boolean
            status:
              description: Status
              type: string
            numberOfStorageProfiles:
              description: Number of storage profiles
              type: integer
              format: int32
          additionalProperties: false
    vcloud_QueryResultNetworkRecordType:
      title: vcloud_QueryResultNetworkRecordType
      description: Type for a single externalNetwork query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this network.
              type: string
            ipScopeId:
              description: IP scope object of this network.
              type: string
            gateway:
              description: Gateway for the network
              type: string
            netmask:
              description: Netmask for the network
              type: string
            dns1:
              description: Primary DNS for the network
              type: string
            dns2:
              description: Secondary DNS for the network
              type: string
            dnsSuffix:
              description: DNS suffix for the network
              type: string
            isBusy:
              description: True if this entity is busy
              type: boolean
          additionalProperties: false
    vcloud_QueryResultGroupRecordType:
      title: vcloud_QueryResultGroupRecordType
      description: Type for a single group query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this group.
              type: string
            roleName:
              description: Role name
              type: string
            isReadOnly:
              description: True if this entity is read\-only.
              type: boolean
            identityProviderType:
              description: Shows the identity provider type of the group
              type: string
          additionalProperties: false
    vcloud_QueryResultUserRecordType:
      title: vcloud_QueryResultUserRecordType
      description: Type for a single user query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this user.
              type: string
            fullName:
              description: The full name of this user.
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            numberOfDeployedVMs:
              description: Number of deployed VMs
              type: integer
              format: int32
            deployedVMQuota:
              description: Running VMs Quota
              type: integer
              format: int32
            numberOfStoredVMs:
              description: Number of stored VMs
              type: integer
              format: int32
            storedVMQuota:
              description: Stored VM Quota
              type: integer
              format: int32
            isLdapUser:
              description: If the identity provider type is INTEGRATED, true if the
                user was imported from LDAP
              type: boolean
            identityProviderType:
              description: Shows the identity provider type of the user
              type: string
          additionalProperties: false
    vcloud_QueryResultStrandedUserRecordType:
      title: vcloud_QueryResultStrandedUserRecordType
      description: Type for a single strandedUser query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of a stranded user.
              type: string
            fullName:
              description: The full name of this user.
              type: string
            isInSync:
              description: True if this list is up to date.
              type: boolean
            numberOfDeployedVMs:
              description: Number of deployed VMs
              type: integer
              format: int32
            numberOfStoredVMs:
              description: Number of stored VMs
              type: integer
              format: int32
            org:
              description: Organization reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultRoleRecordType:
      title: vcloud_QueryResultRoleRecordType
      description: Type for a single role query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this role.
              type: string
            isReadOnly:
              description: True if this entity is read\-only.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultAllocatedExternalAddressRecordType:
      title: vcloud_QueryResultAllocatedExternalAddressRecordType
      description: Type for a single allocatedExternalAddress query result in records
        format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            network:
              description: Network reference or id
              type: string
            ipAddress:
              description: Allocated IP address
              type: string
            linkedNetwork:
              description: Linked network reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultEventRecordType:
      title: vcloud_QueryResultEventRecordType
      description: Type for a single event query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            eventType:
              description: Event type
              type: string
            timeStamp:
              description: Time stamp
              type: string
              format: date-time
            eventStatus:
              description: Event status
              type: integer
              format: int32
            userName:
              description: User name
              type: string
            orgName:
              description: Organization name
              type: string
            entityType:
              description: Entity type
              type: string
            entityName:
              description: Entity name
              type: string
            serviceNamespace:
              description: Service name space
              type: string
            entity:
              description: Entity reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultResourcePoolRecordType:
      title: vcloud_QueryResultResourcePoolRecordType
      description: Type for a single resourcePool query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this resource pool.
              type: string
            moref:
              description: Managed object reference
              type: string
            isDeleted:
              description: True if this entity is deleted
              type: boolean
            vc:
              description: Virtual center reference or id
              type: string
            vcName:
              description: Vitual center name
              type: string
          additionalProperties: false
    vcloud_QueryResultDatastoreRecordType:
      title: vcloud_QueryResultDatastoreRecordType
      description: Type for a single datastore query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this datastore.
              type: string
            datastoreType:
              description: Datastore type
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            isDeleted:
              description: True if this entity is deleted
              type: boolean
            storageUsedMB:
              description: Storage used in MB
              type: integer
              format: int64
            storageMB:
              description: Storage in MB
              type: integer
              format: int64
            provisionedStorageMB:
              description: Provisioned storage in MB
              type: integer
              format: int64
            requestedStorageMB:
              description: Requested storage in MB
              type: integer
              format: int64
            vc:
              description: Virtual center reference or id
              type: string
            vcName:
              description: Vitual center name
              type: string
            moref:
              description: Managed object reference
              type: string
            numberOfProviderVdcs:
              description: Number of provider vDCs
              type: integer
              format: int32
            iopsCapacity:
              description: Total IOPS capacity
              type: integer
              format: int64
            iopsAllocated:
              description: Total IOPS used (allocated) by all provisioned disks
              type: integer
              format: int64
          additionalProperties: false
    vcloud_QueryResultNetworkPoolRecordType:
      title: vcloud_QueryResultNetworkPoolRecordType
      description: Type for a single networkPool query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: Network pool name
              type: string
            networkPoolType:
              description: Type of networkpool (0=Vlan backed network pool; 1=vNI
                backed network pool;2=Portgroup backed network pool)
              type: integer
              format: int32
            isBusy:
              description: True if this entity is busy
              type: boolean
            universalId:
              description: cross\-vc unique id for universal transport zone
              type: string
          additionalProperties: false
    vcloud_QueryResultPortgroupRecordType:
      title: vcloud_QueryResultPortgroupRecordType
      description: Type for a single portgroup query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            moref:
              description: Managed object reference of the portgroup
              type: string
            name:
              description: Portgroup name
              type: string
            portgroupType:
              description: Portgroup type
              type: string
            vc:
              description: Virtual center reference or id
              type: string
            vcName:
              description: Vitual center name associated with the portgroup
              type: string
            isVCEnabled:
              description: True if the associated vCenter is enabled.
              type: boolean
            network:
              description: Network reference or id
              type: string
            networkName:
              description: Name of the network that uses the portgroup
              type: string
            scopeType:
              description: Scope of network using the portgroup(1=Global, 2=Organization,
                3=vApp)
              type: integer
              format: int32
          additionalProperties: false
    vcloud_QueryResultDvSwitchRecordType:
      title: vcloud_QueryResultDvSwitchRecordType
      description: Type for a single dvSwitch query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            moref:
              description: Managed object reference of DV Switch
              type: string
            name:
              description: Virtual center name
              type: string
            vc:
              description: Virtual center reference or id
              type: string
            vcName:
              description: Vitual center name
              type: string
            isVCEnabled:
              description: True if the associated vCenter is enabled.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultCellRecordType:
      title: vcloud_QueryResultCellRecordType
      description: Type for a single cell query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            primaryIp:
              description: Primary IP
              type: string
            name:
              description: The Cell name
              type: string
            isActive:
              description: True if the cell is active
              type: integer
              format: int32
            isVMwareVc:
              description: True if the cell is in vCenter inventory.
              type: integer
              format: int32
            buildDate:
              description: Build date
              type: string
              format: date-time
            version:
              description: Version
              type: string
          additionalProperties: false
    vcloud_QueryResultVirtualCenterRecordType:
      title: vcloud_QueryResultVirtualCenterRecordType
      description: Type for a single virtualCenter query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this vCenter.
              type: string
            url:
              description: Url
              type: string
            userName:
              description: User name
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            vcVersion:
              description: Virtual center version
              type: string
            status:
              description: Status
              type: string
            vsmIP:
              description: vShield IP address
              type: string
            isBusy:
              description: True if this entity is busy
              type: boolean
            listenerState:
              description: The state of the listener. One of {INVALID\_SETTINGS, UNSUPPORTED,
                DISCONNECTED, CONNECTING, CONNECTED\_SYNCING, CONNECTED, ADMIN\_DISCONNECTED}.
              type: string
            uuid:
              description: Uuid
              type: string
            isSupported:
              description: True if this vCenter version is supported by this release
                of vCloud Director.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultHostRecordType:
      title: vcloud_QueryResultHostRecordType
      description: Type for a single host query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this host.
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            isDeleted:
              description: True if this entity is deleted
              type: boolean
            isBusy:
              description: True if this host has tasks in progress
              type: boolean
            isPrepared:
              description: True if this host is prepared
              type: boolean
            isSupported:
              description: True if this host's ESXi version is supported by this release
                of vCloud Director.
              type: boolean
            isHung:
              description: True if this host is hung.
              type: boolean
            isPendingUpgrade:
              description: True if this host has an upgrade pending.
              type: boolean
            state:
              description: State
              type: integer
              format: int32
            osVersion:
              description: Operating system version
              type: string
            isCrossHostEnabled:
              description: True if this host is cross\-host enabled.
              type: boolean
            numberOfVMs:
              description: Number of VMs
              type: integer
              format: int32
            isInMaintenanceMode:
              description: True if this host is in maintenance mode.
              type: boolean
            vc:
              description: Virtual center reference or id
              type: string
            vcName:
              description: Vitual center name
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminVAppRecordType:
      title: vcloud_QueryResultAdminVAppRecordType
      description: Type for a single adminVApp query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this vApp.
              type: string
            org:
              description: Organization reference or id
              type: string
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            isVdcEnabled:
              description: True if the containing VDC is enabled.
              type: boolean
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            isBusy:
              description: True if this entity is busy
              type: boolean
            creationDate:
              description: Creation date
              type: string
              format: date-time
            status:
              description: Status
              type: string
            ownerName:
              description: Owner name
              type: string
            storageKB:
              description: Storage in KB
              type: integer
              format: int64
            numberOfVMs:
              description: Number of VMs
              type: integer
              format: int32
            cpuAllocationMhz:
              description: CPU allocation in Mhz
              type: integer
              format: int32
            memoryAllocationMB:
              description: Memory allocation in MB
              type: integer
              format: int32
            isDeployed:
              description: True if the vApp is deployed.
              type: boolean
            isInMaintenanceMode:
              description: True if the vApp is in maintenance mode.
              type: boolean
            isAutoNature:
              description: True if the parent vApp is a managed vApp
              type: boolean
            isExpired:
              description: True if the vApp is expired.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultRightRecordType:
      title: vcloud_QueryResultRightRecordType
      description: Type for a single right query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this right.
              type: string
            category:
              description: Category
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminVMRecordType:
      title: vcloud_QueryResultAdminVMRecordType
      description: Type for a single adminVM query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this VM.
              type: string
            containerName:
              description: The name of the containing vApp or vApp template.
              type: string
            container:
              description: Vapp or Vapp template
              type: string
            status:
              description: Status
              type: string
            vdc:
              description: VDC reference or id
              type: string
            hostName:
              description: ESXi host for this VM
              type: string
            isVAppTemplate:
              description: True if the VM belongs to a vApp template.
              type: boolean
            isDeleted:
              description: True if this entity is deleted
              type: boolean
            guestOs:
              description: Guest operating system
              type: string
            numberOfCpus:
              description: Number of CPUs
              type: integer
              format: int32
            memoryMB:
              description: Memory in MB
              type: integer
              format: int32
            networkName:
              description: Network name
              type: string
            isDeployed:
              description: True if this entity is deployed
              type: boolean
            isPublished:
              description: True if this entity is in a published catalog
              type: boolean
            catalogName:
              description: Catalog name
              type: string
            isVdcEnabled:
              description: True if the containing VDC is enabled
              type: boolean
            hardwareVersion:
              description: Hardware version
              type: integer
              format: int32
            vmToolsVersion:
              description: VM tools version
              type: integer
              format: int32
            datastoreName:
              description: Datastore name
              type: string
            vc:
              description: Virtual center reference or id
              type: string
            moref:
              description: Managed object reference
              type: string
            org:
              description: Organization reference or id
              type: string
            storageProfileName:
              description: Storage profile name
              type: string
            gcStatus:
              description: GC status of this VM.
              type: string
            isAutoNature:
              description: True if the parent vApp is a managed vApp
              type: boolean
          additionalProperties: false
    vcloud_QueryResultAdminAllocatedExternalAddressRecordType:
      title: vcloud_QueryResultAdminAllocatedExternalAddressRecordType
      description: Type for a single adminAllocatedExternalAddress query result in
        records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            network:
              description: Network reference or id
              type: string
            ipAddress:
              description: Allocated IP address
              type: string
            linkedNetwork:
              description: Linked network reference or id
              type: string
            org:
              description: Organization reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultVAppOrgNetworkRelationRecordType:
      title: vcloud_QueryResultVAppOrgNetworkRelationRecordType
      description: Type for a single vAppOrgNetworkRelation query result in records
        format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: Entity name
              type: string
            org:
              description: Organization reference or id
              type: string
            orgNetwork:
              description: Network reference or id
              type: string
            orgNetworkName:
              description: Network name
              type: string
            configurationType:
              description: Configuration Type
              type: string
            status:
              description: Status
              type: string
            ownerName:
              description: Owner name
              type: string
          additionalProperties: false
    vcloud_QueryResultOrgVdcResourcePoolRelationRecordType:
      title: vcloud_QueryResultOrgVdcResourcePoolRelationRecordType
      description: Type for a single orgVdcResourcePoolRelation query result in records
        format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            vdc:
              description: VDC reference or id
              type: string
            vc:
              description: Virtual center reference or id
              type: string
            resourcePoolMoref:
              description: Resource pool managed object reference
              type: string
          additionalProperties: false
    vcloud_QueryResultProviderVdcResourcePoolRelationRecordType:
      title: vcloud_QueryResultProviderVdcResourcePoolRelationRecordType
      description: Type for a single providerVdcResourcePoolRelation query result
        in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this resource pool.
              type: string
            resourcePoolMoref:
              description: Resource pool managed object reference
              type: string
            cpuReservationLimitMhz:
              description: CPU reservation limit in Mhz
              type: integer
              format: int64
            cpuReservationAllocationMhz:
              description: CPU reservation allocation in Mhz
              type: integer
              format: int64
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            memoryReservationLimitMB:
              description: Memory reservation limit in MB
              type: integer
              format: int64
            memoryReservationAllocationMB:
              description: Memory reservation allocation in MB
              type: integer
              format: int64
            isPrimary:
              description: True if this is the primary resource pool for this Provider
                VDC.
              type: boolean
            providerVdc:
              description: Provider VDC reference or id
              type: string
            vc:
              description: Virtual center reference or id
              type: string
            vcName:
              description: Vitual center name
              type: string
            numberOfVMs:
              description: Number of VMs
              type: integer
              format: int32
          additionalProperties: false
    vcloud_QueryResultDatastoreProviderVdcRelationRecordType:
      title: vcloud_QueryResultDatastoreProviderVdcRelationRecordType
      description: Type for a single datastoreProviderVdcRelation query result in
        records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this datastore.
              type: string
            datastoreType:
              description: Datastore type
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            isDeleted:
              description: True if this entity is deleted
              type: boolean
            storageUsedMB:
              description: Storage used in MB
              type: number
              format: float
            storageMB:
              description: Storage in MB
              type: number
              format: float
            provisionedStorageMB:
              description: Provisioned storage in MB
              type: number
              format: float
            requestedStorageMB:
              description: Requested storage in MB
              type: number
              format: float
            vc:
              description: Virtual center reference or id
              type: string
            vcName:
              description: Vitual center name
              type: string
            moref:
              description: Managed object reference
              type: string
            providerVdc:
              description: Provider VDC reference or id
              type: string
            datastore:
              description: Datastore reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminUserRecordType:
      title: vcloud_QueryResultAdminUserRecordType
      description: Type for a single adminUser query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this user.
              type: string
            org:
              description: Organization reference or id
              type: string
            fullName:
              description: The full name of this user.
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            numberOfDeployedVMs:
              description: Number of deployed VMs
              type: integer
              format: int32
            deployedVMQuota:
              description: Running VMs Quota
              type: integer
              format: int32
            numberOfStoredVMs:
              description: Number of stored VMs
              type: integer
              format: int32
            storedVMQuota:
              description: Stored VM Quota
              type: integer
              format: int32
            isLdapUser:
              description: If the identity provider type is INTEGRATED, shows whether
                the user was imported from LDAP
              type: boolean
            deployedVMQuotaRank:
              description: Deployed VM quota rank
              type: integer
              format: int32
            storedVMQuotaRank:
              description: Stored VM Quota rank
              type: integer
              format: int32
            identityProviderType:
              description: Shows the identity provider type of the user
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminGroupRecordType:
      title: vcloud_QueryResultAdminGroupRecordType
      description: Type for a single adminGroup query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this group.
              type: string
            org:
              description: Organization reference or id
              type: string
            roleName:
              description: Role name
              type: string
            isReadOnly:
              description: True if this entity is read\-only
              type: boolean
            identityProviderType:
              description: Shows the identity provider type of the group
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminVAppNetworkRecordType:
      title: vcloud_QueryResultAdminVAppNetworkRecordType
      description: Type for a single adminVAppNetwork query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this network.
              type: string
            org:
              description: Organization reference or id
              type: string
            isIpScopeInherited:
              description: True if this network's IP scope is inherited.
              type: boolean
            gateway:
              description: Gateway
              type: string
            netmask:
              description: Netmask
              type: string
            dns1:
              description: Primary DNS
              type: string
            dns2:
              description: Secondary DNS
              type: string
            dnsSuffix:
              description: DNS suffix
              type: string
            vApp:
              description: VApp reference or id
              type: string
            vappName:
              description: Vapp name
              type: string
            isBusy:
              description: True if this entity is busy
              type: boolean
          additionalProperties: false
    vcloud_QueryResultAdminCatalogRecordType:
      title: vcloud_QueryResultAdminCatalogRecordType
      description: Type for a single adminCatalog query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            org:
              description: Organization reference or id
              type: string
            name:
              description: The name of this catalog.
              type: string
            isPublished:
              description: True if this entity is in a published catalog
              type: boolean
            isShared:
              description: True if this entity is shared
              type: boolean
            creationDate:
              description: Creation date
              type: string
              format: date-time
            orgName:
              description: Organization name
              type: string
            ownerName:
              description: Owner name
              type: string
            numberOfTemplates:
              description: Number of vApp templates
              type: integer
              format: int32
            numberOfMedia:
              description: Number of media
              type: integer
              format: int32
            owner:
              description: Owner reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminCatalogItemRecordType:
      title: vcloud_QueryResultAdminCatalogItemRecordType
      description: Type for a single adminCatalogItem query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            entity:
              description: Entity reference or id
              type: string
            entityName:
              description: Entity name
              type: string
            entityType:
              description: Entity type
              type: string
            catalog:
              description: Catalog reference or id
              type: string
            catalogName:
              description: Catalog name
              type: string
            ownerName:
              description: Owner name
              type: string
            owner:
              description: Owner reference or id
              type: string
            isPublished:
              description: True if this entity is in a published catalog
              type: boolean
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            isVdcEnabled:
              description: True if the containing VDC is enabled.
              type: boolean
            org:
              description: Organization reference or id
              type: string
            creationDate:
              description: Creation date
              type: string
              format: date-time
            isExpired:
              description: True if this entity is expired
              type: boolean
            status:
              description: Status
              type: string
            name:
              description: The name of this catalog item.
              type: string
          additionalProperties: false
    vcloud_QueryResultCatalogItemRecordType:
      title: vcloud_QueryResultCatalogItemRecordType
      description: Type for a single catalogItem query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            entity:
              description: Entity reference or id
              type: string
            entityName:
              description: Entity name
              type: string
            entityType:
              description: Entity type
              type: string
            catalog:
              description: Catalog reference or id
              type: string
            catalogName:
              description: Catalog name
              type: string
            ownerName:
              description: Owner name
              type: string
            owner:
              description: Owner reference or id
              type: string
            isPublished:
              description: True if this entity is in a published catalog
              type: boolean
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            isVdcEnabled:
              description: True if the containing VDC is enabled.
              type: boolean
            creationDate:
              description: Creation date
              type: string
              format: date-time
            isExpired:
              description: True if this entity is expired
              type: boolean
            status:
              description: Status
              type: string
            name:
              description: The name of this catalog item.
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminMediaRecordType:
      title: vcloud_QueryResultAdminMediaRecordType
      description: Type for a single adminMedia query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            org:
              description: Organization reference or id
              type: string
            ownerName:
              description: Owner name
              type: string
            owner:
              description: Owner reference or id
              type: string
            isPublished:
              description: True if this entity is in a published catalog
              type: boolean
            name:
              description: The name of this media object.
              type: string
            storageB:
              description: Storage in Bytes
              type: integer
              format: int64
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            isVdcEnabled:
              description: True if the containing VDC is enabled.
              type: boolean
            catalog:
              description: Catalog reference or id
              type: string
            catalogName:
              description: Catalog name
              type: string
            catalogItem:
              description: Catalog item reference or id
              type: string
            creationDate:
              description: Creation date
              type: string
              format: date-time
            isBusy:
              description: True if this entity is busy
              type: boolean
            status:
              description: Status
              type: string
            storageProfileName:
              description: Storage profile name
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminVAppTemplateRecordType:
      title: vcloud_QueryResultAdminVAppTemplateRecordType
      description: Type for a single adminVAppTemplate query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            org:
              description: Organization reference or id
              type: string
            ownerName:
              description: Owner name
              type: string
            owner:
              description: Owner reference or id
              type: string
            isPublished:
              description: True if this entity is in a published catalog.
              type: boolean
            name:
              description: The name of this vApp template.
              type: string
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            isVdcEnabled:
              description: True if the containing VDC is enabled.
              type: boolean
            catalog:
              description: Catalog reference or id
              type: string
            catalogName:
              description: Catalog name
              type: string
            catalogItem:
              description: Catalog item reference or id
              type: string
            creationDate:
              description: Creation date
              type: string
              format: date-time
            isBusy:
              description: True if this entity is busy
              type: boolean
            isGoldMaster:
              description: True if this template is marked as a gold master
              type: boolean
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            isExpired:
              description: True if this entity is expired
              type: boolean
            isDeployed:
              description: True if this entity is deployed
              type: boolean
            status:
              description: Status
              type: string
            storageProfileName:
              description: Storage profile name
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminShadowVMRecordType:
      title: vcloud_QueryResultAdminShadowVMRecordType
      description: Type for a single adminShadowVM query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            isPublished:
              description: True if this entity is in a published catalog
              type: boolean
            name:
              description: Entity name
              type: string
            primaryVmName:
              description: Primary VM name
              type: string
            shadowVApp:
              description: Shadow vApp reference or id
              type: string
            primaryVAppTemplate:
              description: Primary vApp template reference or id
              type: string
            primaryVAppName:
              description: Primary vApp name
              type: string
            datastoreName:
              description: Datastore name
              type: string
            vcName:
              description: Vitual center name
              type: string
            isDeleted:
              description: True if this entity is deleted
              type: boolean
            status:
              description: Status
              type: string
            isBusy:
              description: True if this entity is busy
              type: boolean
            primaryVMOwner:
              description: Primary VM owner reference or id
              type: string
            primaryVM:
              description: Primary VM refernce or id
              type: string
            primaryVMCatalog:
              description: Primary VM catalog reference or id
              type: string
            org:
              description: Organization reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultTaskRecordType:
      title: vcloud_QueryResultTaskRecordType
      description: Type for a single task query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            org:
              description: Organization reference or id
              type: string
            orgName:
              description: Organization name
              type: string
            name:
              description: The name of this task.
              type: string
            operationFull:
              description: The full human readable name of this task.
              type: string
            startDate:
              description: Start date
              type: string
              format: date-time
            endDate:
              description: End date
              type: string
              format: date-time
            status:
              description: Status
              type: string
            progress:
              description: Progress of the task, expressed as a percentage.
              type: integer
              format: int32
            ownerName:
              description: Owner name
              type: string
            object:
              description: Object
              type: string
            objectType:
              description: Object type
              type: string
            objectName:
              description: Object name
              type: string
            serviceNamespace:
              description: Service name space
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminTaskRecordType:
      title: vcloud_QueryResultAdminTaskRecordType
      description: Type for a single adminTask query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            org:
              description: Organization reference or id
              type: string
            orgName:
              description: Organization name
              type: string
            name:
              description: The name of this task.
              type: string
            operationFull:
              description: The full human readable name of this task.
              type: string
            startDate:
              description: Start date
              type: string
              format: date-time
            endDate:
              description: End date
              type: string
              format: date-time
            status:
              description: Status
              type: string
            progress:
              description: Progress of the task, expressed as a percentage.
              type: integer
              format: int32
            owner:
              description: Owner reference or id
              type: string
            ownerName:
              description: Owner name
              type: string
            object:
              description: Object
              type: string
            objectType:
              description: Object type
              type: string
            objectName:
              description: Object name
              type: string
            cellName:
              description: Cell name
              type: string
            serviceNamespace:
              description: Service name space
              type: string
            hasOwner:
              description: True if this task has an owner.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultBlockingTaskRecordType:
      title: vcloud_QueryResultBlockingTaskRecordType
      description: Type for a single blockingTask query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            status:
              description: Status
              type: string
            operationName:
              description: Operation name
              type: string
            owner:
              description: Owner reference or id
              type: string
            ownerName:
              description: Owner name
              type: string
            originatingOrgName:
              description: Originating organization name
              type: string
            originatingOrg:
              description: Organization reference or id
              type: string
            creationDate:
              description: Creation date
              type: string
              format: date-time
            expirationTime:
              description: Expiration time
              type: string
              format: date-time
            timeoutAction:
              description: Time action
              type: string
            task:
              description: task reference or id
              type: string
            jobStatus:
              description: Job status
              type: string
            hasOwner:
              description: True if this blocking task has an owner.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultDiskRecordType:
      title: vcloud_QueryResultDiskRecordType
      description: Type for a single disk query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: Disk name
              type: string
            vdc:
              description: VDC reference or id
              type: string
            sizeB:
              description: Size of the disk in bytes
              type: integer
              format: int64
            datastore:
              description: Datastore reference or id
              type: string
            datastoreName:
              description: Datastore name
              type: string
            ownerName:
              description: Owner name
              type: string
            vdcName:
              description: VDC name
              type: string
            task:
              description: In\-progress task reference or id
              type: string
            storageProfile:
              description: Storage profile reference or id
              type: string
            storageProfileName:
              description: Storage profile name
              type: string
            status:
              description: Disk status
              type: string
            busType:
              description: Disk controller type
              type: string
            busTypeDesc:
              description: Disk controller type description
              type: string
            busSubType:
              description: Disk controller subtype
              type: string
            isAttached:
              description: True if the disk is already attached.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultVmDiskRelationRecordType:
      title: vcloud_QueryResultVmDiskRelationRecordType
      description: Type for a single vmDiskRelation query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            vdc:
              description: vDc reference or id
              type: string
            disk:
              description: Disk reference or id
              type: string
            vm:
              description: Virtual machine reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminDiskRecordType:
      title: vcloud_QueryResultAdminDiskRecordType
      description: Type for a single adminDisk query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              type: string
            vdc:
              description: VDC reference or id
              type: string
            sizeB:
              description: Size of disk in bytes
              type: integer
              format: int64
            vc:
              description: Virtual center reference or id
              type: string
            datastore:
              description: Datastore reference or id
              type: string
            datastoreName:
              description: Datastore name
              type: string
            ownerName:
              description: Owner name
              type: string
            vdcName:
              description: VDC name
              type: string
            org:
              description: Organization reference or id
              type: string
            task:
              description: In\-progress task reference or id
              type: string
            storageProfile:
              description: Storage profile reference or id
              type: string
            storageProfileName:
              description: Storage profile reference or id
              type: string
            status:
              description: Disk status
              type: string
            busType:
              description: Disk controller type
              type: string
            busTypeDesc:
              description: Disk controller type description
              type: string
            busSubType:
              description: Disk controller subtype
              type: string
            isAttached:
              description: True if the disk is already attached.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultAdminVmDiskRelationRecordType:
      title: vcloud_QueryResultAdminVmDiskRelationRecordType
      description: Type for a single adminVMDiskRelation query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            vdc:
              description: VDC reference or id
              type: string
            disk:
              description: Disk reference or id
              type: string
            vm:
              description: Virtual machine reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultConditionRecordType:
      title: vcloud_QueryResultConditionRecordType
      description: Type for a single condition query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            object:
              description: Reference to the entity
              type: string
            objectType:
              description: The type of the object.
              type: string
            severity:
              description: 'The severity of the condition. One of RED:the integrity
                of the object has been compromised and the object may be inaccessible
                or inoperable. ORANGE: the integrity of the object has been compromised.
                YELLOW: the condition should be investigated when convenient. BLUE:
                object is in consistent state.'
              type: string
            summary:
              description: A summary of the condition.
              type: string
            details:
              description: Details of the condition.
              type: string
            occurenceDate:
              description: Date and time when the condition occurred.
              type: string
              format: date-time
          additionalProperties: false
    vcloud_QueryResultAdminEventRecordType:
      title: vcloud_QueryResultAdminEventRecordType
      description: Type for a single adminEvent query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            eventId:
              description: Event ID.
              type: string
            eventType:
              description: Event type
              type: string
            timeStamp:
              description: Time stamp
              type: string
              format: date-time
            eventStatus:
              description: Event status
              type: integer
              format: int32
            userName:
              description: User name
              type: string
            orgName:
              description: Organization name
              type: string
            entityType:
              description: Entity type
              type: string
            entityName:
              description: Entity name
              type: string
            serviceNamespace:
              description: Service namespace
              type: string
            productVersion:
              description: Version of the product
              type: string
            entity:
              description: Entity reference or id
              type: string
            org:
              description: Organization reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultStrandedItemRecordType:
      title: vcloud_QueryResultStrandedItemRecordType
      description: Type for a single strandedItem query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this stranded item.
              type: string
            vimObjectType:
              description: Vim object type
              type: string
            parentName:
              description: The name of the parent of the stranded item
              type: string
            deletionDate:
              description: Date when the vCD object is deleted
              type: string
              format: date-time
            parent:
              description: The href of the parent of the stranded item
              type: string
            numberOfPurgeAttempts:
              description: Shows if purging of the item from a vCenter has failed
              type: integer
              format: int32
          additionalProperties: false
    vcloud_QueryResultAdminServiceRecordType:
      title: vcloud_QueryResultAdminServiceRecordType
      description: Type for a single adminService query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: Name of the external service.
              type: string
            enabled:
              description: True if service is enabled.
              type: boolean
            exchange:
              description: The service exchange.
              type: string
            priority:
              description: Service priority.
              type: integer
              format: int32
            routingKey:
              description: The service routing key.
              type: string
            vendor:
              description: Service vendor.
              type: string
            namespace:
              description: Service namespace.
              type: string
            isAuthorizationEnabled:
              description: True if authorization is enabled.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultServiceRecordType:
      title: vcloud_QueryResultServiceRecordType
      description: Type for a single service query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: Name of the external service.
              type: string
            vendor:
              description: External service vendor.
              type: string
            namespace:
              description: Service namespace.
              type: string
          additionalProperties: false
    vcloud_QueryResultServiceLinkRecordType:
      title: vcloud_QueryResultServiceLinkRecordType
      description: Type for a single serviceLink query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            rel:
              description: Relation for the link.
              type: string
            linkHref:
              description: Href for the link.
              type: string
            mimeType:
              description: Link's mime type.
              type: string
            resourceType:
              description: Resource type the link is registered for.
              type: string
            service:
              description: Service reference or id
              type: string
            resourceId:
              description: Resource id the link is registered for.
              type: string
          additionalProperties: false
    vcloud_QueryResultOrgVdcStorageProfileRecordType:
      title: vcloud_QueryResultOrgVdcStorageProfileRecordType
      description: Type for a single orgVdcStorageProfile query result in records
        format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: Name of the storage profile
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            isDefaultStorageProfile:
              description: True if this is the default storage profile.
              type: boolean
            storageUsedMB:
              description: Storage used in MB
              type: integer
              format: int32
            storageLimitMB:
              description: Storage limit in MB
              type: integer
              format: int32
            iopsAllocated:
              description: Total IOPS currently allocated to this storage profile
              type: integer
              format: int64
            iopsLimit:
              description: IOPS limit for the storage profile
              type: integer
              format: int64
            numberOfConditions:
              description: Number of conditions on the storage profile
              type: integer
              format: int32
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            isVdcBusy:
              description: True if the associated VDC is busy.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultAdminOrgVdcStorageProfileRecordType:
      title: vcloud_QueryResultAdminOrgVdcStorageProfileRecordType
      description: Type for a single adminOrgVdcStorageProfile query result in records
        format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: Name of the storage profile
              type: string
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            isDefaultStorageProfile:
              description: True if this is the default storage profile for a VDC.
              type: boolean
            storageUsedMB:
              description: Storage used in MB
              type: integer
              format: int32
            storageLimitMB:
              description: Storage limit in MB
              type: integer
              format: int32
            iopsAllocated:
              description: Total currently allocated IOPS on the storage profile
              type: integer
              format: int64
            iopsLimit:
              description: IOPS limit for the storage profile
              type: integer
              format: int64
            numberOfConditions:
              description: Number of conditions on the storage profile
              type: integer
              format: int32
            vdc:
              description: VDC reference or id
              type: string
            vdcName:
              description: VDC name
              type: string
            org:
              description: Organization reference or id
              type: string
            vc:
              description: Virtual center reference or id
              type: string
            storageProfileMoref:
              description: Managed object reference of the storage profile
              type: string
          additionalProperties: false
    vcloud_QueryResultProviderVdcStorageProfileRecordType:
      title: vcloud_QueryResultProviderVdcStorageProfileRecordType
      description: Type for a single providerVdcStorageProfile query result in records
        format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            isEnabled:
              description: True if this entity is enabled
              type: boolean
            name:
              description: Name of the Provider VDC storage profile
              type: string
            storageTotalMB:
              description: Total storage in MB
              type: integer
              format: int64
            storageUsedMB:
              type: integer
              format: int64
            storageRequestedMB:
              type: integer
              format: int64
            storageProvisionedMB:
              type: integer
              format: int64
            numberOfConditions:
              description: Number of conditions on the provider storage profile
              type: integer
              format: int32
            providerVdc:
              description: Provider VDC reference or id
              type: string
            vc:
              description: Virtual center reference or id
              type: string
            storageProfileMoref:
              description: Managed object reference of the storage profile
              type: string
            iopsCapacity:
              description: Provider VDC IOPS capacity
              type: integer
              format: int64
            iopsAllocated:
              description: IOPS allocated in Provider VDC
              type: integer
              format: int64
          additionalProperties: false
    vcloud_QueryResultApiFilterRecordType:
      title: vcloud_QueryResultApiFilterRecordType
      description: Type for a single apiFilter query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            urlPattern:
              description: Url pattern on which the extension service is bind.
              type: string
            service:
              description: Service reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminApiDefinitionRecordType:
      title: vcloud_QueryResultAdminApiDefinitionRecordType
      description: Type for a single adminApiDefinition query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: API definition name
              type: string
            entryPoint:
              description: API definition entry point
              type: string
            service:
              description: Service reference or id
              type: string
            namespace:
              description: API definition namespace.
              type: string
            apiVendor:
              description: API definition vendor.
              type: string
            serviceName:
              description: Service name
              type: string
            serviceNamespace:
              description: Service namespace
              type: string
            serviceVendor:
              description: Service vendor
              type: string
          additionalProperties: false
    vcloud_QueryResultApiDefinitionRecordType:
      title: vcloud_QueryResultApiDefinitionRecordType
      description: Type for a single apiDefinition query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: API definition name
              type: string
            entryPoint:
              description: API definition entry point
              type: string
            service:
              description: Service reference or id
              type: string
            namespace:
              description: API definition namespace.
              type: string
            apiVendor:
              description: API definition vendor.
              type: string
            serviceName:
              description: Service name
              type: string
            serviceNamespace:
              description: Service namespace
              type: string
            serviceVendor:
              description: Service vendor
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminFileDescriptorRecordType:
      title: vcloud_QueryResultAdminFileDescriptorRecordType
      description: Type for a single adminFileDescriptor query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            fileUrl:
              description: File URL.
              type: string
            apiDefinition:
              description: Reference to the API definition owner of the file descriptor
              type: string
            fileMimeType:
              description: File mime type.
              type: string
            name:
              description: File name.
              type: string
            apiName:
              description: API definition name
              type: string
            apiNamespace:
              description: API definition namespace
              type: string
            apiVendor:
              description: API definition vendor
              type: string
            serviceName:
              description: File descriptor owner service name
              type: string
            serviceNamespace:
              description: File descriptor owner service namespace
              type: string
            serviceVendor:
              description: File descriptor owner service vendor
              type: string
            service:
              description: Service reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultFileDescriptorRecordType:
      title: vcloud_QueryResultFileDescriptorRecordType
      description: Type for a single fileDescriptor query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            fileUrl:
              description: File URL.
              type: string
            apiDefinition:
              description: Reference to the API definition owner of the file descriptor
              type: string
            fileMimeType:
              description: File mime type.
              type: string
            name:
              description: File name.
              type: string
            apiName:
              description: API definition name
              type: string
            apiNamespace:
              description: API definition namespace
              type: string
            apiVendor:
              description: API definition vendor
              type: string
            serviceName:
              description: File descriptor owner service name
              type: string
            serviceNamespace:
              description: File descriptor owner service namespace
              type: string
            serviceVendor:
              description: File descriptor owner service vendor
              type: string
            service:
              description: Service reference or id
              type: string
          additionalProperties: false
    vcloud_QueryResultResourceClassActionRecordType:
      title: vcloud_QueryResultResourceClassActionRecordType
      description: Type for a single resourceClassAction query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of the action.
              type: string
            httpMethod:
              description: HTTP request method. One of GET, POST, PUT, DELETE.
              type: string
            urlPattern:
              description: HTTP URL regular expression pattern.
              type: string
            resourceClass:
              description: Reference to resource class.
              type: string
          additionalProperties: false
    vcloud_QueryResultAclRuleRecordType:
      title: vcloud_QueryResultAclRuleRecordType
      description: Type for a single aclRule query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            org:
              description: Organization reference or id.
              type: string
            principal:
              description: Principal reference.
              type: string
            name:
              description: The name of the ACL rule.
              type: string
            serviceResource:
              description: ServiceResource reference or id.
              type: string
            principalType:
              description: Principal type \- user or right.
              type: string
            resourceClassAction:
              description: Resource class action reference or id.
              type: string
            orgAccess:
              description: Organization Access \- Entity, Shared or Published.
              type: string
            serviceResourceAccess:
              description: Service Resource Access \- Entity or Shared .
              type: string
            principalAccess:
              description: Principal Access \- Entity or Shared.
              type: string
          additionalProperties: false
    vcloud_QueryResultResourceClassRecordType:
      title: vcloud_QueryResultResourceClassRecordType
      description: Type for a single resourceClass query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of the resource class.
              type: string
            service:
              description: Service reference or id
              type: string
            mimeType:
              description: The MIME type of this resource class.
              type: string
            urlTemplate:
              description: Object's url template
              type: string
            nid:
              description: NID part of a urn which in the resolving process will have
                link based on the url template
              type: string
            urnPattern:
              description: String template that should match the NSS part of a urn
              type: string
          additionalProperties: false
    vcloud_QueryResultServiceResourceRecordType:
      title: vcloud_QueryResultServiceResourceRecordType
      description: Type for a single serviceResource query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of the service resource.
              type: string
            org:
              description: Reference to organization or id.
              type: string
            resourceClass:
              description: Reference to resource class.
              type: string
            externalObjectId:
              description: The id of the external object.
              type: string
          additionalProperties: false
    vcloud_QueryResultEdgeGatewayRecordType:
      title: vcloud_QueryResultEdgeGatewayRecordType
      description: Type for a single edgeGateway query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: EdgeGateway name.
              type: string
            vdc:
              description: VDC Reference or ID
              type: string
            numberOfExtNetworks:
              description: Number of external networks connected to the edgeGateway.
              type: integer
              format: int32
            numberOfOrgNetworks:
              description: Number of org VDC networks connected to the edgeGateway
              type: integer
              format: int32
            isBusy:
              description: True if this Edge Gateway is busy.
              type: boolean
            orgVdcName:
              type: string
            availableNetCount:
              description: Available networks count
              type: integer
              format: int32
            gatewayStatus:
              type: string
            haStatus:
              description: High Availability Status of the edgeGateway
              type: string
            advancedNetworkingEnabled:
              description: Is Advanced Networking Enabled
              type: boolean
            distributedRoutingEnabled:
              description: True if Distributed Routing for this Edge Gateway is enabled
              type: boolean
          additionalProperties: false
    vcloud_QueryResultOrgVdcNetworkRecordType:
      title: vcloud_QueryResultOrgVdcNetworkRecordType
      description: Type for a single orgVdcNetwork query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: Network Name
              type: string
            defaultGateway:
              description: Default Gateway
              type: string
            netmask:
              description: Netmask
              type: string
            dns1:
              description: Primary DNS
              type: string
            dns2:
              description: Secondary DNS
              type: string
            dnsSuffix:
              description: DNS Suffix
              type: string
            linkType:
              description: Link Type
              type: integer
              format: int32
            connectedTo:
              description: Network or Gateway that it connects to
              type: string
            vdc:
              description: VDC Reference or ID
              type: string
            isBusy:
              description: True if this network is busy.
              type: boolean
            isShared:
              description: True if this network is shared.
              type: boolean
            vdcName:
              description: VDC Name
              type: string
            isIpScopeInherited:
              description: True if this network's IP scope is inherited.
              type: boolean
            usedIpCount:
              description: Used IP Count
              type: integer
              format: int32
            totalIpCount:
              description: Total IP Count
              type: integer
              format: int32
            interfaceType:
              description: Interface Type
              type: integer
              format: int32
            crossVdcNetworkId:
              description: Owner cross\-vdc network Id
              type: string
            crossVdcNetworkSiteId:
              description: Site Id of owning cross\-vdc network
              type: string
          additionalProperties: false
    vcloud_QueryResultVAppOrgVdcNetworkRelationRecordType:
      title: vcloud_QueryResultVAppOrgVdcNetworkRelationRecordType
      description: Type for a single vAppOrgVdcNetworkRelation query result in records
        format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            entityType:
              description: Configuration Type
              type: string
            name:
              description: Entity name
              type: string
            org:
              description: Organization reference or id
              type: string
            orgVdcNetwork:
              description: Network reference or id
              type: string
            orgVdcNetworkName:
              description: Network name
              type: string
            status:
              description: Status
              type: string
            ownerName:
              description: Owner name
              type: string
          additionalProperties: false
    vcloud_QueryResultExternalLocalizationRecordType:
      title: vcloud_QueryResultExternalLocalizationRecordType
      description: Type for a single externalLocalization query result in records
        format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            serviceNamespace:
              description: Service namespace
              type: string
            locale:
              description: Locale
              type: string
            key:
              description: Localization template key
              type: string
            value:
              description: Localization template value
              type: string
          additionalProperties: false
    vcloud_QueryResultResourcePoolVMRecordType:
      title: vcloud_QueryResultResourcePoolVMRecordType
      description: Type for a single resourcePoolVmList query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              description: The name of this resource pool.
              type: string
            status:
              description: VM Status
              type: string
            containerName:
              description: Name of the vApp or vApp template that contains the VM
              type: string
            guestOs:
              description: Guest operating system
              type: string
            isDeployed:
              description: True if this entity is deployed
              type: boolean
            isBusy:
              description: True if this entity is busy
              type: boolean
            hardwareVersion:
              description: Hardware version
              type: integer
              format: int32
          additionalProperties: false
    vcloud_QueryResultVmGroupVmsRecordType:
      title: vcloud_QueryResultVmGroupVmsRecordType
      description: Type for a single vmGroupVms query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            vmGroupName:
              description: The name of the containing VM group.
              type: string
            vmName:
              description: The name of the VM.
              type: string
            vmMoref:
              description: The moref of the VM.
              type: string
            vappName:
              description: The name of the vApp to which the VM belongs.
              type: string
            vappId:
              description: The ID of the vApp to which the VM belongs.
              type: string
            orgVdcName:
              description: The name of the org VDC containing the VM.
              type: string
            orgVdcId:
              description: The ID of the org VDC containing the VM.
              type: string
            clusterMoref:
              description: The moref of the cluster containing the VM.
              type: string
            vcId:
              description: The ID of the vCenter containing the VM.
              type: string
            vmGroupId:
              description: The ID of the containing VM group.
              type: string
            isVappTemplate:
              description: True if the VM belongs to a vApp template.
              type: boolean
          additionalProperties: false
    vcloud_QueryResultVmGroupsRecordType:
      title: vcloud_QueryResultVmGroupsRecordType
      description: Type for a single vmGroups query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            vmGroupId:
              description: The ID of the VM group.
              type: string
            vmGroupName:
              description: The name of the VM group.
              type: string
            clusterMoref:
              description: The moref of the cluster containing the VM group.
              type: string
            vcId:
              description: The ID of the vCenter containing the VM group.
              type: string
          additionalProperties: false
    vcloud_QueryResultAdminRoleRecordType:
      title: vcloud_QueryResultAdminRoleRecordType
      description: Type for a single adminRole query result in records format.
      allOf:
        - $ref: '#/components/schemas/vcloud_QueryResultRecordType'
        - type: object
          properties:
            name:
              type: string
            isReadOnly:
              type: boolean
            org:
              type: string
            orgName:
              type: string
          additionalProperties: false
    vcloud_ResourceEntityType:
      title: vcloud_ResourceEntityType
      description: Base type that represents a resource entity such as a vApp template
        or virtual media.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            status:
              description: Creation status of the resource entity.
              type: integer
              format: int32
            files:
              description: Represents a list of files to be transferred (uploaded
                or downloaded). Each File in the list is part of the ResourceEntity.
              allOf:
                - $ref: '#/components/schemas/vcloud_FilesListType'
          additionalProperties: false
    vcloud_FilesListType:
      title: vcloud_FilesListType
      description: Represents a list of files to be transferred (uploaded or downloaded).
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            file:
              description: A file to be transferred (uploaded or downloaded).
              type: array
              items:
                $ref: '#/components/schemas/vcloud_FileType'
          required:
            - file
          additionalProperties: false
    vcloud_ScreenTicketType:
      title: vcloud_ScreenTicketType
      description: The ticket for accessing the console of a VM.
      type: object
      properties:
        value:
          type: string
      required:
        - value
      additionalProperties: false
    vcloud_ApiExtensibilityType:
      title: vcloud_ApiExtensibilityType
      description: Lists links to API extensibility operations and entities.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          additionalProperties: false
    vcloud_ServiceType:
      title: vcloud_ServiceType
      description: Public representation of an external service.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            namespace:
              description: Namespace for the service.
              type: string
            vendor:
              description: External service vendor.
              type: string
          additionalProperties: false
    vcloud_ApiDefinitionType:
      title: vcloud_ApiDefinitionType
      description: Representation of an API definition accessible by all authenticated
        users.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            entryPoint:
              description: The entry point of the API definition.
              type: string
            namespace:
              description: The namespace of the API definition.
              type: string
            apiVendor:
              description: API definition vendor.
              type: string
            supportedApiVersions:
              description: List of API versions supported by the ApiVendor.
              allOf:
                - $ref: '#/components/schemas/vcloud_VersionsType'
          additionalProperties: false
    vcloud_VersionsType:
      title: vcloud_VersionsType
      description: Represents a list of API versions supported by an ApiVendor.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            version:
              description: Single API version supported by an ApiVendor.
              type: array
              items:
                type: string
          additionalProperties: false
    vcloud_FileDescriptorType:
      title: vcloud_FileDescriptorType
      description: Represents a file required by an extension API definition.
      allOf:
        - $ref: '#/components/schemas/vcloud_IdentifiableResourceType'
        - type: object
          properties:
            description:
              description: Description for the file descriptor.
              type: string
            file:
              description: The file descriptor itself (name, type, href).
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_SessionType:
      title: vcloud_SessionType
      description: Represents a vCloud Session.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            user:
              description: The name of the user that owns the session
              type: string
            org:
              description: The name of the user's organization
              type: string
            userId:
              description: The URN of the user entity
              type: string
            roles:
              description: Role assigned to this user during this session.
              type: string
            locationId:
              description: Location id of the logged in org
              type: string
            authorizedLocations:
              description: The locations, both local and remote, that can be accessed
                by this user in this session.
              allOf:
                - $ref: '#/components/schemas/vcloud_AuthorizedLocationsType'
          additionalProperties: false
    vcloud_TaskType:
      title: vcloud_TaskType
      description: Represents an asynchronous operation in vCloud Director.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            status:
              description: "The execution status of the task. One of:  \n**queued**\
                \ (The task has been queued for execution)  \n**preRunning** (The\
                \ task is awaiting preprocessing or administrative action.)  \n**running**\
                \ (The task is running.)  \n**success** (The task completed with a\
                \ status of success.)  \n**error** (The task encountered an error\
                \ while running.)  \n**canceled** (The task was canceled by the owner\
                \ or an administrator.)  \n**aborted** (The task was aborted by an\
                \ administrative action.)"
              type: string
            operation:
              description: A message describing the operation that is tracked by this
                task.
              type: string
            operationName:
              description: The short name of the operation that is tracked by this
                task.
              type: string
            serviceNamespace:
              description: Identifier of the service that created the task. It must
                not start with com.vmware.vcloud and the length must be between 1
                and 128 symbols.
              type: string
            startTime:
              description: The date and time the system started executing the task.
                May not be present if the task has not been executed yet.
              type: string
              format: date-time
            endTime:
              description: The date and time that processing of the task was completed.
                May not be present if the task is still being executed.
              type: string
              format: date-time
            expiryTime:
              description: The date and time at which the task resource will be destroyed
                and no longer available for retrieval. May not be present if the task
                has not been executed or is still being executed.
              type: string
              format: date-time
            cancelRequested:
              description: Whether user has requested this processing to be canceled.
              type: boolean
            owner:
              description: Reference to the owner of the task. This is typically the
                object that the task is creating or updating.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            error:
              description: Represents error information from a failed task.
              allOf:
                - $ref: '#/components/schemas/vcloud_ErrorType'
            user:
              description: The user who started the task.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            organization:
              description: The organization to which the User belongs.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            progress:
              description: Read\-only indicator of task progress as an approximate
                percentage between 0 and 100. Not available for all tasks.
              type: integer
              format: int32
            params:
              description: The parameters with which this task was started.
              type: string
            details:
              description: Detailed message about the task. Also contained by the
                Owner entity when task status is preRunning.
              type: string
            result:
              description: An optional element that can be used to hold the result
                of a task.
              allOf:
                - $ref: '#/components/schemas/vcloud_ResultType'
          required:
            - status
            - serviceNamespace
          additionalProperties: false
    vcloud_TaskOperationListType:
      title: vcloud_TaskOperationListType
      description: List of operation names.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            operation:
              description: An operation that will be enabled as a blocking task. See
                the vCloud API Programming Guide for the operation names.
              type: array
              items:
                type: string
          additionalProperties: false
    vcloud_TaskPrototypeType:
      title: vcloud_TaskPrototypeType
      description: Describes an asynchronous operation to be performed by vCloud Director
        extension.
      type: object
      properties:
        operation:
          description: A message describing the operation that is tracked by this
            task.
          type: string
        operationName:
          description: The short name of the operation that is tracked by this task.
          type: string
        owner:
          description: Reference to the owner of the task. This is typically the object
            that the task is updating.
          allOf:
            - $ref: '#/components/schemas/vcloud_ReferenceType'
      additionalProperties: false
    vcloud_TasksListType:
      title: vcloud_TasksListType
      description: A list of tasks.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            task:
              description: A task.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_TaskType'
          additionalProperties: false
    vcloud_AbstractVAppType:
      title: vcloud_AbstractVAppType
      description: Represents a base type for VAppType and VmType.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceEntityType'
        - type: object
          properties:
            deployed:
              description: True if the virtual machine is deployed.
              type: boolean
            vAppParent:
              description: Reserved. Unimplemented.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            dateCreated:
              description: Creation date/time of the vApp.
              type: string
              format: date-time
          additionalProperties: false
    vcloud_VmType:
      title: vcloud_VmType
      description: Represents a virtual machine.
      allOf:
        - $ref: '#/components/schemas/vcloud_AbstractVAppType'
        - type: object
          properties:
            needsCustomization:
              description: True if this virtual machine needs customization.
              type: boolean
            nestedHypervisorEnabled:
              description: True if hardware\-assisted CPU virtualization capabilities
                in the host should be exposed to the guest operating system.
              type: boolean
            vAppScopedLocalId:
              description: A unique identifier for the virtual machine in the scope
                of the vApp.
              type: string
            vmCapabilities:
              description: Allows you to specify certain capabilities of this virtual
                machine.
              allOf:
                - $ref: '#/components/schemas/vcloud_VmCapabilitiesType'
            storageProfile:
              description: A reference to a storage profile to be used for this object.
                The specified storage profile must exist in the organization vDC that
                contains the object. If not specified, the default storage profile
                for the vDC is used.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            bootOptions:
              description: Boot options for this virtual machine.
              allOf:
                - $ref: '#/components/schemas/vcloud_BootOptionsType'
            media:
              description: Reference to the media object to insert in a new VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_VmCheckPGCType:
      title: vcloud_VmCheckPGCType
      description: Checks the status of if post guest customization script should
        be checked. Internal Use only.
      allOf:
        - $ref: '#/components/schemas/vcloud_AbstractVAppType'
        - type: object
          properties:
            checkPostGCStatus:
              description: Checks the status of if post guest customization script
                would be added
              type: boolean
          additionalProperties: false
    vcloud_GuestCustomizationStatusSectionType:
      title: vcloud_GuestCustomizationStatusSectionType
      description: Represents a guest customization status. Internal Use only.
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          properties:
            href:
              description: A reference to the section in URL format.
              type: string
              format: uri
            type:
              description: Current status of guest customization.
              type: string
            guestCustStatus:
              description: Current status of guest customization.
              type: string
          additionalProperties: false
    vcloud_BootOptionsType:
      title: vcloud_BootOptionsType
      description: Allows you to specify boot options for this virtual machine.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            bootDelay:
              description: Number of milliseconds to wait between powering\-on and
                booting this virtual machine. Defaults to 0. Maximum permissible value
                is 10000 milliseconds.
              type: integer
              format: int64
            enterBIOSSetup:
              description: Set to true to force this virtual machine to enter BIOS
                setup mode when rebooted. This value is reset to false after the next
                reboot.
              type: boolean
          additionalProperties: false
    vcloud_VmCapabilitiesType:
      title: vcloud_VmCapabilitiesType
      description: Allows you to specify certain capabilities of this virtual machine.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            memoryHotAddEnabled:
              description: True if the virtual machine supports addition of memory
                while powered on.
              type: boolean
            cpuHotAddEnabled:
              description: True if the virtual machine supports addition of virtual
                CPUs while powered on.
              type: boolean
          additionalProperties: false
    vcloud_VAppType:
      title: vcloud_VAppType
      description: Represents a vApp.
      allOf:
        - $ref: '#/components/schemas/vcloud_AbstractVAppType'
        - type: object
          properties:
            ovfDescriptorUploaded:
              description: Read\-only indicator that the OVF descriptor for this vApp
                has been uploaded.
              type: boolean
            owner:
              description: vApp owner.
              allOf:
                - $ref: '#/components/schemas/vcloud_OwnerType'
            autoNature:
              description: True if this vApp is automatically created by vCD when
                a new VM is discovered in a vCenter Resource Pool attached to an Organization
                VDC.
              type: boolean
            inMaintenanceMode:
              description: True if this vApp is in maintenance mode. Prevents users
                from changing vApp metadata.
              type: boolean
            children:
              description: Container for virtual machines included in this vApp.
              allOf:
                - $ref: '#/components/schemas/vcloud_VAppChildrenType'
          additionalProperties: false
    vcloud_VAppChildrenType:
      title: vcloud_VAppChildrenType
      description: Container for virtual machines included in this vApp.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          additionalProperties: false
    vcloud_RasdItemsListType:
      title: vcloud_RasdItemsListType
      description: Represents a list of RASD items specifying a group of related DMTF
        Resource Allocation Setting Data properties of this virtual machine.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          additionalProperties: false
    vcloud_InstantiationParamsType:
      title: vcloud_InstantiationParamsType
      description: Container for ovf:Section\_Type elements that specify vApp configuration
        on instantiate, compose, or recompose.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          additionalProperties: false
    vcloud_VAppNetworkConfigurationType:
      title: vcloud_VAppNetworkConfigurationType
      description: Represents a vApp network configuration.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            networkName:
              description: The name of the vApp network.
              type: string
            description:
              description: Optional description.
              type: string
            configuration:
              description: Represents a vApp network configuration.
              allOf:
                - $ref: '#/components/schemas/vcloud_NetworkConfigurationType'
            isDeployed:
              description: True if this network has been deployed.
              type: boolean
          required:
            - networkName
            - configuration
          additionalProperties: false
    vcloud_NetworkConfigSectionType:
      title: vcloud_NetworkConfigSectionType
      description: Container for vApp networks.
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          properties:
            href:
              description: A reference to the section in URL format.
              type: string
              format: uri
            type:
              description: The MIME type of the section.
              type: string
            link:
              description: Optional link to an entity or operation associated with
                this section.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LinkType'
            networkConfig:
              description: Represents the the configuration of a vApp network.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VAppNetworkConfigurationType'
          additionalProperties: false
    vcloud_LeaseSettingsSectionType:
      title: vcloud_LeaseSettingsSectionType
      description: Represents vApp lease settings.
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          properties:
            href:
              description: A reference to the section in URL format.
              type: string
              format: uri
            type:
              description: The MIME type of the section.
              type: string
            link:
              description: Optional link to an entity or operation associated with
                this section.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LinkType'
            deploymentLeaseInSeconds:
              description: Deployment lease in seconds.
              type: integer
              format: int32
            storageLeaseInSeconds:
              description: Storage lease in seconds.
              type: integer
              format: int32
            deploymentLeaseExpiration:
              description: Expiration date/time of deployment lease.
              type: string
              format: date-time
            storageLeaseExpiration:
              description: Expiration date/time of storage lease.
              type: string
              format: date-time
          additionalProperties: false
    vcloud_NetworkConnectionType:
      title: vcloud_NetworkConnectionType
      description: Represents a network connection in the virtual machine.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            network:
              description: Name of the network to which this NIC is connected.
              type: string
            needsCustomization:
              description: True if this NIC needs customization.
              type: boolean
            networkConnectionIndex:
              description: Virtual slot number associated with this NIC. First slot
                number is 0.
              type: integer
              format: int32
            ipAddress:
              description: IP address assigned to this NIC.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            externalIpAddress:
              description: If the network to which this NIC connects provides NAT
                services, the external address assigned to this NIC appears here.
              allOf:
                - $ref: '#/components/schemas/vcloud_IpAddressType'
            isConnected:
              description: If the virtual machine is undeployed, this value specifies
                whether the NIC should be connected upon deployment. If the virtual
                machine is deployed, this value reports the current status of this
                NIC's connection, and can be updated to change that connection status.
              type: boolean
            mACAddress:
              description: MAC address associated with the NIC.
              type: string
            ipAddressAllocationMode:
              description: "IP address allocation mode for this connection. One of:\
                \  \n**POOL** (A static IP address is allocated automatically from\
                \ a pool of addresses.)  \n**DHCP** (The IP address is obtained from\
                \ a DHCP service.)  \n**MANUAL** (The IP address is assigned manually\
                \ in the IpAddress element.)  \n**NONE** (No IP addressing mode specified.)"
              type: string
            networkAdapterType:
              description: "Type of network adapter to be used for this connection.\
                \ One of:  \n**VLANCE (emulated version of the AMD 79C970 PCnet32\\\
                -LANCE NIC)**  \n**E1000 (emulated version of the Intel 82545EM Gigabit\
                \ Ethernet NIC)**  \n**E1000E (emulates a newer model of Intel Gigabit\
                \ NIC (number 82574))**  \n**VMXNET (has no physical counterpart;\
                \ optimized for performance in a virtual machine)**  \n**VMXNET2 (based\
                \ on the VMXNET adapter but provides some high\\-performance features)**\
                \  \n**VMXNET3 (next generation of a paravirtualized NIC designed\
                \ for performance; not related to VMXNET or VMXNET2)**  \n**FLEXIBLE\
                \ (identifies itself as a Vlance adapter when a virtual machine boots,\
                \ but initializes itself and functions as either a Vlance or a VMXNET\
                \ adapter, depending on which driver initializes it)**  \n"
              type: string
          required:
            - network
            - networkConnectionIndex
            - isConnected
            - ipAddressAllocationMode
          additionalProperties: false
    vcloud_VirtualCpuTypeType:
      title: vcloud_VirtualCpuTypeType
      description: "Xxxxx. One of:  \n 32 \\-\\- xxxx  \n 64 \\-\\- xxxx"
      type: string
      enum:
        - VM32
        - VM64
    vcloud_MediaTypeType:
      title: vcloud_MediaTypeType
      description: "Xxxxx. One of:  \n xx \\-\\- xxxx  \n xx \\-\\- xxxx"
      type: string
      enum:
        - ISO
        - FLOPPY
    vcloud_MediaStateType:
      title: vcloud_MediaStateType
      description: "Describes the possible configuration states of a media device.\
        \ One of:  \n DISCONNECTED \\-\\- The media device is disconnected, i.e.,\
        \ it isn't configured to provide access to any local or remote media  \n SERVER\
        \ \\-\\- The media device is configured to use a media file made available\
        \ on the cell side.  \n REMOTE \\-\\- The media device is configured as a\
        \ client side device through the VM console."
      type: string
      enum:
        - DISCONNECTED
        - SERVER
        - REMOTE
    vcloud_MediaSettingsType:
      title: vcloud_MediaSettingsType
      description: TBD
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            deviceId:
              description: TBD
              type: string
            mediaImage:
              description: The media image that is mounted onto the device. This property
                can be 'null' which represents that no media is mounted on the device.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            mediaType:
              description: Specified the type of media that is mounted onto the device.
              allOf:
                - $ref: '#/components/schemas/vcloud_MediaTypeType'
            mediaState:
              description: Specifies the state of the media device.
              allOf:
                - $ref: '#/components/schemas/vcloud_MediaStateType'
            unitNumber:
              description: The device number on the controller of the media device.
              type: integer
              format: int32
            busNumber:
              description: The bus number of the media device controller.
              type: integer
              format: int32
            adapterType:
              description: The type of controller, e.g. IDE vs SCSI and if SCSI bus\-logic
                vs LSI logic.
              type: string
          required:
            - unitNumber
            - busNumber
          additionalProperties: false
    vcloud_DiskSettingsType:
      title: vcloud_DiskSettingsType
      description: A description of a virtual disk of a VM.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            diskId:
              description: Specifies a unique identifier for this disk in the scope
                of the corresponding VM. This element is optional when creating a
                VM, but if it is provided it should be unique. This element is mandatory
                when updating an existing disk.
              type: string
            sizeMb:
              description: The size of the disk in MB.
              type: integer
              format: int64
            unitNumber:
              description: The device number on the SCSI or IDE controller of the
                disk.
              type: integer
              format: int32
            busNumber:
              description: The number of the SCSI or IDE controller itself.
              type: integer
              format: int32
            adapterType:
              description: The type of disk controller, e.g. IDE vs SCSI and if SCSI
                bus\-logic vs LSI logic.
              type: string
            thinProvisioned:
              description: Specifies whether the disk storage is pre\-allocated or
                allocated on demand.
              type: boolean
            disk:
              description: Specifies reference to a named disk.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            storageProfile:
              description: Specifies reference to a storage profile to be associated
                with the disk.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            overrideVmDefault:
              description: Specifies that the disk storage profile overrides the VM's
                default storage profile.
              type: boolean
            iops:
              description: Specifies the IOPS for the disk.
              type: integer
              format: int64
            virtualQuantityUnit:
              description: The units in which VirtualQuantity is measured.
              type: string
            virtualQuantity:
              description: The actual size of the disk.
              type: integer
              format: int64
          required:
            - sizeMb
            - unitNumber
            - busNumber
            - adapterType
          additionalProperties: false
    vcloud_ResourceSharesLevelType:
      title: vcloud_ResourceSharesLevelType
      description: "Xxxxx. One of:  \n xx \\-\\- xxxx  \n xx \\-\\- xxxx"
      type: string
      enum:
        - LOW
        - NORMAL
        - HIGH
        - CUSTOM
    vcloud_MediaSectionType:
      title: vcloud_MediaSectionType
      description: xxxx
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            mediaSettings:
              description: xxx.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_MediaSettingsType'
          required:
            - mediaSettings
          additionalProperties: false
    vcloud_DiskSectionType:
      title: vcloud_DiskSectionType
      description: xxxx
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            diskSettings:
              description: xxx.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_DiskSettingsType'
          required:
            - diskSettings
          additionalProperties: false
    vcloud_ComputeResourceType:
      title: vcloud_ComputeResourceType
      description: xxxx
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            configured:
              description: xxx.
              type: integer
              format: int64
            reservation:
              description: xxx.
              type: integer
              format: int64
            limit:
              description: xxx.
              type: integer
              format: int64
            sharesLevel:
              description: xxx.
              allOf:
                - $ref: '#/components/schemas/vcloud_ResourceSharesLevelType'
            shares:
              description: xxx.
              type: integer
              format: int32
          required:
            - configured
          additionalProperties: false
    vcloud_HardwareVersionBaseType:
      title: vcloud_HardwareVersionBaseType
      type: object
      additionalProperties: false
    vcloud_HardwareVersionType:
      title: vcloud_HardwareVersionType
      description: Represents a supported virtual hardware version.
      allOf:
        - $ref: '#/components/schemas/vcloud_HardwareVersionBaseType'
        - type: object
          properties:
            href:
              description: The URI of the entity.
              type: string
              format: uri
            type:
              description: Contains the type of the the entity.
              type: string
          additionalProperties: false
    vcloud_VmSpecSectionType:
      title: vcloud_VmSpecSectionType
      description: Container for the specification of this virtual machine. This is
        an alternate to using ovf:VirtualHardwareSection \+ ovf:OperatingSystemSection
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          properties:
            Modified:
              description: True indicates that this section overrides any possible
                VirtualHardware and OperatingSystem sections during a PUT or POST
                action.
              type: boolean
            osType:
              description: The type of the OS. This parameter may be omitted when
                using the VmSpec to update the contents of an existing VM.
              type: string
            numCpus:
              description: Number of CPUs. This parameter may be omitted when using
                the VmSpec to update the contents of an existing VM.
              type: integer
              format: int32
            numCoresPerSocket:
              description: Number of cores among which to distribute CPUs in this
                virtual machine.. This parameter may be omitted when using the VmSpec
                to update the contents of an existing VM.
              type: integer
              format: int32
            cpuResourceMhz:
              description: CPU compute resources. This parameter may be omitted when
                using the VmSpec to update the contents of an existing VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ComputeResourceType'
            memoryResourceMb:
              description: Memory compute resources. This parameter may be omitted
                when using the VmSpec to update the contents of an existing VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ComputeResourceType'
            mediaSection:
              description: The media devices of this VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_MediaSectionType'
            diskSection:
              description: virtual disks of this VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_DiskSectionType'
            hardwareVersion:
              description: 'vSphere name of Virtual Hardware Version of this VM. Example:
                vmx\-13 This parameter may be omitted when using the VmSpec to update
                the contents of an existing VM.'
              allOf:
                - $ref: '#/components/schemas/vcloud_HardwareVersionType'
            vmToolsVersion:
              description: VMware tools version of this VM.
              type: string
            toolsGuestOsId:
              description: The tools guest os identifier of a VM when VM is powered
                on and has VM Tools installed on it.
              type: string
            virtualCpuType:
              description: The capabilities settings for this VM. This parameter may
                be omitted when using the VmSpec to update the contents of an existing
                VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_VirtualCpuTypeType'
            timeSyncWithHost:
              description: Synchronize the VM's time with the host.
              type: boolean
          required:
            - memoryResourceMb
            - hardwareVersion
          additionalProperties: false
    vcloud_NetworkConnectionSectionType:
      title: vcloud_NetworkConnectionSectionType
      description: Container for the network connections of this virtual machine.
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          properties:
            href:
              description: A reference to the section in URL format.
              type: string
              format: uri
            type:
              description: The MIME type of the section.
              type: string
            primaryNetworkConnectionIndex:
              description: Virtual slot number associated with the NIC that should
                be considered this virtual machine's primary network connection. Defaults
                to slot 0.
              type: integer
              format: int32
            networkConnection:
              description: Represents a network connection in the virtual machine.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_NetworkConnectionType'
            link:
              description: A link to an operation on this section.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LinkType'
          additionalProperties: false
    vcloud_RuntimeInfoSectionType:
      title: vcloud_RuntimeInfoSectionType
      description: VMware Tools and other runtime information for this virtual machine.
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          additionalProperties: false
    vcloud_GuestCustomizationSectionType:
      title: vcloud_GuestCustomizationSectionType
      description: Represents a guest customization settings.
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          properties:
            href:
              description: A reference to the section in URL format.
              type: string
              format: uri
            type:
              description: The MIME type of the section.
              type: string
            enabled:
              description: True if guest customization is enabled.
              type: boolean
            changeSid:
              description: True if customization can change the Windows SID of this
                virtual machine.
              type: boolean
            virtualMachineId:
              description: Virtual machine ID to apply.
              type: string
            joinDomainEnabled:
              description: True if this virtual machine can join a Windows Domain.
              type: boolean
            useOrgSettings:
              description: True if customization should use organization settings
                (OrgGuestPersonalizationSettings) when joining a Windows Domain.
              type: boolean
            domainName:
              description: The name of the Windows Domain to join.
              type: string
            domainUserName:
              description: User name to specify when joining a Windows Domain.
              type: string
            domainUserPassword:
              description: Password to use with DomainUserName.
              type: string
            machineObjectOU:
              description: The name of the Windows Domain Organizational Unit (OU)
                in which the computer account for this virtual machine will be created.
              type: string
            adminPasswordEnabled:
              description: True if guest customization can modify administrator password
                settings for this virtual machine.
              type: boolean
            adminPasswordAuto:
              description: True if the administrator password for this virtual machine
                should be automatically generated.
              type: boolean
            adminPassword:
              description: True if the administrator password for this virtual machine
                should be set to this string. (AdminPasswordAuto must be false.)
              type: string
            adminAutoLogonEnabled:
              description: True if guest administrator should automatically log into
                this virtual machine.
              type: boolean
            adminAutoLogonCount:
              description: Number of times administrator can automatically log into
                this virtual machine. In case AdminAutoLogon is set to True, this
                value should be between 1 and 100. Otherwise, it should be 0.
              type: integer
              format: int32
            resetPasswordRequired:
              description: True if the administrator password for this virtual machine
                must be reset after first use.
              type: boolean
            customizationScript:
              description: Script to run on guest customization. The entire script
                must appear in this element. Use the XML entity &#13; to represent
                a newline. Unicode characters can be represented in the form &#xxxx;
                where xxxx is the character number.
              type: string
            computerName:
              description: Computer name to assign to this virtual machine.
              type: string
            link:
              description: A link to an operation on this section.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LinkType'
          additionalProperties: false
    vcloud_SnapshotType:
      title: vcloud_SnapshotType
      description: Represents a virtual machine snapshot.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            poweredOn:
              description: True if the virtual machine was powered on when the snapshot
                was created.
              type: boolean
            created:
              description: Creation date/time of the snapshot.
              type: string
              format: date-time
            size:
              description: Size of the snapshot.
              type: integer
              format: int64
          required:
            - poweredOn
            - created
            - size
          additionalProperties: false
    vcloud_SnapshotSectionType:
      title: vcloud_SnapshotSectionType
      description: Represents information about vApp and virtual machine snapshots.
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          properties:
            href:
              description: A reference to the section in URL format.
              type: string
              format: uri
            type:
              description: The MIME type of the section.
              type: string
            link:
              description: A link to the section.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LinkType'
            snapshot:
              description: Information about a snapshot.
              allOf:
                - $ref: '#/components/schemas/vcloud_SnapshotType'
          additionalProperties: false
    vcloud_NetworkAssignmentType:
      title: vcloud_NetworkAssignmentType
      description: Maps a network name specified in a Vm to the network name of a
        vApp network defined in the VApp that contains the Vm
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            innerNetwork:
              description: Name of the network as specified in the Vm.
              type: string
            containerNetwork:
              description: Name of the vApp network to map to.
              type: string
          required:
            - innerNetwork
            - containerNetwork
          additionalProperties: false
    vcloud_VAppCreationParamsType:
      title: vcloud_VAppCreationParamsType
      description: Represents vApp creation parameters.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            deploy:
              description: True if the vApp should be deployed at instantiation. Defaults
                to true.
              type: boolean
            powerOn:
              description: True if the vApp should be powered\-on at instantiation.
                Defaults to true.
              type: boolean
            vAppParent:
              description: Reserved. Unimplemented.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            instantiationParams:
              description: Instantiation parameters for the composed vApp.
              allOf:
                - $ref: '#/components/schemas/vcloud_InstantiationParamsType'
          additionalProperties: false
    vcloud_SourcedCompositionItemParamType:
      title: vcloud_SourcedCompositionItemParamType
      description: Represents a vApp, vApp template or Vm to include in a composed
        vApp.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            sourceDelete:
              description: True if the source item should be deleted after composition
                is complete.
              type: boolean
            source:
              description: "A reference to a source object. One of:  \n vApp  \n vAppTemplate\
                \  \n Vm  \n Vms must be powered off and cannot have an independent\
                \ disk attached."
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            vmGeneralParams:
              description: Specify name, description, and other properties of a VM
                during instantiation.
              allOf:
                - $ref: '#/components/schemas/vcloud_VmGeneralParamsType'
            vAppScopedLocalId:
              description: If Source references a Vm, this value provides a unique
                identifier for the Vm in the scope of the composed vApp.
              type: string
            instantiationParams:
              description: "If Source references a Vm this can include any of the\
                \ following OVF sections:  \n VirtualHardwareSection  \n OperatingSystemSection\
                \  \n NetworkConnectionSection  \n GuestCustomizationSection."
              allOf:
                - $ref: '#/components/schemas/vcloud_InstantiationParamsType'
            networkAssignment:
              description: If Source references a Vm, this element maps a network
                name specified in the Vm to the network name of a vApp network defined
                in the composed vApp.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_NetworkAssignmentType'
            storageProfile:
              description: If Source references a Vm, this element contains a reference
                to a storage profile to be used for the Vm. The specified storage
                profile must exist in the organization vDC that contains the composed
                vApp. If not specified, the default storage profile for the vDC is
                used.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            localityParams:
              description: Locality parameters provide a hint that may help optimize
                placement of a VM and an independent a Disk so that the VM can make
                efficient use of the disk. See [KB 2105352](http://kb.vmware.com/kb/2105352).
              allOf:
                - $ref: '#/components/schemas/vcloud_LocalityParamsType'
            vmCapabilities:
              description: If Source references a Vm, this element describes the capabilities
                (hot swap, etc.) the instantiated VM should have.
              allOf:
                - $ref: '#/components/schemas/vcloud_VmCapabilitiesType'
          required:
            - source
          additionalProperties: false
    vcloud_SourcedVmTemplateParamsType:
      title: vcloud_SourcedVmTemplateParamsType
      description: Represents an existing VM template from a Catalog. Internal use
        only.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            source:
              description: A reference to an existing VM template.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            vmGeneralParams:
              description: Specify name, description, and other properties of a VM
                during instantiation.
              allOf:
                - $ref: '#/components/schemas/vcloud_VmGeneralParamsType'
            vmTemplateInstantiationParams:
              description: "This can include any of the following OVF sections and\
                \ more:  \n NetworkConnectionSection  \n LeaseSettingsSection  \n\
                \ GuestCustomizationSection."
              allOf:
                - $ref: '#/components/schemas/vcloud_InstantiationParamsType'
            storageProfile:
              description: A reference to a storage profile to be used for the Vm.
                The specified storage profile must exist in the organization vDC that
                contains the composed vApp. If not specified, the default storage
                profile for the vDC is used.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            localityParams:
              description: Locality parameters provide a hint that may help optimize
                placement of a VM and an independent a Disk so that the VM can make
                efficient use of the disk. See [KB 2105352](http://kb.vmware.com/kb/2105352).
              allOf:
                - $ref: '#/components/schemas/vcloud_LocalityParamsType'
            vmCapabilities:
              description: Describes the capabilities (hot swap, etc.) the instantiated
                VM should have.
              allOf:
                - $ref: '#/components/schemas/vcloud_VmCapabilitiesType'
          required:
            - source
          additionalProperties: false
    vcloud_InstantiateVmTemplateParamsType:
      title: vcloud_InstantiateVmTemplateParamsType
      description: Represents VM template instantiation parameters. Internal use only.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            powerOn:
              description: True if the VM should be powered\-on at instantiation.
                Defaults to false.
              type: boolean
            sourcedVmTemplateItem:
              description: Represents virtual machine instantiation parameters.
              allOf:
                - $ref: '#/components/schemas/vcloud_SourcedVmTemplateParamsType'
          additionalProperties: false
    vcloud_VmGeneralParamsType:
      title: vcloud_VmGeneralParamsType
      description: A set of overrides to source VM properties to apply to target VM
        during copying.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: Name of VM
              type: string
            description:
              description: VM description
              type: string
            needsCustomization:
              description: True if this VM needs guest customization
              type: boolean
            regenerateBiosUuid:
              description: True if BIOS UUID of the virtual machine should be regenerated
                so that it is unique, and not the same as the source virtual machine's
                BIOS UUID.
              type: boolean
          additionalProperties: false
    vcloud_ComposeVAppParamsType:
      title: vcloud_ComposeVAppParamsType
      description: Represents vApp composition parameters.
      allOf:
        - $ref: '#/components/schemas/vcloud_VAppCreationParamsType'
        - type: object
          properties:
            linkedClone:
              description: Reserved. Unimplemented.
              type: boolean
            sourcedItem:
              description: "Composition item. One of:  \n vApp  \n vAppTemplate  \n\
                \ Vm  \n Vms must be powered off and cannot have an independent disk\
                \ attached."
              type: array
              items:
                $ref: '#/components/schemas/vcloud_SourcedCompositionItemParamType'
            createItem:
              description: Read\-only information about a VM added during vApp composition
                or recomposition.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VmType'
          additionalProperties: false
    vcloud_CreateVmParamsType:
      title: vcloud_CreateVmParamsType
      description: Represents VM creation parameters.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            powerOn:
              description: True if the VM should be powered\-on after creation. Defaults
                to false.
              type: boolean
            createVm:
              description: Read\-only information about the Vm to create. This information
                appears in the Task returned by a createVm request.
              allOf:
                - $ref: '#/components/schemas/vcloud_VmType'
            media:
              description: Reference to the media object to insert in the new VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_RecomposeVAppParamsType:
      title: vcloud_RecomposeVAppParamsType
      description: Parameters for a recompose vApp request.
      allOf:
        - $ref: '#/components/schemas/vcloud_ComposeVAppParamsType'
        - type: object
          properties:
            deleteItem:
              description: Reference to a Vm to be deleted during recomposition.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
            reconfigureItem:
              description: Existing Vm to be reconfigured during recomposition.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VmType'
          additionalProperties: false
    vcloud_RegisterVAppParamsType:
      title: vcloud_RegisterVAppParamsType
      description: Represents vApp registration parameters.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            ovf:
              description: Embedded OVF. Must be embedded as CDATA.
              type: string
            vsToVmxMap:
              description: Map from OVF Virtual Systems via the BIOS UUID to the datastore
                location of the replicated VM's files on the destination site.
              allOf:
                - $ref: '#/components/schemas/vcloud_VsToVmxMapType'
            ovfToVdcNetworkMap:
              description: Maps from OVF to site specific networks.
              allOf:
                - $ref: '#/components/schemas/vcloud_OvfToVdcNetworkMapType'
            externalNatIpMap:
              description: Maps source site external NAT IP addresses to destination
                site external NAT IP addresses.
              allOf:
                - $ref: '#/components/schemas/vcloud_ExternalNatIpMapType'
            nicIpMap:
              description: VM's with NICs that are connected directly to a VDC network
                and where the NICs have manually assigned IP addresses needs to be
                mapped to a valid IP address within the IP range of the destination
                site's VDC network. This element provides that mapping.
              allOf:
                - $ref: '#/components/schemas/vcloud_NicIpMapType'
          additionalProperties: false
    vcloud_VsToVmxMapType:
      title: vcloud_VsToVmxMapType
      description: Map from OVF Virtual Systems via the BIOS UUID to the datastore
        location of the replicated VM's files on the destination site.
      type: object
      additionalProperties: false
    vcloud_OvfToVdcNetworkMapType:
      title: vcloud_OvfToVdcNetworkMapType
      description: Map from OVF to Org networks.
      type: object
      additionalProperties: false
    vcloud_ExternalNatIpMapType:
      title: vcloud_ExternalNatIpMapType
      description: Maps source site external NAT IP addresses to destination site
        external NAT IP addresses.
      type: object
      additionalProperties: false
    vcloud_NicIpMapType:
      title: vcloud_NicIpMapType
      description: VM's with NICs that are connected directly to a VDC network and
        where the NICs have manually assigned IP addresses needs to be mapped to a
        valid IP address within the IP range of the destination site's VDC network.
        This type provides that mapping.
      type: object
      additionalProperties: false
    vcloud_LocalityParamsType:
      title: vcloud_LocalityParamsType
      description: Locality parameters provide a hint that may help optimize placement
        of a VM with respect to another VM or an independent disk. See [KB 2105352](http://kb.vmware.com/kb/2105352).
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            resourceEntity:
              description: Reference to a Disk, or a VM.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_SourcedVmInstantiationParamsType:
      deprecated: true
      title: vcloud_SourcedVmInstantiationParamsType
      description: Represents instantiation parameters. Deprecated in favor of SourcedCompositionItemParamType
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            source:
              description: A reference to a source Vm.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            storageProfile:
              description: A reference to a storage profile to be used for this object.
                The specified storage profile must exist in the organization vDC that
                contains the object. If not specified, the default storage profile
                for the vDC is used.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            localityParams:
              description: Locality parameters provide a hint that may help optimize
                placement of a VM with respect to another VM or an independent disk.
                See [KB 2105352](http://kb.vmware.com/kb/2105352).
              allOf:
                - $ref: '#/components/schemas/vcloud_LocalityParamsType'
            hardwareCustomization:
              description: Specification of common hardware parameters that should
                be applied to the VM upon instantiation. This only applies when instantiating
                a vApp template and is otherwise ignored.
              allOf:
                - $ref: '#/components/schemas/vcloud_InstantiateVmHardwareCustomizationParamsType'
          required:
            - source
          additionalProperties: false
    vcloud_InstantiateVAppParamsType:
      title: vcloud_InstantiateVAppParamsType
      description: Represents vApp instantiation parameters.
      allOf:
        - $ref: '#/components/schemas/vcloud_VAppCreationParamsType'
        - type: object
          properties:
            linkedClone:
              description: Reserved. Unimplemented.
              type: boolean
            source:
              description: "A reference to a source object. One of:  \n vApp  \n vAppTemplate\
                \  \n Vm  \n Vms must be powered off and cannot have an independent\
                \ disk attached."
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            isSourceDelete:
              description: Set to true to delete the source object after the operation
                completes.
              type: boolean
            sourcedVmInstantiationParams:
              deprecated: true
              description: Represents virtual machine instantiation parameters.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_SourcedVmInstantiationParamsType'
            sourcedItem:
              description: Represents VM instantiation parameters. If this section
                is present, then SourcedVmInstantiationParamsType section (if present)
                will be ignored.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_SourcedCompositionItemParamType'
          required:
            - source
          additionalProperties: false
    vcloud_InstantiateVAppTemplateParamsType:
      title: vcloud_InstantiateVAppTemplateParamsType
      description: Represents vApp template instantiation parameters.
      allOf:
        - $ref: '#/components/schemas/vcloud_InstantiateVAppParamsType'
        - type: object
          additionalProperties: false
    vcloud_InstantiateOvfParamsType:
      title: vcloud_InstantiateOvfParamsType
      description: Represents vApp instantiation from OVF parameters
      allOf:
        - $ref: '#/components/schemas/vcloud_VAppCreationParamsType'
        - type: object
          properties:
            transferFormat:
              type: string
            removeNonStandardOvfExtensions:
              description: If true, remove elements in the uploaded descriptor if
                they are not defined in the OVF XML namespace (http://schemas.dmtf.org/ovf/envelope/1).
                Default is false.
              type: boolean
          additionalProperties: false
    vcloud_NetworkMappingType:
      title: vcloud_NetworkMappingType
      description: Represents a mapping from an OVF source network to a vCloud target
        network. Used to update network properties in the OVF.
      type: object
      properties:
        source:
          description: The name of an OVF network.
          type: string
        target:
          description: The name of a vCloud network.
          type: string
      additionalProperties: false
    vcloud_InstantiateOvfPropertyType:
      title: vcloud_InstantiateOvfPropertyType
      description: Represents an OVF property value assignment.
      type: object
      properties:
        classId:
          description: The class ID of the product section to which the property belongs.
          type: string
        instanceId:
          description: The instance ID of the product section to which the property
            belongs.
          type: string
        key:
          description: The key of the OVF property.
          type: string
        value:
          description: The value to assign to the OVF property.
          type: string
      additionalProperties: false
    vcloud_InstantiateVmParamsType:
      title: vcloud_InstantiateVmParamsType
      description: Instantiation parameters for a VM in a vApp.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            id:
              description: The ovf:id of the VirtualSystem in the source OVF that
                the instantiation parameters apply to.
              type: string
            networkConnectionSection:
              description: Network connection configuration for a VM.
              allOf:
                - $ref: '#/components/schemas/vcloud_NetworkConnectionSectionType'
            computerName:
              description: Represents the computer name that is part of guest customization.
              type: string
            vdcStorageProfile:
              description: The VDC storage profile to use. If set, the value must
                refer to an existing and enabled storage profile on the VDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            hardwareCustomization:
              description: Specification of common virtual machine hardware parameters.
                This is a simple way to customize hardware settings without modifying
                the source OVF descriptor before uploading it.
              allOf:
                - $ref: '#/components/schemas/vcloud_InstantiateVmHardwareCustomizationParamsType'
          required:
            - id
          additionalProperties: false
    vcloud_InstantiateVmHardwareCustomizationParamsType:
      title: vcloud_InstantiateVmHardwareCustomizationParamsType
      description: Hardware parameter customization applied to a virtual machine in
        a vApp when instantiated.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            numberOfCpus:
              description: The number of vCPUs configured for the virtual machine.
                Note that if CoresPerSocket is specified in the OVF or included in
                the customization parameters then the number of CPUs must be evenly
                divisible by the number of cores per socket. The minimum value is
                1.
              type: integer
              format: int32
            coresPerSocket:
              description: Specifies the distribution of the total number of CPUs
                over a number of virtual sockets. The number of vCPUs must be evenly
                divisible by the number of cores per socket. The minimum value is
                1.
              type: integer
              format: int32
            memorySize:
              description: The amount of virtual machine memory in megabytes. Must
                be a multiple of four. Minimum size is four megabytes.
              type: integer
              format: int64
          additionalProperties: false
    vcloud_CloneVAppParamsType:
      title: vcloud_CloneVAppParamsType
      description: Parameters for a clonevApp request.
      allOf:
        - $ref: '#/components/schemas/vcloud_InstantiateVAppParamsType'
        - type: object
          additionalProperties: false
    vcloud_DeployVAppParamsType:
      title: vcloud_DeployVAppParamsType
      description: Parameters to a deploy vApp request.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            powerOn:
              description: Used to specify whether to power on vapp on deployment,
                if not set default value is true.
              type: boolean
            deploymentLeaseSeconds:
              description: Lease in seconds for deployment. A value of 0 is replaced
                by the organization default deploymentLeaseSeconds value.
              type: integer
              format: int32
            forceCustomization:
              description: Used to specify whether to force customization on deployment,
                if not set default value is false.
              type: boolean
          additionalProperties: false
    vcloud_UndeployVAppParamsType:
      title: vcloud_UndeployVAppParamsType
      description: Parameters to an undeploy vApp request.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            undeployPowerAction:
              description: "The specified action is applied to all virtual machines\
                \ in the vApp. All values other than **default** ignore actions, order,\
                \ and delay specified in the StartupSection. One of:  \n**powerOff**\
                \ (Power off the virtual machines. This is the default action if this\
                \ attribute is missing or empty)  \n**suspend** (Suspend the virtual\
                \ machines)  \n**shutdown** (Shut down the virtual machines)  \n**force**\
                \ (Attempt to power off the virtual machines. Failures in undeploying\
                \ the virtual machine or associated networks are ignored. All references\
                \ to the vApp and its virtual machines are removed from the database)\
                \  \n**default** (Use the actions, order, and delay specified in the\
                \ StartupSection)."
              type: string
          additionalProperties: false
    vcloud_MediaInsertOrEjectParamsType:
      title: vcloud_MediaInsertOrEjectParamsType
      description: Parameters for an insertMedia or ejectMedia request.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            media:
              description: Reference to the media object to insert or eject. In API
                requests that specify version 29.0 or higher, this element is optional
                when ejecting the media.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - media
          additionalProperties: false
    vcloud_CaptureVAppParamsType:
      title: vcloud_CaptureVAppParamsType
      description: Parameters for a captureVapp request.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            source:
              description: Contains a reference to the vApp to capture.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            vdcStorageProfile:
              deprecated: true
              description: A reference to the storage profile to be specified in the
                vApp template created by this capture. Ignored by vCloud Director
                5.5 and later.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            targetCatalogItem:
              description: To overwrite an existing vApp template with the one created
                by this capture, place a reference to the existing template here.
                Otherwise, the operation creates a new vApp template.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - source
          additionalProperties: false
    vcloud_VmPendingQuestionType:
      title: vcloud_VmPendingQuestionType
      description: Represents a question posted by a virtual machine that is WAITING\_FOR\_INPUT
        (status="5").
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            question:
              description: Question text.
              type: string
            questionId:
              description: Question ID of this question.
              type: string
            choices:
              description: Choices of answers to the question.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VmQuestionAnswerChoiceType'
          required:
            - question
            - questionId
            - choices
          additionalProperties: false
    vcloud_VmQuestionAnswerType:
      title: vcloud_VmQuestionAnswerType
      description: Represents the answer to a question posted by a virtual machine
        that is WAITING\_FOR\_INPUT (status="5").
      type: object
      properties:
        choiceId:
          description: Choice ID of this answer.
          type: integer
          format: int32
        questionId:
          description: Question ID of the question.
          type: string
      required:
        - choiceId
        - questionId
      additionalProperties: false
    vcloud_VmQuestionAnswerChoiceType:
      title: vcloud_VmQuestionAnswerChoiceType
      description: Represents the answer to a question posted by a virtual machine
        that is WAITING\_FOR\_INPUT (status="5").
      type: object
      properties:
        id:
          description: Choice ID of the answer.
          type: integer
          format: int32
        text:
          description: Answer text.
          type: string
      required:
        - id
      additionalProperties: false
    vcloud_RelocateParamsType:
      title: vcloud_RelocateParamsType
      description: Parameters to be used for virtual machine relocation.
      type: object
      properties:
        datastore:
          description: Reference to destination datastore.
          allOf:
            - $ref: '#/components/schemas/vcloud_ReferenceType'
      required:
        - datastore
      additionalProperties: false
    vcloud_CreateSnapshotParamsType:
      title: vcloud_CreateSnapshotParamsType
      description: Parameters for a createSnapshot request.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            memory:
              description: True if the snapshot should include the virtual machine's
                memory.
              type: boolean
            quiesce:
              description: True if the file system of the virtual machine should be
                quiesced before the snapshot is created.
              type: boolean
          additionalProperties: false
    vcloud_ComplianceResultType:
      title: vcloud_ComplianceResultType
      description: Represents the results of a GET /vApp/vm\-{id}/complianceResult
        request. Empty if such a request has never been made.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            complianceStatus:
              description: The compliance status for the entity.
              type: string
            complianceStatusMessage:
              description: A descriptive message detailing the compliance result.
              type: string
            complianceCheckTime:
              description: The date/time when the compliance check was run.
              type: string
              format: date-time
          required:
            - complianceStatus
          additionalProperties: false
    vcloud_DefaultStorageProfileSection_Type:
      title: vcloud_DefaultStorageProfileSection_Type
      description: Name of the storage profile that will be specified for this virtual
        machine. The named storage profile must exist in the organization vDC that
        contains the virtual machine. If not specified, the default storage profile
        for the vDC is used.
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          properties:
            storageProfile:
              description: Name of the storage profile that will be specified for
                this virtual machine. The named storage profile must exist in the
                organization vDC that contains the virtual machine. If not specified,
                the default storage profile for the vDC is used.
              type: string
          additionalProperties: false
    vcloud_VAppTemplateType:
      title: vcloud_VAppTemplateType
      description: Represents a vApp template.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceEntityType'
        - type: object
          properties:
            ovfDescriptorUploaded:
              description: True if the OVF descriptor for this template has been uploaded.
              type: boolean
            goldMaster:
              description: True if this template is a gold master.
              type: boolean
            owner:
              description: vAppTemplate owner.
              allOf:
                - $ref: '#/components/schemas/vcloud_OwnerType'
            children:
              description: Container for virtual machines included in this vApp template.
              allOf:
                - $ref: '#/components/schemas/vcloud_VAppTemplateChildrenType'
            vAppScopedLocalId:
              description: A unique identifier for the Vm in the scope of the vApp
                template.
              type: string
            defaultStorageProfile:
              description: The name of the storage profile to be used for this object.
                The named storage profile must exist in the organization vDC that
                contains the object. If not specified, the default storage profile
                for the vDC is used.
              type: string
            dateCreated:
              description: Creation date/time of the template.
              type: string
              format: date-time
          additionalProperties: false
    vcloud_VAppTemplateChildrenType:
      title: vcloud_VAppTemplateChildrenType
      description: Container for virtual machines included in this vApp template.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            vm:
              description: Represents a virtual machine in this vApp template.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VAppTemplateType'
          additionalProperties: false
    vcloud_UploadVAppTemplateParamsType:
      title: vcloud_UploadVAppTemplateParamsType
      description: Parameters for an uploadVappTemplate request.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            transferFormat:
              description: Reserved. Unimplemented.
              type: string
            manifestRequired:
              description: True if an OVF manifest is included in the upload. Default
                value is false.
              type: boolean
            sourceHref:
              description: Source URL of the OVF package.
              type: string
              format: uri
            vdcStorageProfile:
              description: A reference to the storage profile to be specified in the
                DefaultStorageProfile element of the vApp template created by this
                operation.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_CloneVAppTemplateParamsType:
      title: vcloud_CloneVAppTemplateParamsType
      description: Parameters for a cloneVappTemplate request.
      allOf:
        - $ref: '#/components/schemas/vcloud_ParamsType'
        - type: object
          properties:
            source:
              description: Reference to the vApp template to clone.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
            isSourceDelete:
              description: True if the source vApp template should be deleted after
                cloning is complete.
              type: boolean
            vdcStorageProfile:
              description: A reference to the storage profile to be specified in the
                vApp template created by this operation.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReferenceType'
          required:
            - source
          additionalProperties: false
    vcloud_CustomizationSectionType:
      title: vcloud_CustomizationSectionType
      description: Represents a vApp template customization settings.
      allOf:
        - $ref: '#/components/schemas/ovf_Section_Type'
        - type: object
          properties:
            goldMaster:
              description: True if this template is a gold master.
              type: boolean
            href:
              description: Link to the section.
              type: string
              format: uri
            type:
              description: MIME type of the section.
              type: string
            customizeOnInstantiate:
              description: True if instatiating this template applies customization
                settings. Otherwise, instatiation creates an identical copy.
              type: boolean
            link:
              description: Optional link to an entity or operation associated with
                this section.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_LinkType'
          required:
            - customizeOnInstantiate
          additionalProperties: false
    vcloud_ResourceEntitiesType:
      title: vcloud_ResourceEntitiesType
      description: Container for references to ResourceEntity objects in this vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            resourceEntity:
              description: Reference to a ResourceEntity in this vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ResourceReferenceType'
          additionalProperties: false
    vcloud_AvailableNetworksType:
      title: vcloud_AvailableNetworksType
      description: Container for references to available organization vDC networks.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            network:
              description: Reference to an organization vDC network.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_VdcsType:
      title: vcloud_VdcsType
      description: Represents a list of references to vDCs.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            vdc:
              description: Reference to a vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_VdcType:
      title: vcloud_VdcType
      description: Represents the user view of an organization vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            status:
              description: "Creation status of the vDC. One of:  \n 0 (The vDC is\
                \ still being created)  \n 1 (The vDC is ready)  \n \\-1 (There was\
                \ an error while creating the vDC)."
              type: integer
              format: int32
            allocationModel:
              description: "The allocation model used by this vDC. One of:  \n**AllocationVApp**\
                \ (Pay as you go. Resources are committed to a vDC only when vApps\
                \ are created in it. When you use this allocation model, any Limit\
                \ values you specify for Memory and CPU are ignored on create and\
                \ returned as 0 on retrieve.)  \n**AllocationPool** (Only a percentage\
                \ of the resources you allocate are committed to the organization\
                \ vDC.)  \n**ReservationPool** (All the resources you allocate are\
                \ committed as a pool to the organization vDC. vApps in vDCs that\
                \ support this allocation model can specify values for resource and\
                \ limit.)"
              type: string
            computeCapacity:
              description: The compute capacity allocated to this vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_ComputeCapacityType'
            resourceEntities:
              description: Read\-only list of resource entities in this vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_ResourceEntitiesType'
            availableNetworks:
              description: Read\-only list of organization vDC networks in this vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_AvailableNetworksType'
            capabilities:
              description: Read\-only list of VM hardware capabilities supported in
                this vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_CapabilitiesType'
            nicQuota:
              description: Maximum number of virtual NICs allowed in this vDC. Defaults
                to 0, which specifies an unlimited number.
              type: integer
              format: int32
            networkQuota:
              description: Maximum number of network objects that can be deployed
                in this vDC. Defaults to 0, which specifies an unlimited number.
              type: integer
              format: int32
            usedNetworkCount:
              description: Number of networks in use for/by this vDC.
              type: integer
              format: int32
            vmQuota:
              description: The quota of VMs that can be created in this vDC. Includes
                VMs in both vApps and vApp templates, deployed, or otherwise. Defaults
                to 0, which specifies an unlimited number.
              type: integer
              format: int32
            isEnabled:
              description: True if this vDC is enabled for use. Read\-only in the
                user view. Modifiable in the admin view.
              type: boolean
            vdcStorageProfiles:
              description: Storage profiles supported in this vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_VdcStorageProfilesType'
            vCpuInMhz2:
              description: Specifies the clock frequency, in Megahertz, for any virtual
                CPU that is allocated to a VM. A VM with 2 vCPUs will consume twice
                as much of this value. Ignored for ReservationPool. Required when
                AllocationModel is AllocationVApp or AllocationPool, and may not be
                less than 256 MHz. Defaults to 1000 MHz if the element is empty or
                missing.
              type: integer
              format: int64
          additionalProperties: false
    vcloud_ComputeCapacityType:
      title: vcloud_ComputeCapacityType
      description: Represents vDC compute capacity.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            cpu:
              description: CPU capacity and usage.
              allOf:
                - $ref: '#/components/schemas/vcloud_CapacityWithUsageType'
            memory:
              description: Memory capacity and usage.
              allOf:
                - $ref: '#/components/schemas/vcloud_CapacityWithUsageType'
          required:
            - cpu
            - memory
          additionalProperties: false
    vcloud_CapabilitiesType:
      title: vcloud_CapabilitiesType
      description: Collection of supported hardware capabilities.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            supportedHardwareVersions:
              description: Read\-only list of virtual hardware versions supported
                by this vDC.
              allOf:
                - $ref: '#/components/schemas/vcloud_SupportedHardwareVersionsType'
          additionalProperties: false
    vcloud_SupportedHardwareVersionsType:
      title: vcloud_SupportedHardwareVersionsType
      description: Contains a list of VMware virtual hardware versions supported in
        this vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            supportedHardwareVersion:
              description: A virtual hardware version supported in this vDC.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_SupportedHardwareVersionType'
          additionalProperties: false
    vcloud_SupportedHardwareVersionBaseType:
      title: vcloud_SupportedHardwareVersionBaseType
      type: object
      additionalProperties: false
    vcloud_SupportedHardwareVersionType:
      title: vcloud_SupportedHardwareVersionType
      description: Represents a supported virtual hardware version.
      allOf:
        - $ref: '#/components/schemas/vcloud_SupportedHardwareVersionBaseType'
        - type: object
          properties:
            name:
              description: vSphere name of Virtual Hardware Version.
              type: string
            href:
              description: The URI of the entity.
              type: string
              format: uri
            default:
              description: Indicates that this SupportedHardwareVersion should be
                used as the highest supported hardware version for organization VDCs
                backed by this Provider VDC.
              type: boolean
            type:
              description: Contains the type of the the entity.
              type: string
          required:
            - name
          additionalProperties: false
    vcloud_VirtualHardwareVersionType:
      title: vcloud_VirtualHardwareVersionType
      description: Represents the user view of a virtual hardware version.
      allOf:
        - $ref: '#/components/schemas/vcloud_IdentifiableResourceType'
        - type: object
          properties:
            name:
              description: The name of the entity.
              type: string
            maxCoresPerSocket:
              description: Specifies the maximum number of cores per socket supported.
              type: integer
              format: int64
            supportedOperatingSystems:
              description: Operating systems available for use on virtual machines
                at this virtual hardware version.
              allOf:
                - $ref: '#/components/schemas/vcloud_SupportedOperatingSystemsInfoType'
            maxMemorySizeMb:
              description: Specifies the maximum amount of memory supported (in MB).
              type: integer
              format: int64
            maxCPUs:
              description: Specifies the maximum number of vCPUs supported.
              type: integer
              format: int64
            maxNICs:
              description: Specifies the maximum number of vNICs supported.
              type: integer
              format: int64
            supportsNestedHV:
              description: Specifies nested virtualization is supported.
              type: boolean
            supportsHotPlugPCI:
              description: Specifies whether PCI hotplug is supported.
              type: boolean
            supportsHotAdd:
              description: Specifies whether the hot\-add memory and virtual CPU feature
                is supported.
              type: boolean
            supportedMemorySizeGb:
              description: Specifies the supported memory sizes (in GB).
              type: array
              items:
                type: integer
                format: int64
            supportedCoresPerSocket:
              description: Specifies the supported number of cores per socket combos.
              type: array
              items:
                type: integer
                format: int64
            hardDiskAdapter:
              description: Supported hard disk controller types.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_HardDiskAdapterType'
          required:
            - hardDiskAdapter
          additionalProperties: false
    vcloud_ReservationPoolVdcSummaryType:
      title: vcloud_ReservationPoolVdcSummaryType
      description: Represents the summary of consumed and reserved memory, CPU, and
        storage for a vDC using the Reservation Pool allocation model.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            memoryConsumptionMB:
              description: The amount of memory consumed in MB.
              type: integer
              format: int64
            memoryReservationMB:
              description: The amount of memory reserved in MB.
              type: integer
              format: int64
            storageConsumptionMB:
              description: The amount of storage consumed in MB.
              type: integer
              format: int64
            cpuReservationMhz:
              description: The amount of CPU reserved in MHz.
              type: integer
              format: int64
            cpuConsumptionMhz:
              description: The amount of CPU consumed in MHz.
              type: integer
              format: int64
          required:
            - memoryConsumptionMB
            - memoryReservationMB
            - storageConsumptionMB
            - cpuReservationMhz
            - cpuConsumptionMhz
          additionalProperties: false
    vcloud_AllocationPoolVdcSummaryType:
      title: vcloud_AllocationPoolVdcSummaryType
      description: Represents the summary of consumed and reserved memory, CPU, and
        storage for a vDC using the Allocation Pool allocation model.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            memoryConsumptionMB:
              description: The amount of memory consumed in MB.
              type: integer
              format: int64
            memoryReservationMB:
              description: The amount of memory reserved in MB.
              type: integer
              format: int64
            storageConsumptionMB:
              description: The amount of storage consumed in MB.
              type: integer
              format: int64
            cpuReservationMhz:
              description: The amount of CPU reserved in MHz.
              type: integer
              format: int64
            cpuConsumptionMhz:
              description: The amount of CPU consumed in MHz.
              type: integer
              format: int64
          required:
            - memoryConsumptionMB
            - memoryReservationMB
            - storageConsumptionMB
            - cpuReservationMhz
            - cpuConsumptionMhz
          additionalProperties: false
    vcloud_PayGoVdcSummaryType:
      title: vcloud_PayGoVdcSummaryType
      description: Represents the summary of consumed CPU, memory, and storage for
        a vDC using the AllocationVApp (Pay\-as\-you\-Go) allocation model.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            memoryConsumptionMB:
              description: The amount of memory consumed in MB.
              type: integer
              format: int64
            cpuConsumptionMhz:
              description: The amount of CPU consumed in MHz.
              type: integer
              format: int64
            storageConsumptionMB:
              description: The amount of storage consumed in MB.
              type: integer
              format: int64
          required:
            - memoryConsumptionMB
            - cpuConsumptionMhz
            - storageConsumptionMB
          additionalProperties: false
    vcloud_OrgVdcRollupType:
      title: vcloud_OrgVdcRollupType
      description: Contains rolled\-up summary information for all vDCs in this organization.
        If a multisite request is made for this summary information, it will contain
        combined summary information for the vDCs in this organization and any associated
        organizations.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            numberOfOrgs:
              description: The number of organizations used to create this summary.
              type: integer
              format: int32
            numberOfPoweredOnVms:
              description: The number of powered on VMs in this organization.
              type: integer
              format: int32
            numberOfDeployedVApps:
              description: The number of deployed vApps in this organization.
              type: integer
              format: int32
            reservationPoolVdcSummary:
              description: Represents the summation of consumed and reserved memory,
                CPU, and storage for all vDCs using the Reservation Pool allocation
                model.
              allOf:
                - $ref: '#/components/schemas/vcloud_ReservationPoolVdcSummaryType'
            allocationPoolVdcSummary:
              description: Represents the summation of consumed and reserved memory,
                CPU, and storage for a all vDCs using the Allocation Pool allocation
                model.
              allOf:
                - $ref: '#/components/schemas/vcloud_AllocationPoolVdcSummaryType'
            payGoVdcSummary:
              description: Represents the summation of consumed memory and storage
                for all vDCs using the AllocationVApp (Pay\-as\-you\-Go) allocation
                model.
              allOf:
                - $ref: '#/components/schemas/vcloud_PayGoVdcSummaryType'
          required:
            - numberOfPoweredOnVms
            - numberOfDeployedVApps
            - reservationPoolVdcSummary
            - allocationPoolVdcSummary
            - payGoVdcSummary
          additionalProperties: false
    vcloud_VdcStorageProfilesType:
      title: vcloud_VdcStorageProfilesType
      description: Container for references to storage profiles associated with a
        vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            vdcStorageProfile:
              description: A reference to a vDC storage profile.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_VdcStorageProfileIopsSettingsType:
      title: vcloud_VdcStorageProfileIopsSettingsType
      description: Grouping of IOPs related settings associated with a particular
        VdcStorageProfile, i.e. a particular Vdc \+ StorageProfile pairing.
      type: object
      properties:
        enabled:
          description: True if this storage profile is IOPs\-based placement enabled.
          type: boolean
        diskIopsMax:
          description: The maximum IOPS value that this storage profile is permitted
            to deliver. Value must be in the range 0\-Integer.MAX\_VALUE, and if greater
            than 0, cannot be less than the value of DiskIopsDefault. Value of 0 means
            this max setting is is disabled and there is no max disk IOPS restriction.
          type: integer
          format: int64
        diskIopsDefault:
          description: This value is applied when provisioning a disk that does not
            specify vcloud:iops. Value must be in the range 0\-Integer.MAX\_VALUE.
            If DiskIopsPerGbMax is greater than 0 and if (diskSize \* DiskIopsPerGbMax)
            less than DiskIopsDefault, then the default iops for the disk will be
            set as (diskSize \* DiskIopsPerGbMax). Value of 0 for disk iops means
            that no iops would be reserved or provisioned for that virtual disk.
          type: integer
          format: int64
        storageProfileIopsLimit:
          description: Maximum number of IOPs that can be allocated for this profile.
            A value of 0 is understood to mean "maximum possible."
          type: integer
          format: int64
        diskIopsPerGbMax:
          description: The maximum disk IOPs per GB value that this storage profile
            is permitted to deliver. A value of 0 means there is no perGB IOPS restriction.
          type: integer
          format: int64
      required:
        - enabled
        - diskIopsMax
        - diskIopsDefault
        - diskIopsPerGbMax
      additionalProperties: false
    vcloud_VdcStorageProfileType:
      title: vcloud_VdcStorageProfileType
      description: Represents a storage profile in an organization vDC.
      allOf:
        - $ref: '#/components/schemas/vcloud_EntityType'
        - type: object
          properties:
            enabled:
              description: True if this storage profile is enabled for use in the
                vDC.
              type: boolean
            units:
              description: 'Scale used to define Limit. NOTE: currently, only "MB"
                is allowed.'
              type: string
            limit:
              description: Maximum number of storage bytes (scaled by Units) allocated
                for this profile. A value of 0 is understood to mean "maximum possible."
              type: integer
              format: int64
            default:
              description: True if this is default storage profile for this vDC. The
                default storage profile is used when an object that can specify a
                storage profile is created with no storage profile specified.
              type: boolean
            iopsSettings:
              description: When NOT provided, disk storage placement ignores IOPs
                considerations; otherwise, this element holds all the disk IOPs related
                settings, including a subordinate Enabled flag. When that flag is
                false, disk provisioning using this profile will behave identically
                as if this element was not provided in the first place.
              allOf:
                - $ref: '#/components/schemas/vcloud_VdcStorageProfileIopsSettingsType'
            storageUsedMB:
              description: Storage used, in Megabytes, by the storage profile
              type: integer
              format: int64
            iopsAllocated:
              description: Total IOPS currently allocated to this storage profile
              type: integer
              format: int64
          required:
            - units
            - limit
            - default
          additionalProperties: false
    vcloud_VendorServicesType:
      title: vcloud_VendorServicesType
      description: Vendor services available for service insertion on networks or
        edge gateways.
      type: object
      properties:
        networkServices:
          description: A network service that is inserted and available for networks
            within an org vDC
          type: array
          items:
            $ref: '#/components/schemas/vcloud_NetworkServiceInsertionType'
        edgeGatewayServices:
          description: An edge gateway service that is inserted and available for
            edge gateways within an org vDC
          type: array
          items:
            $ref: '#/components/schemas/vcloud_NetworkServiceInsertionType'
      additionalProperties: false
    vcloud_NetworkServiceInsertionType:
      title: vcloud_NetworkServiceInsertionType
      description: Information about a network service that has been inserted
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: Name of the network service that has been inserted. This
                is required.
              type: string
            id:
              description: ID of the network service that has been inserted. This
                is required.
              type: string
            category:
              description: Category of the network service that has been inserted.
                Allowed values are 'VDS' and 'EDGE'
              type: string
            categoryType:
              description: Category type of the network service. This is optional.
              type: string
          required:
            - name
            - id
            - category
          additionalProperties: false
    vcloud_VendorTemplateType:
      title: vcloud_VendorTemplateType
      description: Information about a vendor service template. This is optional.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: Name of the vendor template. This is required.
              type: string
            id:
              description: ID of the vendor template. This is required.
              type: string
          required:
            - name
            - id
          additionalProperties: false
    vcloud_VendorTemplateAttributesType:
      title: vcloud_VendorTemplateAttributesType
      description: Information about vendor template attributes
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: Name of the vendor template attribute. This is required.
              type: string
            key:
              description: Key of the vendor template attribute. This is required.
              type: string
            value:
              description: Value of the service template attribute. This is optional.
              type: string
          required:
            - name
            - key
          additionalProperties: false
    vcloud_AffinityRuleType:
      title: vcloud_AffinityRuleType
      description: Represents the base type for affinity and anti\-affinity rules.
      allOf:
        - $ref: '#/components/schemas/vcloud_IdentifiableResourceType'
        - type: object
          properties:
            name:
              description: The name of this affinity rule.
              type: string
            isEnabled:
              description: True if the affinity rule is enabled.
              type: boolean
            isMandatory:
              description: True if this affinity rule is mandatory. When a rule is
                mandatory, a host failover will not power on the VM if doing so would
                violate the rule.
              type: boolean
            polarity:
              description: "The polarity of this rule. One of:   \nAffinity   \nAnti\\\
                -Affinity"
              type: string
              enum:
                - Affinity
                - Anti-Affinity
          required:
            - name
            - isEnabled
            - isMandatory
            - polarity
          additionalProperties: false
    vcloud_VmAffinityRuleType:
      title: vcloud_VmAffinityRuleType
      description: A VM affinity rule to be applied to two or more VMs. A VM\-VM affinity
        rule specifies whether selected individual virtual machines should run on
        the same host or be kept on separate hosts. An affinity rule tries to keep
        the specified virtual machines together on the same host while an anti\-affinity
        rule tries to keep the specified virtual machines apart.
      allOf:
        - $ref: '#/components/schemas/vcloud_AffinityRuleType'
        - type: object
          properties:
            scope:
              description: "This defines whether the rule can be applied on the basis\
                \ of host or other group One of:   \nHost"
              type: string
              enum:
                - Host
            vmReferences:
              description: A list of VMs under a specific VM affinity rule.
              allOf:
                - $ref: '#/components/schemas/vcloud_VmsType'
          required:
            - scope
            - vmReferences
          additionalProperties: false
    vcloud_VmAffinityRulesType:
      title: vcloud_VmAffinityRulesType
      description: The collection existing VM affinity rules available.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vmAffinityRule:
              description: A VM affinity rule applied to two or more VMs.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_VmAffinityRuleType'
          required:
            - vmAffinityRule
          additionalProperties: false
    vcloud_VmsType:
      title: vcloud_VmsType
      description: Represents a list of virtual machines.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            vmReference:
              description: A reference to a virtual machine.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_ReferenceType'
          additionalProperties: false
    vcloud_SupportedOperatingSystemsInfoType:
      title: vcloud_SupportedOperatingSystemsInfoType
      description: Operating systems available for use on virtual machines owned by
        this organization.
      allOf:
        - $ref: '#/components/schemas/vcloud_ResourceType'
        - type: object
          properties:
            operatingSystemFamilyInfo:
              description: Operating system families available for use on virtual
                machines owned by this organization.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_OperatingSystemFamilyInfoType'
          additionalProperties: false
    vcloud_OperatingSystemFamilyInfoType:
      title: vcloud_OperatingSystemFamilyInfoType
      description: Represents an operating system family.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            name:
              description: The name of the operating system family.
              type: string
            operatingSystemFamilyId:
              description: The identifier of the operating system family.
              type: integer
              format: int32
            operatingSystem:
              description: Configuration details for an individual operating system.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_OperatingSystemInfoType'
          required:
            - name
          additionalProperties: false
    vcloud_DefaultHardDiskAdapterTypeType:
      title: vcloud_DefaultHardDiskAdapterTypeType
      description: Represents a virtual hard disk adapter type.
      type: object
      properties:
        ref:
          description: Reference to the 'id' value of a HardDiskAdapter element in
            this document.
          type: string
        value:
          type: integer
          format: int32
      required:
        - ref
        - value
      additionalProperties: false
    vcloud_HardDiskAdapterType:
      title: vcloud_HardDiskAdapterType
      description: Hard disk controller type detailed description.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            id:
              description: Identifier for this type of hard disk controller.
              type: string
            legacyId:
              description: Legacy identifier for this type of hard disk controller.
              type: integer
              format: int32
            name:
              description: Name of the adapter type.
              type: string
            maximumDiskSizeGb:
              description: Maximum capacity (in GB) for any virtual hard disk connected
                to this adapter.
              type: integer
              format: int32
            busNumberRanges:
              description: Set of allowed bus number ranges for this disk controller.
              allOf:
                - $ref: '#/components/schemas/vcloud_RangesType'
            unitNumberRanges:
              description: Set of allowed disk unit number ranges for an instance
                of this disk controller type.
              allOf:
                - $ref: '#/components/schemas/vcloud_RangesType'
          required:
            - id
            - legacyId
            - name
            - maximumDiskSizeGb
            - busNumberRanges
            - unitNumberRanges
          additionalProperties: false
    vcloud_RangeType:
      title: vcloud_RangeType
      description: Range of integer values.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            begin:
              description: First value of range.
              type: integer
              format: int32
            end:
              description: Last value of range.
              type: integer
              format: int32
          required:
            - begin
            - end
          additionalProperties: false
    vcloud_RangesType:
      title: vcloud_RangesType
      description: Set of range of integer values.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            range:
              type: array
              items:
                $ref: '#/components/schemas/vcloud_RangeType'
          additionalProperties: false
    vcloud_NICBaseType:
      title: vcloud_NICBaseType
      type: object
      additionalProperties: false
    vcloud_NICType:
      title: vcloud_NICType
      description: Represents a supported virtual NIC type.
      allOf:
        - $ref: '#/components/schemas/vcloud_NICBaseType'
        - type: object
          properties:
            name:
              description: vSphere name of the virtual NIC type.
              type: string
            id:
              description: vCloud Director ID of the NIC.
              type: integer
              format: int32
          required:
            - name
          additionalProperties: false
    vcloud_HardDiskAdapterReferenceType:
      title: vcloud_HardDiskAdapterReferenceType
      description: The reference to a HardDiskAdapter element.
      type: object
      properties:
        ref:
          description: Reference to the 'id' value of a HardDiskAdapter element in
            this document.
          type: string
      required:
        - ref
      additionalProperties: false
    vcloud_OperatingSystemInfoType:
      title: vcloud_OperatingSystemInfoType
      description: Information about an individual operating system.
      allOf:
        - $ref: '#/components/schemas/vcloud_VCloudExtensibleType'
        - type: object
          properties:
            operatingSystemId:
              deprecated: true
              description: The operating system identifier.
              type: integer
              format: int32
            defaultHardDiskAdapterType:
              description: Default hard disk controller type for this operating system.
              allOf:
                - $ref: '#/components/schemas/vcloud_DefaultHardDiskAdapterTypeType'
            supportedHardDiskAdapter:
              description: Hard disk adapter types supported for this operating system.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_HardDiskAdapterReferenceType'
            minimumHardDiskSizeGigabytes:
              description: The minimum size of the primary hard disk for this operating
                system, in gigabytes.
              type: integer
              format: int32
            minimumMemoryMegabytes:
              description: The minimum amount of memory required to run this operating
                system, in megabytes.
              type: integer
              format: int32
            name:
              description: The name of the operating system.
              type: string
            internalName:
              description: An alternate identifier for this operating system.
              type: string
            supported:
              description: True if this operating system is supported for use in this
                organization.
              type: boolean
            x64:
              description: True if this operating system is supported for use on 64\-bit
                hardware.
              type: boolean
            maximumCpuCount:
              description: The maximum number of CPUs supported for use with this
                operating system.
              type: integer
              format: int32
            maximumCoresPerSocket:
              description: The maximum value allowed for CoresPerSocket in a VM with
                this guest operating system.
              type: integer
              format: int32
            maximumSocketCount:
              description: The maximum value allowed for NumberOfCpus in a VM with
                this guest operating system.
              type: integer
              format: int32
            minimumHardwareVersion:
              description: The minimum VMware hardware version required to run this
                operating system.
              type: integer
              format: int32
            personalizationEnabled:
              description: True if this operating system supports personalization.
              type: boolean
            personalizationAuto:
              description: True if this operating system supports automatic personalization.
              type: boolean
            sysprepPackagingSupported:
              description: True if this operating system supports use of Microsoft
                sysprep packaging. (Windows family only.)
              type: boolean
            supportsMemHotAdd:
              description: True if this operating system allows you to add memory
                to a running system.
              type: boolean
            cimOsId:
              description: Operating system identifier as specified by the DMTF common
                information model.
              type: integer
              format: int32
            cimVersion:
              description: Operating system version as specified by the DMTF common
                information model.
              type: integer
              format: int32
            supportedForCreate:
              description: True if this organization supports creation of new virtual
                machines with this OS type.
              type: boolean
            recommendedNIC:
              description: Default virtual NIC adapter type for this operating system.
              allOf:
                - $ref: '#/components/schemas/vcloud_NICType'
            supportedNICType:
              description: Supported virtual NIC type for this operating system.
              type: array
              items:
                $ref: '#/components/schemas/vcloud_NICType'
          required:
            - defaultHardDiskAdapterType
            - supportedHardDiskAdapter
            - minimumHardDiskSizeGigabytes
            - minimumMemoryMegabytes
            - name
            - internalName
            - supported
            - x64
            - maximumCpuCount
            - maximumCoresPerSocket
            - maximumSocketCount
            - personalizationEnabled
            - personalizationAuto
            - sysprepPackagingSupported
            - supportsMemHotAdd
            - cimOsId
            - cimVersion
            - supportedForCreate
            - recommendedNIC
            - supportedNICType
          additionalProperties: false
    versioning_SupportedVersionsType:
      title: versioning_SupportedVersionsType
      description: List all supported versions.
      type: object
      properties:
        versionInfo:
          description: Information about one version of the API.
          type: array
          items:
            $ref: '#/components/schemas/versioning_VersionInfoType'
      additionalProperties: false
    versioning_VersionInfoType:
      title: versioning_VersionInfoType
      description: Information for one version of the API.
      type: object
      properties:
        deprecated:
          description: Indicates whether the API version is deprecated for upcoming
            removal.
          type: boolean
        version:
          description: Version string.
          type: string
        loginUrl:
          description: Login URL for the version.
          type: string
        mediaTypeMapping:
          description: Media type mapping. This element is not present when the API
            version is 5.7 or higher.
          type: array
          items:
            $ref: '#/components/schemas/versioning_MediaTypeMappingType'
      additionalProperties: false
    versioning_MediaTypeMappingType:
      title: versioning_MediaTypeMappingType
      description: Mapping of a content media type to a xsd complex type.
      type: object
      properties:
        mediaType:
          description: Content media type.
          type: string
        complexTypeName:
          description: Complex type mapping.
          type: string
        schemaLocation:
          description: Location of the schema file describing the complex type.
          type: string
          format: uri
      additionalProperties: false
    ovf_Section_Type:
      type: object
      properties:
        info:
          type: object
          properties:
            value:
              type: string
    MetadataTypedValue:
      discriminator:
        propertyName: _type
        mapping:
          MetadataStringValue: '#/components/schemas/vcloud_MetadataStringValue'
          MetadataNumberValue: '#/components/schemas/vcloud_MetadataNumberValue'
          MetadataBooleanValue: '#/components/schemas/vcloud_MetadataBooleanValue'
          MetadataDateTimeValue: '#/components/schemas/vcloud_MetadataDateTimeValue'
      oneOf:
        - $ref: '#/components/schemas/vcloud_MetadataStringValue'
        - $ref: '#/components/schemas/vcloud_MetadataNumberValue'
        - $ref: '#/components/schemas/vcloud_MetadataBooleanValue'
        - $ref: '#/components/schemas/vcloud_MetadataDateTimeValue'
    QueryResultRecordType:
      discriminator:
        propertyName: _type
        mapping:
          QueryResultOrgRecordType: '#/components/schemas/vcloud_QueryResultOrgRecordType'
          QueryResultOrgVdcRecordType: '#/components/schemas/vcloud_QueryResultOrgVdcRecordType'
          QueryResultMediaRecordType: '#/components/schemas/vcloud_QueryResultMediaRecordType'
          QueryResultVAppTemplateRecordType: '#/components/schemas/vcloud_QueryResultVAppTemplateRecordType'
          QueryResultVAppRecordType: '#/components/schemas/vcloud_QueryResultVAppRecordType'
          QueryResultVMRecordType: '#/components/schemas/vcloud_QueryResultVMRecordType'
          QueryResultOrgNetworkRecordType: '#/components/schemas/vcloud_QueryResultOrgNetworkRecordType'
          QueryResultAdminOrgNetworkRecordType: '#/components/schemas/vcloud_QueryResultAdminOrgNetworkRecordType'
          QueryResultVAppNetworkRecordType: '#/components/schemas/vcloud_QueryResultVAppNetworkRecordType'
          QueryResultCatalogRecordType: '#/components/schemas/vcloud_QueryResultCatalogRecordType'
          QueryResultAdminVdcRecordType: '#/components/schemas/vcloud_QueryResultAdminVdcRecordType'
          QueryResultVMWProviderVdcRecordType: '#/components/schemas/vcloud_QueryResultVMWProviderVdcRecordType'
          QueryResultNetworkRecordType: '#/components/schemas/vcloud_QueryResultNetworkRecordType'
          QueryResultGroupRecordType: '#/components/schemas/vcloud_QueryResultGroupRecordType'
          QueryResultUserRecordType: '#/components/schemas/vcloud_QueryResultUserRecordType'
          QueryResultStrandedUserRecordType: '#/components/schemas/vcloud_QueryResultStrandedUserRecordType'
          QueryResultRoleRecordType: '#/components/schemas/vcloud_QueryResultRoleRecordType'
          QueryResultAllocatedExternalAddressRecordType: '#/components/schemas/vcloud_QueryResultAllocatedExternalAddressRecordType'
          QueryResultEventRecordType: '#/components/schemas/vcloud_QueryResultEventRecordType'
          QueryResultResourcePoolRecordType: '#/components/schemas/vcloud_QueryResultResourcePoolRecordType'
          QueryResultDatastoreRecordType: '#/components/schemas/vcloud_QueryResultDatastoreRecordType'
          QueryResultNetworkPoolRecordType: '#/components/schemas/vcloud_QueryResultNetworkPoolRecordType'
          QueryResultPortgroupRecordType: '#/components/schemas/vcloud_QueryResultPortgroupRecordType'
          QueryResultDvSwitchRecordType: '#/components/schemas/vcloud_QueryResultDvSwitchRecordType'
          QueryResultCellRecordType: '#/components/schemas/vcloud_QueryResultCellRecordType'
          QueryResultVirtualCenterRecordType: '#/components/schemas/vcloud_QueryResultVirtualCenterRecordType'
          QueryResultHostRecordType: '#/components/schemas/vcloud_QueryResultHostRecordType'
          QueryResultAdminVAppRecordType: '#/components/schemas/vcloud_QueryResultAdminVAppRecordType'
          QueryResultRightRecordType: '#/components/schemas/vcloud_QueryResultRightRecordType'
          QueryResultAdminVMRecordType: '#/components/schemas/vcloud_QueryResultAdminVMRecordType'
          QueryResultAdminAllocatedExternalAddressRecordType: '#/components/schemas/vcloud_QueryResultAdminAllocatedExternalAddressRecordType'
          QueryResultVAppOrgNetworkRelationRecordType: '#/components/schemas/vcloud_QueryResultVAppOrgNetworkRelationRecordType'
          QueryResultOrgVdcResourcePoolRelationRecordType: '#/components/schemas/vcloud_QueryResultOrgVdcResourcePoolRelationRecordType'
          QueryResultProviderVdcResourcePoolRelationRecordType: '#/components/schemas/vcloud_QueryResultProviderVdcResourcePoolRelationRecordType'
          QueryResultDatastoreProviderVdcRelationRecordType: '#/components/schemas/vcloud_QueryResultDatastoreProviderVdcRelationRecordType'
          QueryResultAdminUserRecordType: '#/components/schemas/vcloud_QueryResultAdminUserRecordType'
          QueryResultAdminGroupRecordType: '#/components/schemas/vcloud_QueryResultAdminGroupRecordType'
          QueryResultAdminVAppNetworkRecordType: '#/components/schemas/vcloud_QueryResultAdminVAppNetworkRecordType'
          QueryResultAdminCatalogRecordType: '#/components/schemas/vcloud_QueryResultAdminCatalogRecordType'
          QueryResultAdminCatalogItemRecordType: '#/components/schemas/vcloud_QueryResultAdminCatalogItemRecordType'
          QueryResultCatalogItemRecordType: '#/components/schemas/vcloud_QueryResultCatalogItemRecordType'
          QueryResultAdminMediaRecordType: '#/components/schemas/vcloud_QueryResultAdminMediaRecordType'
          QueryResultAdminVAppTemplateRecordType: '#/components/schemas/vcloud_QueryResultAdminVAppTemplateRecordType'
          QueryResultAdminShadowVMRecordType: '#/components/schemas/vcloud_QueryResultAdminShadowVMRecordType'
          QueryResultTaskRecordType: '#/components/schemas/vcloud_QueryResultTaskRecordType'
          QueryResultAdminTaskRecordType: '#/components/schemas/vcloud_QueryResultAdminTaskRecordType'
          QueryResultBlockingTaskRecordType: '#/components/schemas/vcloud_QueryResultBlockingTaskRecordType'
          QueryResultDiskRecordType: '#/components/schemas/vcloud_QueryResultDiskRecordType'
          QueryResultVmDiskRelationRecordType: '#/components/schemas/vcloud_QueryResultVmDiskRelationRecordType'
          QueryResultAdminDiskRecordType: '#/components/schemas/vcloud_QueryResultAdminDiskRecordType'
          QueryResultAdminVmDiskRelationRecordType: '#/components/schemas/vcloud_QueryResultAdminVmDiskRelationRecordType'
          QueryResultConditionRecordType: '#/components/schemas/vcloud_QueryResultConditionRecordType'
          QueryResultAdminEventRecordType: '#/components/schemas/vcloud_QueryResultAdminEventRecordType'
          QueryResultStrandedItemRecordType: '#/components/schemas/vcloud_QueryResultStrandedItemRecordType'
          QueryResultAdminServiceRecordType: '#/components/schemas/vcloud_QueryResultAdminServiceRecordType'
          QueryResultServiceRecordType: '#/components/schemas/vcloud_QueryResultServiceRecordType'
          QueryResultServiceLinkRecordType: '#/components/schemas/vcloud_QueryResultServiceLinkRecordType'
          QueryResultOrgVdcStorageProfileRecordType: '#/components/schemas/vcloud_QueryResultOrgVdcStorageProfileRecordType'
          QueryResultAdminOrgVdcStorageProfileRecordType: '#/components/schemas/vcloud_QueryResultAdminOrgVdcStorageProfileRecordType'
          QueryResultProviderVdcStorageProfileRecordType: '#/components/schemas/vcloud_QueryResultProviderVdcStorageProfileRecordType'
          QueryResultApiFilterRecordType: '#/components/schemas/vcloud_QueryResultApiFilterRecordType'
          QueryResultAdminApiDefinitionRecordType: '#/components/schemas/vcloud_QueryResultAdminApiDefinitionRecordType'
          QueryResultApiDefinitionRecordType: '#/components/schemas/vcloud_QueryResultApiDefinitionRecordType'
          QueryResultAdminFileDescriptorRecordType: '#/components/schemas/vcloud_QueryResultAdminFileDescriptorRecordType'
          QueryResultFileDescriptorRecordType: '#/components/schemas/vcloud_QueryResultFileDescriptorRecordType'
          QueryResultResourceClassActionRecordType: '#/components/schemas/vcloud_QueryResultResourceClassActionRecordType'
          QueryResultAclRuleRecordType: '#/components/schemas/vcloud_QueryResultAclRuleRecordType'
          QueryResultResourceClassRecordType: '#/components/schemas/vcloud_QueryResultResourceClassRecordType'
          QueryResultServiceResourceRecordType: '#/components/schemas/vcloud_QueryResultServiceResourceRecordType'
          QueryResultEdgeGatewayRecordType: '#/components/schemas/vcloud_QueryResultEdgeGatewayRecordType'
          QueryResultOrgVdcNetworkRecordType: '#/components/schemas/vcloud_QueryResultOrgVdcNetworkRecordType'
          QueryResultVAppOrgVdcNetworkRelationRecordType: '#/components/schemas/vcloud_QueryResultVAppOrgVdcNetworkRelationRecordType'
          QueryResultExternalLocalizationRecordType: '#/components/schemas/vcloud_QueryResultExternalLocalizationRecordType'
          QueryResultResourcePoolVMRecordType: '#/components/schemas/vcloud_QueryResultResourcePoolVMRecordType'
          QueryResultVmGroupVmsRecordType: '#/components/schemas/vcloud_QueryResultVmGroupVmsRecordType'
          QueryResultVmGroupsRecordType: '#/components/schemas/vcloud_QueryResultVmGroupsRecordType'
          QueryResultAdminRoleRecordType: '#/components/schemas/vcloud_QueryResultAdminRoleRecordType'
      oneOf:
        - $ref: '#/components/schemas/vcloud_QueryResultOrgRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultOrgVdcRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultMediaRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVAppTemplateRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVAppRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVMRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultOrgNetworkRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminOrgNetworkRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVAppNetworkRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultCatalogRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminVdcRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVMWProviderVdcRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultNetworkRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultGroupRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultUserRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultStrandedUserRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultRoleRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAllocatedExternalAddressRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultEventRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultResourcePoolRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultDatastoreRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultNetworkPoolRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultPortgroupRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultDvSwitchRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultCellRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVirtualCenterRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultHostRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminVAppRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultRightRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminVMRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminAllocatedExternalAddressRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVAppOrgNetworkRelationRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultOrgVdcResourcePoolRelationRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultProviderVdcResourcePoolRelationRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultDatastoreProviderVdcRelationRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminUserRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminGroupRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminVAppNetworkRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminCatalogRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminCatalogItemRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultCatalogItemRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminMediaRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminVAppTemplateRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminShadowVMRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultTaskRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminTaskRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultBlockingTaskRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultDiskRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVmDiskRelationRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminDiskRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminVmDiskRelationRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultConditionRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminEventRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultStrandedItemRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminServiceRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultServiceRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultServiceLinkRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultOrgVdcStorageProfileRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminOrgVdcStorageProfileRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultProviderVdcStorageProfileRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultApiFilterRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminApiDefinitionRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultApiDefinitionRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminFileDescriptorRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultFileDescriptorRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultResourceClassActionRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAclRuleRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultResourceClassRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultServiceResourceRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultEdgeGatewayRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultOrgVdcNetworkRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVAppOrgVdcNetworkRelationRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultExternalLocalizationRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultResourcePoolVMRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVmGroupVmsRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultVmGroupsRecordType'
        - $ref: '#/components/schemas/vcloud_QueryResultAdminRoleRecordType'
tags:
  - name: user
    description: These operations and queries are accessible to all users who have
      permission to log into an organization. User elements and user types represent
      the objects that these operations manipulate.
  - name: admin
    description: These operations and queries are accessible to organization administrators
      or system administrators. Administrator elements and types represent the objects
      that these operations manipulate.
  - name: extension
    description: These operations and queries are accessible to system administrators
      who need access to vSphere platform objects from the vCloud API. Extension elements
      and types represent the objects that these operations manipulate.
